(function(e){function t(a){if(r[a])return r[a].exports;var i=r[a]={i:a,l:!1,exports:{}};return e[a].call(i.exports,i,i.exports,t),i.l=!0,i.exports}var r={};return t.m=e,t.c=r,t.d=function(e,r,a){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:a})},t.r=function(e){'undefined'!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:'Module'}),Object.defineProperty(e,'__esModule',{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&'object'==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(t.r(a),Object.defineProperty(a,'default',{enumerable:!0,value:e}),2&r&&'string'!=typeof e)for(var i in e)t.d(a,i,function(t){return e[t]}.bind(null,i));return a},t.n=function(e){var r=e&&e.__esModule?function(){return e['default']}:function(){return e};return t.d(r,'a',r),r},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p='',t(t.s=0)})([function(e,t,r){e.exports=r(1)},function(e,t,r){'use strict';function a(){}function i(e=i.DEFAULT_IMAGE,t=i.DEFAULT_MAPPING,r=So,a=So,n=Ao,o=Co,s=jo,d=Po,l=1,p=Js){Object.defineProperty(this,'id',{value:_d++}),this.uuid=gd.generateUUID(),this.name='',this.image=e,this.mipmaps=[],this.mapping=t,this.wrapS=r,this.wrapT=a,this.magFilter=n,this.minFilter=o,this.anisotropy=l,this.format=s,this.internalFormat=null,this.type=d,this.offset=new hd(0,0),this.repeat=new hd(1,1),this.center=new hd(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new yd,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=p,this.version=0,this.onUpdate=null}function n(e){return'undefined'!=typeof HTMLImageElement&&e instanceof HTMLImageElement||'undefined'!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||'undefined'!=typeof ImageBitmap&&e instanceof ImageBitmap?xd.getDataURL(e):e.data?{data:Array.prototype.slice.call(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn('THREE.Texture: Unable to serialize Texture.'),{})}function o(e,t,r){this.width=e,this.height=t,this.scissor=new bd(0,0,e,t),this.scissorTest=!1,this.viewport=new bd(0,0,e,t),r=r||{},this.texture=new i(void 0,r.mapping,r.wrapS,r.wrapT,r.magFilter,r.minFilter,r.format,r.type,r.anisotropy,r.encoding),this.texture.image={},this.texture.image.width=e,this.texture.image.height=t,this.texture.generateMipmaps=r.generateMipmaps!==void 0&&r.generateMipmaps,this.texture.minFilter=r.minFilter===void 0?Ao:r.minFilter,this.depthBuffer=!(r.depthBuffer!==void 0)||r.depthBuffer,this.stencilBuffer=r.stencilBuffer!==void 0&&r.stencilBuffer,this.depthTexture=r.depthTexture===void 0?null:r.depthTexture}function s(e,t,r){o.call(this,e,t,r),this.samples=4}function d(e,t,a,n,o){for(let s=0,r=e.length-3;s<=r;s+=3){Fd.fromArray(e,s);const i=o.x*on(Fd.x)+o.y*on(Fd.y)+o.z*on(Fd.z),r=t.dot(Fd),d=a.dot(Fd),l=n.dot(Fd);if(hn(-hn(r,d,l),yn(r,d,l))>i)return!1}return!0}function l(){Object.defineProperty(this,'id',{value:dl++}),this.uuid=gd.generateUUID(),this.name='',this.type='Object3D',this.parent=null,this.children=[],this.up=l.DefaultUp.clone();const e=new Sd,t=new il,r=new Md,a=new Sd(1,1,1);t._onChange(function(){r.setFromEuler(t,!1)}),r._onChange(function(){t.setFromQuaternion(r,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:r},scale:{configurable:!0,enumerable:!0,value:a},modelViewMatrix:{value:new Jd},normalMatrix:{value:new yd}}),this.matrix=new Jd,this.matrixWorld=new Jd,this.matrixAutoUpdate=l.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new sl,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}function c(e,r,a){return 0>a&&(a+=1),1<a&&(a-=1),a<1/6?e+6*(r-e)*a:a<1/2?r:a<2/3?e+6*(r-e)*(2/3-a):e}function p(e){return .04045>e?.0773993808*e:cn(.9478672986*e+.0521327014,2.4)}function u(e){return .0031308>e?12.92*e:1.055*cn(e,.41666)-.055}function m(){Object.defineProperty(this,'id',{value:Ol++}),this.uuid=gd.generateUUID(),this.name='',this.type='Material',this.fog=!0,this.blending=Cn,this.side=En,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=Wn,this.blendDst=jn,this.blendEquation=zn,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=eo,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=ld,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=dd,this.stencilZFail=dd,this.stencilZPass=dd,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}function f(e){m.call(this),this.type='MeshBasicMaterial',this.color=new Fl(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=no,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap='round',this.wireframeLinejoin='round',this.skinning=!1,this.morphTargets=!1,this.setValues(e)}function g(e,t,r){if(Array.isArray(e))throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');this.name='',this.array=e,this.itemSize=t,this.count=e===void 0?0:e.length/t,this.normalized=!0===r,this.usage=pd,this.updateRange={offset:0,count:-1},this.version=0}function h(e,t,r){g.call(this,new Int8Array(e),t,r)}function y(e,t,r){g.call(this,new Uint8Array(e),t,r)}function v(e,t,r){g.call(this,new Uint8ClampedArray(e),t,r)}function x(e,t,r){g.call(this,new Int16Array(e),t,r)}function _(e,t,r){g.call(this,new Uint16Array(e),t,r)}function b(e,t,r){g.call(this,new Int32Array(e),t,r)}function M(e,t,r){g.call(this,new Uint32Array(e),t,r)}function S(e,t,r){g.call(this,new Uint16Array(e),t,r)}function E(e,t,r){g.call(this,new Float32Array(e),t,r)}function T(e,t,r){g.call(this,new Float64Array(e),t,r)}function w(e){if(0===e.length)return-Infinity;let t=e[0];for(let r=1,a=e.length;r<a;++r)e[r]>t&&(t=e[r]);return t}function L(e,t){return new jl[e](t)}function A(){Object.defineProperty(this,'id',{value:Xl+=2}),this.uuid=gd.generateUUID(),this.name='',this.type='BufferGeometry',this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:Infinity},this.userData={}}function R(e=new A,t=new f){l.call(this),this.type='Mesh',this.geometry=e,this.material=t,this.updateMorphTargets()}function C(e,t,r,a,i,n,o,s){let d;if(d=t.side===wn?a.intersectTriangle(o,n,i,!0,s):a.intersectTriangle(i,n,o,t.side!==Ln,s),null===d)return null;gp.copy(s),gp.applyMatrix4(e.matrixWorld);const l=r.ray.origin.distanceTo(gp);return l<r.near||l>r.far?null:{distance:l,point:gp.clone(),object:e}}function P(e,t,r,i,n,o,s,d,l,p,a,u){rp.fromBufferAttribute(n,p),ap.fromBufferAttribute(n,a),ip.fromBufferAttribute(n,u);const c=e.morphTargetInfluences;if(t.morphTargets&&o&&c){dp.set(0,0,0),lp.set(0,0,0),pp.set(0,0,0);for(let e=0,t=o.length;e<t;e++){const t=c[e],r=o[e];0===t||(np.fromBufferAttribute(r,p),op.fromBufferAttribute(r,a),sp.fromBufferAttribute(r,u),s?(dp.addScaledVector(np,t),lp.addScaledVector(op,t),pp.addScaledVector(sp,t)):(dp.addScaledVector(np.sub(rp),t),lp.addScaledVector(op.sub(ap),t),pp.addScaledVector(sp.sub(ip),t)))}rp.add(dp),ap.add(lp),ip.add(pp)}e.isSkinnedMesh&&(e.boneTransform(p,rp),e.boneTransform(a,ap),e.boneTransform(u,ip));const m=C(e,t,r,i,rp,ap,ip,fp);if(m){d&&(cp.fromBufferAttribute(d,p),up.fromBufferAttribute(d,a),mp.fromBufferAttribute(d,u),m.uv=zl.getUV(fp,rp,ap,ip,cp,up,mp,new hd)),l&&(cp.fromBufferAttribute(l,p),up.fromBufferAttribute(l,a),mp.fromBufferAttribute(l,u),m.uv2=zl.getUV(fp,rp,ap,ip,cp,up,mp,new hd));const e=new Gl(p,a,u);zl.getNormal(rp,ap,ip,e.normal),m.face=e}return m}function I(e){const t={};for(const r in e)for(const a in t[r]={},e[r]){const i=e[r][a];t[r][a]=i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture)?i.clone():Array.isArray(i)?i.slice():i}return t}function N(e){const t={};for(let r=0;r<e.length;r++){const a=I(e[r]);for(const e in a)t[e]=a[e]}return t}function D(e){m.call(this),this.type='ShaderMaterial',this.defines={},this.uniforms={},this.vertexShader=vp,this.fragmentShader=xp,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&(e.attributes!==void 0&&console.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.'),this.setValues(e))}function z(){l.call(this),this.type='Camera',this.matrixWorldInverse=new Jd,this.projectionMatrix=new Jd,this.projectionMatrixInverse=new Jd}function B(e=50,t=1,r=.1,a=2e3){z.call(this),this.type='PerspectiveCamera',this.fov=e,this.zoom=1,this.near=r,this.far=a,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}function U(e,t,r){if(l.call(this),this.type='CubeCamera',!0!==r.isWebGLCubeRenderTarget)return void console.error('THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.');this.renderTarget=r;const a=new B(_p,bp,e,t);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new Sd(1,0,0)),this.add(a);const i=new B(_p,bp,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new Sd(-1,0,0)),this.add(i);const n=new B(_p,bp,e,t);n.layers=this.layers,n.up.set(0,0,1),n.lookAt(new Sd(0,1,0)),this.add(n);const o=new B(_p,bp,e,t);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new Sd(0,-1,0)),this.add(o);const s=new B(_p,bp,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new Sd(0,0,1)),this.add(s);const d=new B(_p,bp,e,t);d.layers=this.layers,d.up.set(0,-1,0),d.lookAt(new Sd(0,0,-1)),this.add(d),this.update=function(e,t){null===this.parent&&this.updateMatrixWorld();const l=e.xr.enabled,p=e.getRenderTarget();e.xr.enabled=!1;const c=r.texture.generateMipmaps;r.texture.generateMipmaps=!1,e.setRenderTarget(r,0),e.render(t,a),e.setRenderTarget(r,1),e.render(t,i),e.setRenderTarget(r,2),e.render(t,n),e.setRenderTarget(r,3),e.render(t,o),e.setRenderTarget(r,4),e.render(t,s),r.texture.generateMipmaps=c,e.setRenderTarget(r,5),e.render(t,d),e.setRenderTarget(p),e.xr.enabled=l}}function H(e,t,r,a,n,o,s,d,l,p){e=e===void 0?[]:e,t=t===void 0?ho:t,s=s===void 0?Wo:s,i.call(this,e,t,r,a,n,o,s,d,l,p),this.flipY=!1,this._needsFlipEnvMap=!0}function F(e,t,r){$i(t)&&(console.warn('THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )'),t=r),o.call(this,e,e,t),t=t||{},this.texture=new H(void 0,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture._needsFlipEnvMap=!1}function G(e,t,r,a,n,o,s,d,l,p,c,u){i.call(this,null,o,s,d,l,p,a,n,c,u),this.image={data:e||null,width:t||1,height:r||1},this.magFilter=l===void 0?Eo:l,this.minFilter=p===void 0?Eo:p,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}function O(){function e(r,n){a(r,n),i=t.requestAnimationFrame(e)}let t=null,r=!1,a=null,i=null;return{start:function(){!0==r||null===a||(i=t.requestAnimationFrame(e),r=!0)},stop:function(){t.cancelAnimationFrame(i),r=!1},setAnimationLoop:function(e){a=e},setContext:function(e){t=e}}}function V(e,t){function r(t,r){const a=t.array,n=t.usage,o=e.createBuffer();e.bindBuffer(r,o),e.bufferData(r,a,n),t.onUploadCallback();let s=5126;return a instanceof Float32Array?s=5126:a instanceof Float64Array?console.warn('THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.'):a instanceof Uint16Array?t.isFloat16BufferAttribute?i?s=5131:console.warn('THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.'):s=5123:a instanceof Int16Array?s=5122:a instanceof Uint32Array?s=5125:a instanceof Int32Array?s=5124:a instanceof Int8Array?s=5120:a instanceof Uint8Array&&(s=5121),{buffer:o,type:s,bytesPerElement:a.BYTES_PER_ELEMENT,version:t.version}}function a(t,r,a){const n=r.array,o=r.updateRange;e.bindBuffer(a,t),-1===o.count?e.bufferSubData(a,0,n):(i?e.bufferSubData(a,o.offset*n.BYTES_PER_ELEMENT,n,o.offset,o.count):e.bufferSubData(a,o.offset*n.BYTES_PER_ELEMENT,n.subarray(o.offset,o.offset+o.count)),o.count=-1)}const i=t.isWebGL2,n=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),n.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);const r=n.get(t);r&&(e.deleteBuffer(r.buffer),n.delete(t))},update:function(e,t){if(e.isGLBufferAttribute){const t=n.get(e);return void((!t||t.version<e.version)&&n.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}))}e.isInterleavedBufferAttribute&&(e=e.data);const i=n.get(e);i===void 0?n.set(e,r(e,t)):i.version<e.version&&(a(i.buffer,e,t),i.version=e.version)}}}function k(e,t,r,a,i){function n(r,i,n,f){let g=!0===i.isScene?i.background:null;g&&g.isTexture&&(g=t.get(g));const h=e.xr,y=h.getSession&&h.getSession();y&&'additive'===y.environmentBlendMode&&(g=null),null===g?o(s,d):g&&g.isColor&&(o(g,1),f=!0),(e.autoClear||f)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),g&&(g.isCubeTexture||g.isWebGLCubeRenderTarget||g.mapping===_o)?(m===void 0&&(m=new R(new hp(1,1,1),new D({name:'BackgroundCubeMaterial',uniforms:I(Ap.cube.uniforms),vertexShader:Ap.cube.vertexShader,fragmentShader:Ap.cube.fragmentShader,side:wn,depthTest:!1,depthWrite:!1,fog:!1})),m.geometry.deleteAttribute('normal'),m.geometry.deleteAttribute('uv'),m.onBeforeRender=function(e,t,r){this.matrixWorld.copyPosition(r.matrixWorld)},Object.defineProperty(m.material,'envMap',{get:function(){return this.uniforms.envMap.value}}),a.update(m)),g.isWebGLCubeRenderTarget&&(g=g.texture),m.material.uniforms.envMap.value=g,m.material.uniforms.flipEnvMap.value=g.isCubeTexture&&g._needsFlipEnvMap?-1:1,(l!==g||p!==g.version||c!==e.toneMapping)&&(m.material.needsUpdate=!0,l=g,p=g.version,c=e.toneMapping),r.unshift(m,m.geometry,m.material,0,0,null)):g&&g.isTexture&&(u===void 0&&(u=new R(new Ep(2,2),new D({name:'BackgroundMaterial',uniforms:I(Ap.background.uniforms),vertexShader:Ap.background.vertexShader,fragmentShader:Ap.background.fragmentShader,side:En,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute('normal'),Object.defineProperty(u.material,'map',{get:function(){return this.uniforms.t2D.value}}),a.update(u)),u.material.uniforms.t2D.value=g,!0===g.matrixAutoUpdate&&g.updateMatrix(),u.material.uniforms.uvTransform.value.copy(g.matrix),(l!==g||p!==g.version||c!==e.toneMapping)&&(u.material.needsUpdate=!0,l=g,p=g.version,c=e.toneMapping),r.unshift(u,u.geometry,u.material,0,0,null))}function o(e,t){r.buffers.color.setClear(e.r,e.g,e.b,t,i)}const s=new Fl(0);let d=0,l=null,p=0,c=null,u,m;return{getClearColor:function(){return s},setClearColor:function(e,t=1){s.set(e),d=t,o(s,d)},getClearAlpha:function(){return d},setClearAlpha:function(e){d=e,o(s,d)},render:n}}function W(e,t,r,a){function i(t,a,i,n,s){let l=!1;if(M){const e=d(n,i,a);E!==e&&(E=e,o(E.object)),l=p(n,s),l&&c(n,s)}else{const e=!0===a.wireframe;(E.geometry!==n.id||E.program!==i.id||E.wireframe!==e)&&(E.geometry=n.id,E.program=i.id,E.wireframe=e,l=!0)}!0===t.isInstancedMesh&&(l=!0),null!==s&&r.update(s,34963),l&&(y(t,a,i,n),null!==s&&e.bindBuffer(34963,r.get(s).buffer))}function n(){return a.isWebGL2?e.createVertexArray():b.createVertexArrayOES()}function o(t){return a.isWebGL2?e.bindVertexArray(t):b.bindVertexArrayOES(t)}function s(t){return a.isWebGL2?e.deleteVertexArray(t):b.deleteVertexArrayOES(t)}function d(e,t,r){const a=!0===r.wireframe;let i=S[e.id];void 0===i&&(i={},S[e.id]=i);let o=i[t.id];void 0===o&&(o={},i[t.id]=o);let s=o[a];return void 0===s&&(s=l(n()),o[a]=s),s}function l(e){const t=[],r=[],a=[];for(let n=0;n<_;n++)t[n]=0,r[n]=0,a[n]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:r,attributeDivisors:a,object:e,attributes:{},index:null}}function p(e,t){const r=E.attributes,a=e.attributes;let i=0;for(const n in a){const e=r[n],t=a[n];if(e===void 0)return!0;if(e.attribute!==t)return!0;if(e.data!==t.data)return!0;i++}return E.attributesNum!==i||E.index!==t}function c(e,t){const r={},a=e.attributes;let i=0;for(const n in a){const e=a[n],t={};t.attribute=e,e.data&&(t.data=e.data),r[n]=t,i++}E.attributes=r,E.attributesNum=i,E.index=t}function u(){const e=E.newAttributes;for(let t=0,r=e.length;t<r;t++)e[t]=0}function m(e){f(e,0)}function f(r,i){const n=E.newAttributes,o=E.enabledAttributes,s=E.attributeDivisors;if(n[r]=1,0===o[r]&&(e.enableVertexAttribArray(r),o[r]=1),s[r]!==i){const n=a.isWebGL2?e:t.get('ANGLE_instanced_arrays');n[a.isWebGL2?'vertexAttribDivisor':'vertexAttribDivisorANGLE'](r,i),s[r]=i}}function g(){const t=E.newAttributes,r=E.enabledAttributes;for(let a=0,i=r.length;a<i;a++)r[a]!==t[a]&&(e.disableVertexAttribArray(a),r[a]=0)}function h(t,r,i,n,o,s){!0===a.isWebGL2&&(5124===i||5125===i)?e.vertexAttribIPointer(t,r,i,o,s):e.vertexAttribPointer(t,r,i,n,o,s)}function y(i,n,o,s){if(!(!1===a.isWebGL2&&(i.isInstancedMesh||s.isInstancedBufferGeometry)&&null===t.get('ANGLE_instanced_arrays'))){u();const t=s.attributes,a=o.getAttributes(),d=n.defaultAttributeValues;for(const n in a){const o=a[n];if(0<=o){const a=t[n];if(void 0!==a){const t=a.normalized,i=a.itemSize,n=r.get(a);if(void 0===n)continue;const d=n.buffer,l=n.type,p=n.bytesPerElement;if(a.isInterleavedBufferAttribute){const r=a.data,n=r.stride,c=a.offset;r&&r.isInstancedInterleavedBuffer?(f(o,r.meshPerAttribute),void 0===s._maxInstanceCount&&(s._maxInstanceCount=r.meshPerAttribute*r.count)):m(o),e.bindBuffer(34962,d),h(o,i,l,t,n*p,c*p)}else a.isInstancedBufferAttribute?(f(o,a.meshPerAttribute),void 0===s._maxInstanceCount&&(s._maxInstanceCount=a.meshPerAttribute*a.count)):m(o),e.bindBuffer(34962,d),h(o,i,l,t,0,0)}else if('instanceMatrix'==n){const t=r.get(i.instanceMatrix);if(void 0===t)continue;const a=t.buffer,n=t.type;f(o+0,1),f(o+1,1),f(o+2,1),f(o+3,1),e.bindBuffer(34962,a),e.vertexAttribPointer(o+0,4,n,!1,64,0),e.vertexAttribPointer(o+1,4,n,!1,64,16),e.vertexAttribPointer(o+2,4,n,!1,64,32),e.vertexAttribPointer(o+3,4,n,!1,64,48)}else if('instanceColor'==n){const t=r.get(i.instanceColor);if(void 0===t)continue;const a=t.buffer,n=t.type;f(o,1),e.bindBuffer(34962,a),e.vertexAttribPointer(o,3,n,!1,12,0)}else if(void 0!==d){const t=d[n];if(void 0!==t)switch(t.length){case 2:e.vertexAttrib2fv(o,t);break;case 3:e.vertexAttrib3fv(o,t);break;case 4:e.vertexAttrib4fv(o,t);break;default:e.vertexAttrib1fv(o,t);}}}}g()}}function v(){x();E===T||(E=T,o(E.object))}function x(){T.geometry=null,T.program=null,T.wireframe=!1}const _=e.getParameter(34921),b=a.isWebGL2?null:t.get('OES_vertex_array_object'),M=a.isWebGL2||null!==b,S={},T=l(null);let E=T;return{setup:i,reset:v,resetDefaultState:x,dispose:function(){for(const e in v(),S){const t=S[e];for(const e in t){const r=t[e];for(const e in r)s(r[e].object),delete r[e];delete t[e]}delete S[e]}},releaseStatesOfGeometry:function(e){if(void 0!==S[e.id]){const t=S[e.id];for(const e in t){const r=t[e];for(const e in r)s(r[e].object),delete r[e];delete t[e]}delete S[e.id]}},releaseStatesOfProgram:function(e){for(const t in S){const r=S[t];if(void 0===r[e.id])continue;const a=r[e.id];for(const e in a)s(a[e].object),delete a[e];delete r[e.id]}},initAttributes:u,enableAttribute:m,disableUnusedAttributes:g}}function j(e,t,r,a){function i(t,a){e.drawArrays(s,t,a),r.update(a,s,1)}function n(a,i,n){if(0===n)return;let d,l;if(o)d=e,l='drawArraysInstanced';else if(d=t.get('ANGLE_instanced_arrays'),l='drawArraysInstancedANGLE',null===d)return void console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');d[l](s,a,i,n),r.update(i,s,n)}const o=a.isWebGL2;let s;this.setMode=function(e){s=e},this.render=i,this.renderInstances=n}function X(e,t,r){function a(){if(void 0!==n)return n;const r=t.get('EXT_texture_filter_anisotropic');return n=null===r?0:e.getParameter(r.MAX_TEXTURE_MAX_ANISOTROPY_EXT),n}function i(t){if('highp'===t){if(0<e.getShaderPrecisionFormat(35633,36338).precision&&0<e.getShaderPrecisionFormat(35632,36338).precision)return'highp';t='mediump'}return'mediump'===t&&0<e.getShaderPrecisionFormat(35633,36337).precision&&0<e.getShaderPrecisionFormat(35632,36337).precision?'mediump':'lowp'}let n;const o='undefined'!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||'undefined'!=typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext;let s=r.precision===void 0?'highp':r.precision;const d=i(s);d!==s&&(console.warn('THREE.WebGLRenderer:',s,'not supported, using',d,'instead.'),s=d);const l=!0===r.logarithmicDepthBuffer,p=e.getParameter(34930),c=e.getParameter(35660),u=e.getParameter(3379),m=e.getParameter(34076),f=e.getParameter(34921),g=e.getParameter(36347),h=e.getParameter(36348),y=e.getParameter(36349),v=0<c,x=o||!!t.get('OES_texture_float'),_=o?e.getParameter(36183):0;return{isWebGL2:o,getMaxAnisotropy:a,getMaxPrecision:i,precision:s,logarithmicDepthBuffer:l,maxTextures:p,maxVertexTextures:c,maxTextureSize:u,maxCubemapSize:m,maxAttributes:f,maxVertexUniforms:g,maxVaryings:h,maxFragmentUniforms:y,vertexTextures:v,floatFragmentTextures:x,floatVertexTextures:v&&x,maxSamples:_}}function q(e){function t(){p.value!==n&&(p.value=n,p.needsUpdate=0<i),a.numPlanes=i,a.numIntersection=0}function r(e,t,r,i){const n=null===e?0:e.length;let o=null;if(0!==n){if(o=p.value,!0!==i||null===o){const a=r+4*n,s=t.matrixWorldInverse;l.getNormalMatrix(s),(null===o||o.length<a)&&(o=new Float32Array(a));for(let t=0,a=r;t!==n;++t,a+=4)d.copy(e[t]).applyMatrix4(s,l),d.normal.toArray(o,a),o[a+3]=d.constant}p.value=o,p.needsUpdate=!0}return a.numPlanes=n,a.numIntersection=0,o}const a=this;let n=null,i=0,o=!1,s=!1;const d=new Tl,l=new yd,p={value:null,needsUpdate:!1};this.uniform=p,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,a){const s=0!==e.length||t||0!==i||o;return o=t,n=r(e,a,0),i=e.length,s},this.beginShadows=function(){s=!0,r(null)},this.endShadows=function(){s=!1,t()},this.setState=function(a,d,l){const c=a.clippingPlanes,u=a.clipIntersection,m=a.clipShadows,f=e.get(a);if(!o||null===c||0===c.length||s&&!m)s?r(null):t();else{const e=s?0:i,t=4*e;let a=f.clippingState||null;p.value=a,a=r(c,d,t,l);for(let e=0;e!==t;++e)a[e]=n[e];f.clippingState=a,this.numIntersection=u?this.numPlanes:0,this.numPlanes+=e}}}function Y(e){function t(e,t){return t===vo?e.mapping=ho:t===xo&&(e.mapping=yo),e}function r(r){if(r&&r.isTexture){const n=r.mapping;if(n===vo||n===xo)if(i.has(r)){const e=i.get(r).texture;return t(e,r.mapping)}else{const n=r.image;if(n&&0<n.height){const o=e.getRenderList(),s=e.getRenderTarget(),d=new F(n.height/2);return d.fromEquirectangularTexture(e,r),i.set(r,d),e.setRenderTarget(s),e.setRenderList(o),r.addEventListener('dispose',a),t(d.texture,r.mapping)}return null}}return r}function a(e){const t=e.target;t.removeEventListener('dispose',a);const r=i.get(t);r!==void 0&&(i.delete(t),r.dispose())}let i=new WeakMap;return{get:r,dispose:function(){i=new WeakMap}}}function Z(e){const t={};return{has:function(r){if(void 0!==t[r])return null!==t[r];let a;return a='WEBGL_depth_texture'===r?e.getExtension('WEBGL_depth_texture')||e.getExtension('MOZ_WEBGL_depth_texture')||e.getExtension('WEBKIT_WEBGL_depth_texture'):'EXT_texture_filter_anisotropic'===r?e.getExtension('EXT_texture_filter_anisotropic')||e.getExtension('MOZ_EXT_texture_filter_anisotropic')||e.getExtension('WEBKIT_EXT_texture_filter_anisotropic'):'WEBGL_compressed_texture_s3tc'===r?e.getExtension('WEBGL_compressed_texture_s3tc')||e.getExtension('MOZ_WEBGL_compressed_texture_s3tc')||e.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc'):'WEBGL_compressed_texture_pvrtc'===r?e.getExtension('WEBGL_compressed_texture_pvrtc')||e.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc'):e.getExtension(r),t[r]=a,null!==a},get:function(e){return this.has(e)||console.warn('THREE.WebGLRenderer: '+e+' extension not supported.'),t[e]}}}function J(e,t,r,a){function i(e){const n=e.target,d=o.get(n);for(const r in null!==d.index&&t.remove(d.index),d.attributes)t.remove(d.attributes[r]);n.removeEventListener('dispose',i),o.delete(n);const l=s.get(d);l&&(t.remove(l),s.delete(d)),a.releaseStatesOfGeometry(d),!0===n.isInstancedBufferGeometry&&delete n._maxInstanceCount,r.memory.geometries--}function n(e){const r=[],a=e.index,i=e.attributes.position;let n=0;if(null!==a){const e=a.array;n=a.version;for(let t=0,a=e.length;t<a;t+=3){const i=e[t+0],a=e[t+1],n=e[t+2];r.push(i,a,a,n,n,i)}}else{const e=i.array;n=i.version;for(let t=0,a=e.length/3-1;t<a;t+=3){const e=t+0,a=t+1,i=t+2;r.push(e,a,a,i,i,e)}}const o=new(65535<w(r)?M:_)(r,1);o.version=n;const d=s.get(e);d&&t.remove(d),s.set(e,o)}const o=new WeakMap,s=new WeakMap;return{get:function(e,t){let a=o.get(t);return a?a:(t.addEventListener('dispose',i),t.isBufferGeometry?a=t:t.isGeometry&&(void 0===t._bufferGeometry&&(t._bufferGeometry=new A().setFromObject(e)),a=t._bufferGeometry),o.set(t,a),r.memory.geometries++,a)},update:function(e){const r=e.attributes;for(const a in r)t.update(r[a],34962);const a=e.morphAttributes;for(const r in a){const e=a[r];for(let r=0,a=e.length;r<a;r++)t.update(e[r],34962)}},getWireframeAttribute:function(e){const t=s.get(e);if(t){const r=e.index;null!==r&&t.version<r.version&&n(e)}else n(e);return s.get(e)}}}function Q(e,t,r,a){function i(t,a){e.drawElements(s,a,d,t*l),r.update(a,s,1)}function n(a,i,n){if(0===n)return;let p,c;if(o)p=e,c='drawElementsInstanced';else if(p=t.get('ANGLE_instanced_arrays'),c='drawElementsInstancedANGLE',null===p)return void console.error('THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');p[c](s,i,d,a*l,n),r.update(i,s,n)}const o=a.isWebGL2;let s,d,l;this.setMode=function(e){s=e},this.setIndex=function(e){d=e.type,l=e.bytesPerElement},this.render=i,this.renderInstances=n}function K(){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,r,a){switch(e.calls++,r){case 4:e.triangles+=a*(t/3);break;case 1:e.lines+=a*(t/2);break;case 3:e.lines+=a*(t-1);break;case 2:e.lines+=a*t;break;case 0:e.points+=a*t;break;default:console.error('THREE.WebGLInfo: Unknown draw mode:',r);}}}}function $(e,t){return e[0]-t[0]}function ee(e,t){return on(t[1])-on(e[1])}function te(e){const t={},r=new Float32Array(8),a=[];for(let t=0;8>t;t++)a[t]=[t,0];return{update:function(i,n,o,s){var d=Number.MAX_SAFE_INTEGER;const l=i.morphTargetInfluences,p=l===void 0?0:l.length;let c=t[n.id];if(c===void 0){c=[];for(let e=0;e<p;e++)c[e]=[e,0];t[n.id]=c}for(let e=0;e<p;e++){const t=c[e];t[0]=e,t[1]=l[e]}c.sort(ee);for(let e=0;8>e;e++)e<p&&c[e][1]?(a[e][0]=c[e][0],a[e][1]=c[e][1]):(a[e][0]=d,a[e][1]=0);a.sort($);const u=o.morphTargets&&n.morphAttributes.position,m=o.morphNormals&&n.morphAttributes.normal;let f=0;for(let e=0;8>e;e++){const t=a[e],i=t[0],o=t[1];i!==d&&o?(u&&n.getAttribute('morphTarget'+e)!==u[i]&&n.setAttribute('morphTarget'+e,u[i]),m&&n.getAttribute('morphNormal'+e)!==m[i]&&n.setAttribute('morphNormal'+e,m[i]),r[e]=o,f+=o):(u&&!0===n.hasAttribute('morphTarget'+e)&&n.deleteAttribute('morphTarget'+e),m&&!0===n.hasAttribute('morphNormal'+e)&&n.deleteAttribute('morphNormal'+e),r[e]=0)}const g=n.morphTargetsRelative?1:1-f;s.getUniforms().setValue(e,'morphTargetBaseInfluence',g),s.getUniforms().setValue(e,'morphTargetInfluences',r)}}}function re(e,t,r,a){function i(e){const i=a.render.frame,s=e.geometry,d=t.get(e,s);return o.get(d)!==i&&(s.isGeometry&&d.updateFromObject(e),t.update(d),o.set(d,i)),e.isInstancedMesh&&(!1===e.hasEventListener('dispose',n)&&e.addEventListener('dispose',n),r.update(e.instanceMatrix,34962),null!==e.instanceColor&&r.update(e.instanceColor,34962)),d}function n(e){const t=e.target;t.removeEventListener('dispose',n),r.remove(t.instanceMatrix),null!==t.instanceColor&&r.remove(t.instanceColor)}let o=new WeakMap;return{update:i,dispose:function(){o=new WeakMap}}}function ae(e=null,t=1,r=1,a=1){i.call(this,null),this.image={data:e,width:t,height:r,depth:a},this.magFilter=Eo,this.minFilter=Eo,this.wrapR=So,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}function ie(e=null,t=1,r=1,a=1){i.call(this,null),this.image={data:e,width:t,height:r,depth:a},this.magFilter=Eo,this.minFilter=Eo,this.wrapR=So,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}function ne(e,t,a){const i=e[0];if(0>=i||0<i)return e;const o=t*a;let n=Np[o];if(void 0===n&&(n=new Float32Array(o),Np[o]=n),0!==t){i.toArray(n,0);for(let r=1,i=0;r!==t;++r)i+=a,e[r].toArray(n,i)}return n}function oe(e,t){if(e.length!==t.length)return!1;for(let r=0,a=e.length;r<a;r++)if(e[r]!==t[r])return!1;return!0}function se(e,t){for(let r=0,a=t.length;r<a;r++)e[r]=t[r]}function de(e,t){let a=Dp[t];a===void 0&&(a=new Int32Array(t),Dp[t]=a);for(let r=0;r!==t;++r)a[r]=e.allocateTextureUnit();return a}function le(e,t){const r=this.cache;r[0]===t||(e.uniform1f(this.addr,t),r[0]=t)}function pe(e,t){const r=this.cache;if(t.x!==void 0)(r[0]!==t.x||r[1]!==t.y)&&(e.uniform2f(this.addr,t.x,t.y),r[0]=t.x,r[1]=t.y);else{if(oe(r,t))return;e.uniform2fv(this.addr,t),se(r,t)}}function ce(e,t){const r=this.cache;if(t.x!==void 0)(r[0]!==t.x||r[1]!==t.y||r[2]!==t.z)&&(e.uniform3f(this.addr,t.x,t.y,t.z),r[0]=t.x,r[1]=t.y,r[2]=t.z);else if(t.r!==void 0)(r[0]!==t.r||r[1]!==t.g||r[2]!==t.b)&&(e.uniform3f(this.addr,t.r,t.g,t.b),r[0]=t.r,r[1]=t.g,r[2]=t.b);else{if(oe(r,t))return;e.uniform3fv(this.addr,t),se(r,t)}}function ue(e,t){const r=this.cache;if(t.x!==void 0)(r[0]!==t.x||r[1]!==t.y||r[2]!==t.z||r[3]!==t.w)&&(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),r[0]=t.x,r[1]=t.y,r[2]=t.z,r[3]=t.w);else{if(oe(r,t))return;e.uniform4fv(this.addr,t),se(r,t)}}function me(e,t){const r=this.cache,a=t.elements;if(a===void 0){if(oe(r,t))return;e.uniformMatrix2fv(this.addr,!1,t),se(r,t)}else{if(oe(r,a))return;Up.set(a),e.uniformMatrix2fv(this.addr,!1,Up),se(r,a)}}function fe(e,t){const r=this.cache,a=t.elements;if(a===void 0){if(oe(r,t))return;e.uniformMatrix3fv(this.addr,!1,t),se(r,t)}else{if(oe(r,a))return;Bp.set(a),e.uniformMatrix3fv(this.addr,!1,Bp),se(r,a)}}function ge(e,t){const r=this.cache,a=t.elements;if(a===void 0){if(oe(r,t))return;e.uniformMatrix4fv(this.addr,!1,t),se(r,t)}else{if(oe(r,a))return;zp.set(a),e.uniformMatrix4fv(this.addr,!1,zp),se(r,a)}}function he(e,t,r){const a=this.cache,i=r.allocateTextureUnit();a[0]!==i&&(e.uniform1i(this.addr,i),a[0]=i),r.safeSetTexture2D(t||Rp,i)}function ye(e,t,r){const a=this.cache,i=r.allocateTextureUnit();a[0]!==i&&(e.uniform1i(this.addr,i),a[0]=i),r.setTexture2DArray(t||Cp,i)}function ve(e,t,r){const a=this.cache,i=r.allocateTextureUnit();a[0]!==i&&(e.uniform1i(this.addr,i),a[0]=i),r.setTexture3D(t||Pp,i)}function xe(e,t,r){const a=this.cache,i=r.allocateTextureUnit();a[0]!==i&&(e.uniform1i(this.addr,i),a[0]=i),r.safeSetTextureCube(t||Ip,i)}function _e(e,t){const r=this.cache;r[0]===t||(e.uniform1i(this.addr,t),r[0]=t)}function be(e,t){const r=this.cache;oe(r,t)||(e.uniform2iv(this.addr,t),se(r,t))}function Me(e,t){const r=this.cache;oe(r,t)||(e.uniform3iv(this.addr,t),se(r,t))}function Se(e,t){const r=this.cache;oe(r,t)||(e.uniform4iv(this.addr,t),se(r,t))}function Te(e,t){const r=this.cache;r[0]===t||(e.uniform1ui(this.addr,t),r[0]=t)}function Ee(e){return 5126===e?le:35664===e?pe:35665===e?ce:35666===e?ue:35674===e?me:35675===e?fe:35676===e?ge:5124===e||35670===e?_e:35667===e||35671===e?be:35668===e||35672===e?Me:35669===e||35673===e?Se:5125===e?Te:35678===e||36198===e||36298===e||36306===e||35682===e?he:35679===e||36299===e||36307===e?ve:35680===e||36300===e||36308===e||36293===e?xe:36289===e||36303===e||36311===e||36292===e?ye:void 0}function we(e,t){e.uniform1fv(this.addr,t)}function Le(e,t){e.uniform1iv(this.addr,t)}function Ae(e,t){e.uniform2iv(this.addr,t)}function Re(e,t){e.uniform3iv(this.addr,t)}function Ce(e,t){e.uniform4iv(this.addr,t)}function Pe(e,t){const r=ne(t,this.size,2);e.uniform2fv(this.addr,r)}function Ie(e,t){const r=ne(t,this.size,3);e.uniform3fv(this.addr,r)}function Ne(e,t){const r=ne(t,this.size,4);e.uniform4fv(this.addr,r)}function De(e,t){const r=ne(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,r)}function ze(e,t){const r=ne(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,r)}function Be(e,t){const r=ne(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,r)}function Ue(e,t,r){const a=t.length,n=de(r,a);e.uniform1iv(this.addr,n);for(let o=0;o!==a;++o)r.safeSetTexture2D(t[o]||Rp,n[o])}function He(e,t,r){const a=t.length,n=de(r,a);e.uniform1iv(this.addr,n);for(let o=0;o!==a;++o)r.safeSetTextureCube(t[o]||Ip,n[o])}function Fe(e){return 5126===e?we:35664===e?Pe:35665===e?Ie:35666===e?Ne:35674===e?De:35675===e?ze:35676===e?Be:5124===e||35670===e?Le:35667===e||35671===e?Ae:35668===e||35672===e?Re:35669===e||35673===e?Ce:35678===e||36198===e||36298===e||36306===e||35682===e?Ue:35680===e||36300===e||36308===e||36293===e?He:void 0}function Ge(e,t,r){this.id=e,this.addr=r,this.cache=[],this.setValue=Ee(t.type)}function Oe(e,t,r){this.id=e,this.addr=r,this.cache=[],this.size=t.size,this.setValue=Fe(t.type)}function Ve(e){this.id=e,this.seq=[],this.map={}}function ke(e,t){e.seq.push(t),e.map[t.id]=t}function We(e,t,r){const a=e.name,i=a.length;for(Hp.lastIndex=0;;){const n=Hp.exec(a),o=Hp.lastIndex;let s=n[1];const d=']'===n[2],l=n[3];if(d&&(s|=0),void 0===l||'['===l&&o+2===i){ke(r,void 0===l?new Ge(s,e,t):new Oe(s,e,t));break}else{const e=r.map;let t=e[s];void 0===t&&(t=new Ve(s),ke(r,t)),r=t}}}function je(e,t){this.seq=[],this.map={};const r=e.getProgramParameter(t,35718);for(let a=0;a<r;++a){const r=e.getActiveUniform(t,a),i=e.getUniformLocation(t,r.name);We(r,i,this)}}function Xe(e,t,r){const a=e.createShader(t);return e.shaderSource(a,r),e.compileShader(a),a}function qe(e){const t=e.split('\n');for(let r=0;r<t.length;r++)t[r]=r+1+': '+t[r];return t.join('\n')}function Ye(e){return e===Js?['Linear','( value )']:e===Qs?['sRGB','( value )']:e===$s?['RGBE','( value )']:e===td?['RGBM','( value, 7.0 )']:e===rd?['RGBM','( value, 16.0 )']:e===ad?['RGBD','( value, 256.0 )']:e===Ks?['Gamma','( value, float( GAMMA_FACTOR ) )']:e===ed?['LogLuv','( value )']:(console.warn('THREE.WebGLProgram: Unsupported encoding:',e),['Linear','( value )'])}function Ze(e,t,r){const a=e.getShaderParameter(t,35713),i=e.getShaderInfoLog(t).trim();if(a&&''===i)return'';const n=e.getShaderSource(t);return'THREE.WebGLShader: gl.getShaderInfoLog() '+r+'\n'+i+qe(n)}function Je(e,t){const r=Ye(t);return'vec4 '+e+'( vec4 value ) { return '+r[0]+'ToLinear'+r[1]+'; }'}function Qe(e,t){const r=Ye(t);return'vec4 '+e+'( vec4 value ) { return LinearTo'+r[0]+r[1]+'; }'}function Ke(e,t){let r;return t===po?r='Linear':t===co?r='Reinhard':t===uo?r='OptimizedCineon':t===mo?r='ACESFilmic':t===fo?r='Custom':(console.warn('THREE.WebGLProgram: Unsupported toneMapping:',t),r='Linear'),'vec3 '+e+'( vec3 color ) { return '+r+'ToneMapping( color ); }'}function $e(e){const t=[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||'physical'===e.shaderID?'#extension GL_OES_standard_derivatives : enable':'',(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?'#extension GL_EXT_frag_depth : enable':'',e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?'#extension GL_EXT_draw_buffers : require':'',(e.extensionShaderTextureLOD||e.envMap)&&e.rendererExtensionShaderTextureLod?'#extension GL_EXT_shader_texture_lod : enable':''];return t.filter(rt).join('\n')}function et(e){const t=[];for(const r in e){const a=e[r];!1===a||t.push('#define '+r+' '+a)}return t.join('\n')}function tt(e,t){const r={},a=e.getProgramParameter(t,35721);for(let n=0;n<a;n++){const a=e.getActiveAttrib(t,n),i=a.name;r[i]=e.getAttribLocation(t,i)}return r}function rt(e){return''!==e}function at(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function it(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}function nt(e){return e.replace(Gp,ot)}function ot(e,t){const r=wp[t];if(r===void 0)throw new Error('Can not resolve #include <'+t+'>');return nt(r)}function st(e){return e.replace(Vp,lt).replace(Op,dt)}function dt(e,t,r,a){return console.warn('WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.'),lt(e,t,r,a)}function lt(e,t,r,a){let n='';for(let o=parseInt(t);o<parseInt(r);o++)n+=a.replace(/\[\s*i\s*\]/g,'[ '+o+' ]').replace(/UNROLLED_LOOP_INDEX/g,o);return n}function pt(e){let t='precision '+e.precision+' float;\nprecision '+e.precision+' int;';return'highp'===e.precision?t+='\n#define HIGH_PRECISION':'mediump'===e.precision?t+='\n#define MEDIUM_PRECISION':'lowp'===e.precision&&(t+='\n#define LOW_PRECISION'),t}function ct(e){let t='SHADOWMAP_TYPE_BASIC';return e.shadowMapType===Mn?t='SHADOWMAP_TYPE_PCF':e.shadowMapType===Sn?t='SHADOWMAP_TYPE_PCF_SOFT':e.shadowMapType===Tn&&(t='SHADOWMAP_TYPE_VSM'),t}function ut(e){let t='ENVMAP_TYPE_CUBE';if(e.envMap)switch(e.envMapMode){case ho:case yo:t='ENVMAP_TYPE_CUBE';break;case _o:case bo:t='ENVMAP_TYPE_CUBE_UV';}return t}function mt(e){let t='ENVMAP_MODE_REFLECTION';if(e.envMap)switch(e.envMapMode){case yo:case bo:t='ENVMAP_MODE_REFRACTION';}return t}function ft(e){let t='ENVMAP_BLENDING_NONE';if(e.envMap)switch(e.combine){case no:t='ENVMAP_BLENDING_MULTIPLY';break;case oo:t='ENVMAP_BLENDING_MIX';break;case so:t='ENVMAP_BLENDING_ADD';}return t}function gt(e,t,r,a){const i=e.getContext(),n=r.defines;let o=r.vertexShader,s=r.fragmentShader;const d=ct(r),l=ut(r),p=mt(r),c=ft(r),u=0<e.gammaFactor?e.gammaFactor:1,m=r.isWebGL2?'':$e(r),f=et(n),g=i.createProgram();let h=r.glslVersion?'#version '+r.glslVersion+'\n':'',y,v;r.isRawShaderMaterial?(y=[f].filter(rt).join('\n'),0<y.length&&(y+='\n'),v=[m,f].filter(rt).join('\n'),0<v.length&&(v+='\n')):(y=[pt(r),'#define SHADER_NAME '+r.shaderName,f,r.instancing?'#define USE_INSTANCING':'',r.instancingColor?'#define USE_INSTANCING_COLOR':'',r.supportsVertexTextures?'#define VERTEX_TEXTURES':'','#define GAMMA_FACTOR '+u,'#define MAX_BONES '+r.maxBones,r.useFog&&r.fog?'#define USE_FOG':'',r.useFog&&r.fogExp2?'#define FOG_EXP2':'',r.map?'#define USE_MAP':'',r.envMap?'#define USE_ENVMAP':'',r.envMap?'#define '+p:'',r.lightMap?'#define USE_LIGHTMAP':'',r.aoMap?'#define USE_AOMAP':'',r.emissiveMap?'#define USE_EMISSIVEMAP':'',r.bumpMap?'#define USE_BUMPMAP':'',r.normalMap?'#define USE_NORMALMAP':'',r.normalMap&&r.objectSpaceNormalMap?'#define OBJECTSPACE_NORMALMAP':'',r.normalMap&&r.tangentSpaceNormalMap?'#define TANGENTSPACE_NORMALMAP':'',r.clearcoatMap?'#define USE_CLEARCOATMAP':'',r.clearcoatRoughnessMap?'#define USE_CLEARCOAT_ROUGHNESSMAP':'',r.clearcoatNormalMap?'#define USE_CLEARCOAT_NORMALMAP':'',r.displacementMap&&r.supportsVertexTextures?'#define USE_DISPLACEMENTMAP':'',r.specularMap?'#define USE_SPECULARMAP':'',r.roughnessMap?'#define USE_ROUGHNESSMAP':'',r.metalnessMap?'#define USE_METALNESSMAP':'',r.alphaMap?'#define USE_ALPHAMAP':'',r.transmissionMap?'#define USE_TRANSMISSIONMAP':'',r.vertexTangents?'#define USE_TANGENT':'',r.vertexColors?'#define USE_COLOR':'',r.vertexUvs?'#define USE_UV':'',r.uvsVertexOnly?'#define UVS_VERTEX_ONLY':'',r.flatShading?'#define FLAT_SHADED':'',r.skinning?'#define USE_SKINNING':'',r.useVertexTexture?'#define BONE_TEXTURE':'',r.morphTargets?'#define USE_MORPHTARGETS':'',r.morphNormals&&!1===r.flatShading?'#define USE_MORPHNORMALS':'',r.doubleSided?'#define DOUBLE_SIDED':'',r.flipSided?'#define FLIP_SIDED':'',r.shadowMapEnabled?'#define USE_SHADOWMAP':'',r.shadowMapEnabled?'#define '+d:'',r.sizeAttenuation?'#define USE_SIZEATTENUATION':'',r.logarithmicDepthBuffer?'#define USE_LOGDEPTHBUF':'',r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?'#define USE_LOGDEPTHBUF_EXT':'','uniform mat4 modelMatrix;','uniform mat4 modelViewMatrix;','uniform mat4 projectionMatrix;','uniform mat4 viewMatrix;','uniform mat3 normalMatrix;','uniform vec3 cameraPosition;','uniform bool isOrthographic;','#ifdef USE_INSTANCING','\tattribute mat4 instanceMatrix;','#endif','#ifdef USE_INSTANCING_COLOR','\tattribute vec3 instanceColor;','#endif','attribute vec3 position;','attribute vec3 normal;','attribute vec2 uv;','#ifdef USE_TANGENT','\tattribute vec4 tangent;','#endif','#ifdef USE_COLOR','\tattribute vec3 color;','#endif','#ifdef USE_MORPHTARGETS','\tattribute vec3 morphTarget0;','\tattribute vec3 morphTarget1;','\tattribute vec3 morphTarget2;','\tattribute vec3 morphTarget3;','\t#ifdef USE_MORPHNORMALS','\t\tattribute vec3 morphNormal0;','\t\tattribute vec3 morphNormal1;','\t\tattribute vec3 morphNormal2;','\t\tattribute vec3 morphNormal3;','\t#else','\t\tattribute vec3 morphTarget4;','\t\tattribute vec3 morphTarget5;','\t\tattribute vec3 morphTarget6;','\t\tattribute vec3 morphTarget7;','\t#endif','#endif','#ifdef USE_SKINNING','\tattribute vec4 skinIndex;','\tattribute vec4 skinWeight;','#endif','\n'].filter(rt).join('\n'),v=[m,pt(r),'#define SHADER_NAME '+r.shaderName,f,r.alphaTest?'#define ALPHATEST '+r.alphaTest+(r.alphaTest%1?'':'.0'):'','#define GAMMA_FACTOR '+u,r.useFog&&r.fog?'#define USE_FOG':'',r.useFog&&r.fogExp2?'#define FOG_EXP2':'',r.map?'#define USE_MAP':'',r.matcap?'#define USE_MATCAP':'',r.envMap?'#define USE_ENVMAP':'',r.envMap?'#define '+l:'',r.envMap?'#define '+p:'',r.envMap?'#define '+c:'',r.lightMap?'#define USE_LIGHTMAP':'',r.aoMap?'#define USE_AOMAP':'',r.emissiveMap?'#define USE_EMISSIVEMAP':'',r.bumpMap?'#define USE_BUMPMAP':'',r.normalMap?'#define USE_NORMALMAP':'',r.normalMap&&r.objectSpaceNormalMap?'#define OBJECTSPACE_NORMALMAP':'',r.normalMap&&r.tangentSpaceNormalMap?'#define TANGENTSPACE_NORMALMAP':'',r.clearcoatMap?'#define USE_CLEARCOATMAP':'',r.clearcoatRoughnessMap?'#define USE_CLEARCOAT_ROUGHNESSMAP':'',r.clearcoatNormalMap?'#define USE_CLEARCOAT_NORMALMAP':'',r.specularMap?'#define USE_SPECULARMAP':'',r.roughnessMap?'#define USE_ROUGHNESSMAP':'',r.metalnessMap?'#define USE_METALNESSMAP':'',r.alphaMap?'#define USE_ALPHAMAP':'',r.sheen?'#define USE_SHEEN':'',r.transmissionMap?'#define USE_TRANSMISSIONMAP':'',r.vertexTangents?'#define USE_TANGENT':'',r.vertexColors||r.instancingColor?'#define USE_COLOR':'',r.vertexUvs?'#define USE_UV':'',r.uvsVertexOnly?'#define UVS_VERTEX_ONLY':'',r.gradientMap?'#define USE_GRADIENTMAP':'',r.flatShading?'#define FLAT_SHADED':'',r.doubleSided?'#define DOUBLE_SIDED':'',r.flipSided?'#define FLIP_SIDED':'',r.shadowMapEnabled?'#define USE_SHADOWMAP':'',r.shadowMapEnabled?'#define '+d:'',r.premultipliedAlpha?'#define PREMULTIPLIED_ALPHA':'',r.physicallyCorrectLights?'#define PHYSICALLY_CORRECT_LIGHTS':'',r.logarithmicDepthBuffer?'#define USE_LOGDEPTHBUF':'',r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?'#define USE_LOGDEPTHBUF_EXT':'',(r.extensionShaderTextureLOD||r.envMap)&&r.rendererExtensionShaderTextureLod?'#define TEXTURE_LOD_EXT':'','uniform mat4 viewMatrix;','uniform vec3 cameraPosition;','uniform bool isOrthographic;',r.toneMapping===lo?'':'#define TONE_MAPPING',r.toneMapping===lo?'':wp.tonemapping_pars_fragment,r.toneMapping===lo?'':Ke('toneMapping',r.toneMapping),r.dithering?'#define DITHERING':'',wp.encodings_pars_fragment,r.map?Je('mapTexelToLinear',r.mapEncoding):'',r.matcap?Je('matcapTexelToLinear',r.matcapEncoding):'',r.envMap?Je('envMapTexelToLinear',r.envMapEncoding):'',r.emissiveMap?Je('emissiveMapTexelToLinear',r.emissiveMapEncoding):'',r.lightMap?Je('lightMapTexelToLinear',r.lightMapEncoding):'',Qe('linearToOutputTexel',r.outputEncoding),r.depthPacking?'#define DEPTH_PACKING '+r.depthPacking:'','\n'].filter(rt).join('\n')),o=nt(o),o=at(o,r),o=it(o,r),s=nt(s),s=at(s,r),s=it(s,r),o=st(o),s=st(s),r.isWebGL2&&!0!==r.isRawShaderMaterial&&(h='#version 300 es\n',y='#define attribute in\n#define varying out\n#define texture2D texture\n'+y,v=['#define varying in',r.glslVersion===ud?'':'out highp vec4 pc_fragColor;',r.glslVersion===ud?'':'#define gl_FragColor pc_fragColor','#define gl_FragDepthEXT gl_FragDepth','#define texture2D texture','#define textureCube texture','#define texture2DProj textureProj','#define texture2DLodEXT textureLod','#define texture2DProjLodEXT textureProjLod','#define textureCubeLodEXT textureLod','#define texture2DGradEXT textureGrad','#define texture2DProjGradEXT textureProjGrad','#define textureCubeGradEXT textureGrad'].join('\n')+'\n'+v);const x=h+y+o,_=h+v+s,b=Xe(i,35633,x),M=Xe(i,35632,_);if(i.attachShader(g,b),i.attachShader(g,M),void 0===r.index0AttributeName?!0===r.morphTargets&&i.bindAttribLocation(g,0,'position'):i.bindAttribLocation(g,0,r.index0AttributeName),i.linkProgram(g),e.debug.checkShaderErrors){const e=i.getProgramInfoLog(g).trim(),t=i.getShaderInfoLog(b).trim(),r=i.getShaderInfoLog(M).trim();let a=!0,n=!0;if(!1===i.getProgramParameter(g,35714)){a=!1;const t=Ze(i,b,'vertex'),r=Ze(i,M,'fragment');console.error('THREE.WebGLProgram: shader error: ',i.getError(),'35715',i.getProgramParameter(g,35715),'gl.getProgramInfoLog',e,t,r)}else''===e?(''===t||''===r)&&(n=!1):console.warn('THREE.WebGLProgram: gl.getProgramInfoLog()',e);n&&(this.diagnostics={runnable:a,programLog:e,vertexShader:{log:t,prefix:y},fragmentShader:{log:r,prefix:v}})}i.deleteShader(b),i.deleteShader(M);let S;this.getUniforms=function(){return void 0==S&&(S=new je(i,g)),S};let T;return this.getAttributes=function(){return void 0===T&&(T=tt(i,g)),T},this.destroy=function(){a.releaseStatesOfProgram(this),i.deleteProgram(g),this.program=void 0},this.name=r.shaderName,this.id=Fp++,this.cacheKey=t,this.usedTimes=1,this.program=g,this.vertexShader=b,this.fragmentShader=M,this}function ht(e,t,r,a,i,n){function o(e){const t=e.skeleton,r=t.bones;if(u)return 1024;else{const e=gn((m-20)/4),t=yn(e,r.length);return t<r.length?(console.warn('THREE.WebGLRenderer: Skeleton has '+r.length+' bones. This GPU supports '+t+'.'),0):t}}function s(e){let t;return e&&e.isTexture?t=e.encoding:e&&e.isWebGLRenderTarget?(console.warn('THREE.WebGLPrograms.getTextureEncodingFromMap: don\'t use render targets as textures. Use their .texture property instead.'),t=e.texture.encoding):t=Js,t}function d(i,d,l,m,y){const v=m.fog,x=i.isMeshStandardMaterial?m.environment:null,_=t.get(i.envMap||x),b=h[i.type],M=y.isSkinnedMesh?o(y):0;null!==i.precision&&(g=a.getMaxPrecision(i.precision),g!==i.precision&&console.warn('THREE.WebGLProgram.getParameters:',i.precision,'not supported, using',g,'instead.'));let S,T;if(b){const e=Ap[b];S=e.vertexShader,T=e.fragmentShader}else S=i.vertexShader,T=i.fragmentShader;const E=e.getRenderTarget(),w={isWebGL2:p,shaderID:b,shaderName:i.type,vertexShader:S,fragmentShader:T,defines:i.defines,isRawShaderMaterial:!0===i.isRawShaderMaterial,glslVersion:i.glslVersion,precision:g,instancing:!0===y.isInstancedMesh,instancingColor:!0===y.isInstancedMesh&&null!==y.instanceColor,supportsVertexTextures:f,outputEncoding:null===E?e.outputEncoding:s(E.texture),map:!!i.map,mapEncoding:s(i.map),matcap:!!i.matcap,matcapEncoding:s(i.matcap),envMap:!!_,envMapMode:_&&_.mapping,envMapEncoding:s(_),envMapCubeUV:!!_&&(_.mapping===_o||_.mapping===bo),lightMap:!!i.lightMap,lightMapEncoding:s(i.lightMap),aoMap:!!i.aoMap,emissiveMap:!!i.emissiveMap,emissiveMapEncoding:s(i.emissiveMap),bumpMap:!!i.bumpMap,normalMap:!!i.normalMap,objectSpaceNormalMap:i.normalMapType===sd,tangentSpaceNormalMap:i.normalMapType===od,clearcoatMap:!!i.clearcoatMap,clearcoatRoughnessMap:!!i.clearcoatRoughnessMap,clearcoatNormalMap:!!i.clearcoatNormalMap,displacementMap:!!i.displacementMap,roughnessMap:!!i.roughnessMap,metalnessMap:!!i.metalnessMap,specularMap:!!i.specularMap,alphaMap:!!i.alphaMap,gradientMap:!!i.gradientMap,sheen:!!i.sheen,transmissionMap:!!i.transmissionMap,combine:i.combine,vertexTangents:i.normalMap&&i.vertexTangents,vertexColors:i.vertexColors,vertexUvs:!!i.map||!!i.bumpMap||!!i.normalMap||!!i.specularMap||!!i.alphaMap||!!i.emissiveMap||!!i.roughnessMap||!!i.metalnessMap||!!i.clearcoatMap||!!i.clearcoatRoughnessMap||!!i.clearcoatNormalMap||!!i.displacementMap||!!i.transmissionMap,uvsVertexOnly:!i.map&&!i.bumpMap&&!i.normalMap&&!i.specularMap&&!i.alphaMap&&!i.emissiveMap&&!i.roughnessMap&&!i.metalnessMap&&!i.clearcoatNormalMap&&!i.transmissionMap&&!!i.displacementMap,fog:!!v,useFog:i.fog,fogExp2:v&&v.isFogExp2,flatShading:i.flatShading,sizeAttenuation:i.sizeAttenuation,logarithmicDepthBuffer:c,skinning:i.skinning&&0<M,maxBones:M,useVertexTexture:u,morphTargets:i.morphTargets,morphNormals:i.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:d.directional.length,numPointLights:d.point.length,numSpotLights:d.spot.length,numRectAreaLights:d.rectArea.length,numHemiLights:d.hemi.length,numDirLightShadows:d.directionalShadowMap.length,numPointLightShadows:d.pointShadowMap.length,numSpotLightShadows:d.spotShadowMap.length,numClippingPlanes:n.numPlanes,numClipIntersection:n.numIntersection,dithering:i.dithering,shadowMapEnabled:e.shadowMap.enabled&&0<l.length,shadowMapType:e.shadowMap.type,toneMapping:i.toneMapped?e.toneMapping:lo,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:i.premultipliedAlpha,alphaTest:i.alphaTest,doubleSided:i.side===Ln,flipSided:i.side===wn,depthPacking:i.depthPacking!==void 0&&i.depthPacking,index0AttributeName:i.index0AttributeName,extensionDerivatives:i.extensions&&i.extensions.derivatives,extensionFragDepth:i.extensions&&i.extensions.fragDepth,extensionDrawBuffers:i.extensions&&i.extensions.drawBuffers,extensionShaderTextureLOD:i.extensions&&i.extensions.shaderTextureLOD,rendererExtensionFragDepth:p||r.has('EXT_frag_depth'),rendererExtensionDrawBuffers:p||r.has('WEBGL_draw_buffers'),rendererExtensionShaderTextureLod:p||r.has('EXT_shader_texture_lod'),customProgramCacheKey:i.customProgramCacheKey()};return w}const l=[],p=a.isWebGL2,c=a.logarithmicDepthBuffer,u=a.floatVertexTextures,m=a.maxVertexUniforms,f=a.vertexTextures;let g=a.precision;const h={MeshDepthMaterial:'depth',MeshDistanceMaterial:'distanceRGBA',MeshNormalMaterial:'normal',MeshBasicMaterial:'basic',MeshLambertMaterial:'lambert',MeshPhongMaterial:'phong',MeshToonMaterial:'toon',MeshStandardMaterial:'physical',MeshPhysicalMaterial:'physical',MeshMatcapMaterial:'matcap',LineBasicMaterial:'basic',LineDashedMaterial:'dashed',PointsMaterial:'points',ShadowMaterial:'shadow',SpriteMaterial:'sprite'},y=['precision','isWebGL2','supportsVertexTextures','outputEncoding','instancing','instancingColor','map','mapEncoding','matcap','matcapEncoding','envMap','envMapMode','envMapEncoding','envMapCubeUV','lightMap','lightMapEncoding','aoMap','emissiveMap','emissiveMapEncoding','bumpMap','normalMap','objectSpaceNormalMap','tangentSpaceNormalMap','clearcoatMap','clearcoatRoughnessMap','clearcoatNormalMap','displacementMap','specularMap','roughnessMap','metalnessMap','gradientMap','alphaMap','combine','vertexColors','vertexTangents','vertexUvs','uvsVertexOnly','fog','useFog','fogExp2','flatShading','sizeAttenuation','logarithmicDepthBuffer','skinning','maxBones','useVertexTexture','morphTargets','morphNormals','maxMorphTargets','maxMorphNormals','premultipliedAlpha','numDirLights','numPointLights','numSpotLights','numHemiLights','numRectAreaLights','numDirLightShadows','numPointLightShadows','numSpotLightShadows','shadowMapEnabled','shadowMapType','toneMapping','physicallyCorrectLights','alphaTest','doubleSided','flipSided','numClippingPlanes','numClipIntersection','depthPacking','dithering','sheen','transmissionMap'];return{getParameters:d,getProgramCacheKey:function(t){const r=[];if(t.shaderID?r.push(t.shaderID):(r.push(t.fragmentShader),r.push(t.vertexShader)),void 0!==t.defines)for(const e in t.defines)r.push(e),r.push(t.defines[e]);if(!1===t.isRawShaderMaterial){for(let e=0;e<y.length;e++)r.push(t[y[e]]);r.push(e.outputEncoding),r.push(e.gammaFactor)}return r.push(t.customProgramCacheKey),r.join()},getUniforms:function(e){const t=h[e.type];let r;if(t){const e=Ap[t];r=yp.clone(e.uniforms)}else r=e.uniforms;return r},acquireProgram:function(t,r){let a;for(let e=0,i=l.length;e<i;e++){const t=l[e];if(t.cacheKey===r){a=t,++a.usedTimes;break}}return void 0===a&&(a=new gt(e,r,t,i),l.push(a)),a},releaseProgram:function(e){if(0==--e.usedTimes){const t=l.indexOf(e);l[t]=l[l.length-1],l.pop(),e.destroy()}},programs:l}}function yt(){function e(e){let t=a.get(e);return void 0===t&&(t={},a.set(e,t)),t}function t(e){a.delete(e)}function r(e,t,r){a.get(e)[t]=r}let a=new WeakMap;return{get:e,remove:t,update:r,dispose:function(){a=new WeakMap}}}function vt(e,t){return e.groupOrder===t.groupOrder?e.renderOrder===t.renderOrder?e.program===t.program?e.material.id===t.material.id?e.z===t.z?e.id-t.id:e.z-t.z:e.material.id-t.material.id:e.program.id-t.program.id:e.renderOrder-t.renderOrder:e.groupOrder-t.groupOrder}function xt(e,t){return e.groupOrder===t.groupOrder?e.renderOrder===t.renderOrder?e.z===t.z?e.id-t.id:t.z-e.z:e.renderOrder-t.renderOrder:e.groupOrder-t.groupOrder}function _t(e){function t(t,r,i,o,d,l){let p=a[n];const c=e.get(i);return void 0===p?(p={id:t.id,object:t,geometry:r,material:i,program:c.program||s,groupOrder:o,renderOrder:t.renderOrder,z:d,group:l},a[n]=p):(p.id=t.id,p.object=t,p.geometry=r,p.material=i,p.program=c.program||s,p.groupOrder=o,p.renderOrder=t.renderOrder,p.z=d,p.group=l),n++,p}function r(){for(let e=n,t=a.length;e<t;e++){const t=a[e];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.program=null,t.group=null}}const a=[];let n=0;const i=[],o=[],s={id:-1};return{opaque:i,transparent:o,init:function(){n=0,i.length=0,o.length=0},push:function(e,r,a,n,s,d){const l=t(e,r,a,n,s,d);(!0===a.transparent?o:i).push(l)},unshift:function(e,r,a,n,s,d){const l=t(e,r,a,n,s,d);(!0===a.transparent?o:i).unshift(l)},finish:r,sort:function(e,t){1<i.length&&i.sort(e||vt),1<o.length&&o.sort(t||xt)}}}function bt(e){function t(t,a){const i=r.get(t);let n;return void 0===i?(n=new _t(e),r.set(t,new WeakMap),r.get(t).set(a,n)):(n=i.get(a),void 0===n&&(n=new _t(e),i.set(a,n))),n}let r=new WeakMap;return{get:t,dispose:function(){r=new WeakMap}}}function Mt(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let r;switch(t.type){case'DirectionalLight':r={direction:new Sd,color:new Fl};break;case'SpotLight':r={position:new Sd,direction:new Sd,color:new Fl,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case'PointLight':r={position:new Sd,color:new Fl,distance:0,decay:0};break;case'HemisphereLight':r={direction:new Sd,skyColor:new Fl,groundColor:new Fl};break;case'RectAreaLight':r={color:new Fl,position:new Sd,halfWidth:new Sd,halfHeight:new Sd};}return e[t.id]=r,r}}}function St(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let r;switch(t.type){case'DirectionalLight':r={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new hd};break;case'SpotLight':r={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new hd};break;case'PointLight':r={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new hd,shadowCameraNear:1,shadowCameraFar:1e3};}return e[t.id]=r,r}}}function Tt(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function Et(e,t){function r(o){let s=0,r=0,d=0;for(let e=0;9>e;e++)n.probe[e].set(0,0,0);let l=0,p=0,c=0,u=0,m=0,f=0,g=0,h=0;o.sort(Tt);for(let e=0,t=o.length;e<t;e++){const t=o[e],y=t.color,v=t.intensity,x=t.distance,_=t.shadow&&t.shadow.map?t.shadow.map.texture:null;if(t.isAmbientLight)s+=y.r*v,r+=y.g*v,d+=y.b*v;else if(t.isLightProbe)for(let e=0;9>e;e++)n.probe[e].addScaledVector(t.sh.coefficients[e],v);else if(t.isDirectionalLight){const e=a.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity),t.castShadow){const e=t.shadow,r=i.get(t);r.shadowBias=e.bias,r.shadowNormalBias=e.normalBias,r.shadowRadius=e.radius,r.shadowMapSize=e.mapSize,n.directionalShadow[l]=r,n.directionalShadowMap[l]=_,n.directionalShadowMatrix[l]=t.shadow.matrix,f++}n.directional[l]=e,l++}else if(t.isSpotLight){const e=a.get(t);if(e.position.setFromMatrixPosition(t.matrixWorld),e.color.copy(y).multiplyScalar(v),e.distance=x,e.coneCos=pn(t.angle),e.penumbraCos=pn(t.angle*(1-t.penumbra)),e.decay=t.decay,t.castShadow){const e=t.shadow,r=i.get(t);r.shadowBias=e.bias,r.shadowNormalBias=e.normalBias,r.shadowRadius=e.radius,r.shadowMapSize=e.mapSize,n.spotShadow[c]=r,n.spotShadowMap[c]=_,n.spotShadowMatrix[c]=t.shadow.matrix,h++}n.spot[c]=e,c++}else if(t.isRectAreaLight){const e=a.get(t);e.color.copy(y).multiplyScalar(v),e.halfWidth.set(.5*t.width,0,0),e.halfHeight.set(0,.5*t.height,0),n.rectArea[u]=e,u++}else if(t.isPointLight){const e=a.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity),e.distance=t.distance,e.decay=t.decay,t.castShadow){const e=t.shadow,r=i.get(t);r.shadowBias=e.bias,r.shadowNormalBias=e.normalBias,r.shadowRadius=e.radius,r.shadowMapSize=e.mapSize,r.shadowCameraNear=e.camera.near,r.shadowCameraFar=e.camera.far,n.pointShadow[p]=r,n.pointShadowMap[p]=_,n.pointShadowMatrix[p]=t.shadow.matrix,g++}n.point[p]=e,p++}else if(t.isHemisphereLight){const e=a.get(t);e.skyColor.copy(t.color).multiplyScalar(v),e.groundColor.copy(t.groundColor).multiplyScalar(v),n.hemi[m]=e,m++}}0<u&&(t.isWebGL2?(n.rectAreaLTC1=Lp.LTC_FLOAT_1,n.rectAreaLTC2=Lp.LTC_FLOAT_2):!0===e.has('OES_texture_float_linear')?(n.rectAreaLTC1=Lp.LTC_FLOAT_1,n.rectAreaLTC2=Lp.LTC_FLOAT_2):!0===e.has('OES_texture_half_float_linear')?(n.rectAreaLTC1=Lp.LTC_HALF_1,n.rectAreaLTC2=Lp.LTC_HALF_2):console.error('THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.')),n.ambient[0]=s,n.ambient[1]=r,n.ambient[2]=d;const y=n.hash;(y.directionalLength!==l||y.pointLength!==p||y.spotLength!==c||y.rectAreaLength!==u||y.hemiLength!==m||y.numDirectionalShadows!==f||y.numPointShadows!==g||y.numSpotShadows!==h)&&(n.directional.length=l,n.spot.length=c,n.rectArea.length=u,n.point.length=p,n.hemi.length=m,n.directionalShadow.length=f,n.directionalShadowMap.length=f,n.pointShadow.length=g,n.pointShadowMap.length=g,n.spotShadow.length=h,n.spotShadowMap.length=h,n.directionalShadowMatrix.length=f,n.pointShadowMatrix.length=g,n.spotShadowMatrix.length=h,y.directionalLength=l,y.pointLength=p,y.spotLength=c,y.rectAreaLength=u,y.hemiLength=m,y.numDirectionalShadows=f,y.numPointShadows=g,y.numSpotShadows=h,n.version=kp++)}const a=new Mt,i=St(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let r=0;9>r;r++)n.probe.push(new Sd);const o=new Sd,s=new Jd,d=new Jd;return{setup:r,setupView:function(e,t){let r=0,a=0,i=0,l=0,p=0;const c=t.matrixWorldInverse;for(let u=0,m=e.length;u<m;u++){const t=e[u];if(t.isDirectionalLight){const e=n.directional[r];e.direction.setFromMatrixPosition(t.matrixWorld),o.setFromMatrixPosition(t.target.matrixWorld),e.direction.sub(o),e.direction.transformDirection(c),r++}else if(t.isSpotLight){const e=n.spot[i];e.position.setFromMatrixPosition(t.matrixWorld),e.position.applyMatrix4(c),e.direction.setFromMatrixPosition(t.matrixWorld),o.setFromMatrixPosition(t.target.matrixWorld),e.direction.sub(o),e.direction.transformDirection(c),i++}else if(t.isRectAreaLight){const e=n.rectArea[l];e.position.setFromMatrixPosition(t.matrixWorld),e.position.applyMatrix4(c),d.identity(),s.copy(t.matrixWorld),s.premultiply(c),d.extractRotation(s),e.halfWidth.set(.5*t.width,0,0),e.halfHeight.set(0,.5*t.height,0),e.halfWidth.applyMatrix4(d),e.halfHeight.applyMatrix4(d),l++}else if(t.isPointLight){const e=n.point[a];e.position.setFromMatrixPosition(t.matrixWorld),e.position.applyMatrix4(c),a++}else if(t.isHemisphereLight){const e=n.hemi[p];e.direction.setFromMatrixPosition(t.matrixWorld),e.direction.transformDirection(c),e.direction.normalize(),p++}}},state:n}}function wt(e,t){const r=new Et(e,t),a=[],i=[];return{init:function(){a.length=0,i.length=0},state:{lightsArray:a,shadowsArray:i,lights:r},setupLights:function(){r.setup(a)},setupLightsView:function(e){r.setupView(a,e)},pushLight:function(e){a.push(e)},pushShadow:function(e){i.push(e)}}}function Lt(e,t){function r(r,i=0){let n;return!1===a.has(r)?(n=new wt(e,t),a.set(r,[]),a.get(r).push(n)):i>=a.get(r).length?(n=new wt(e,t),a.get(r).push(n)):n=a.get(r)[i],n}let a=new WeakMap;return{get:r,dispose:function(){a=new WeakMap}}}function At(e){m.call(this),this.type='MeshDepthMaterial',this.depthPacking=id,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}function Rt(e){m.call(this),this.type='MeshDistanceMaterial',this.referencePosition=new Sd,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}function Ct(e,t,r){function a(r,a){const i=t.update(b);v.uniforms.shadow_pass.value=r.map.texture,v.uniforms.resolution.value=r.mapSize,v.uniforms.radius.value=r.radius,e.setRenderTarget(r.mapPass),e.clear(),e.renderBufferDirect(a,null,i,v,b,null),x.uniforms.shadow_pass.value=r.mapPass.texture,x.uniforms.resolution.value=r.mapSize,x.uniforms.radius.value=r.radius,e.setRenderTarget(r.map),e.clear(),e.renderBufferDirect(a,null,i,x,b,null)}function i(e,t,r){const a=e<<0|t<<1|r<<2;let i=m[a];return void 0===i&&(i=new At({depthPacking:nd,morphTargets:e,skinning:t}),m[a]=i),i}function n(e,t,r){const a=e<<0|t<<1|r<<2;let i=f[a];return void 0===i&&(i=new Rt({morphTargets:e,skinning:t}),f[a]=i),i}function s(t,r,a,o,s,d,l){let p=null,c=i,u=t.customDepthMaterial;if(!0===o.isPointLight&&(c=n,u=t.customDistanceMaterial),void 0===u){let e=!1;!0===a.morphTargets&&(e=r.morphAttributes&&r.morphAttributes.position&&0<r.morphAttributes.position.length);let i=!1;!0===t.isSkinnedMesh&&(!0===a.skinning?i=!0:console.warn('THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:',t));const n=!0===t.isInstancedMesh;p=c(e,i,n)}else p=u;if(e.localClippingEnabled&&!0===a.clipShadows&&0!==a.clippingPlanes.length){const e=p.uuid,t=a.uuid;let r=h[e];void 0===r&&(r={},h[e]=r);let i=r[t];void 0===i&&(i=p.clone(),r[t]=i),p=i}return p.visible=a.visible,p.wireframe=a.wireframe,p.side=l===Tn?null===a.shadowSide?a.side:a.shadowSide:null===a.shadowSide?y[a.side]:a.shadowSide,p.clipShadows=a.clipShadows,p.clippingPlanes=a.clippingPlanes,p.clipIntersection=a.clipIntersection,p.wireframeLinewidth=a.wireframeLinewidth,p.linewidth=a.linewidth,!0===o.isPointLight&&!0===p.isMeshDistanceMaterial&&(p.referencePosition.setFromMatrixPosition(o.matrixWorld),p.nearDistance=s,p.farDistance=d),p}function d(r,a,n,o,p){if(!1!==r.visible){const i=r.layers.test(a.layers);if(i&&(r.isMesh||r.isLine||r.isPoints)&&(r.castShadow||r.receiveShadow&&p===Tn)&&(!r.frustumCulled||l.intersectsObject(r))){r.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,r.matrixWorld);const a=t.update(r),i=r.material;if(Array.isArray(i)){const t=a.groups;for(let d=0,l=t.length;d<l;d++){const l=t[d],c=i[l.materialIndex];if(c&&c.visible){const t=s(r,a,c,o,n.near,n.far,p);e.renderBufferDirect(n,null,a,t,r,l)}}}else if(i.visible){const t=s(r,a,i,o,n.near,n.far,p);e.renderBufferDirect(n,null,a,t,r,null)}}const c=r.children;for(let e=0,t=c.length;e<t;e++)d(c[e],a,n,o,p)}}let l=new Tp;const p=new hd,c=new hd,u=new bd,m=[],f=[],h={},y={0:wn,1:En,2:Ln},v=new D({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new hd},radius:{value:4}},vertexShader:jp,fragmentShader:Wp}),x=v.clone();x.defines.HORIZONTAL_PASS=1;const _=new A;_.setAttribute('position',new g(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const b=new R(_,v),M=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Mn,this.render=function(t,i,n){if(!1!==M.enabled&&(!1!==M.autoUpdate||!1!==M.needsUpdate)&&0!==t.length){const s=e.getRenderTarget(),m=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),g=e.state;g.setBlending(Rn),g.buffers.color.setClear(1,1,1,1),g.buffers.depth.setTest(!0),g.setScissorTest(!1);for(let s=0,m=t.length;s<m;s++){const m=t[s],f=m.shadow;if(void 0===f){console.warn('THREE.WebGLShadowMap:',m,'has no shadow.');continue}if(!1===f.autoUpdate&&!1===f.needsUpdate)continue;p.copy(f.mapSize);const h=f.getFrameExtents();if(p.multiply(h),c.copy(f.mapSize),(p.x>r||p.y>r)&&(p.x>r&&(c.x=gn(r/h.x),p.x=c.x*h.x,f.mapSize.x=c.x),p.y>r&&(c.y=gn(r/h.y),p.y=c.y*h.y,f.mapSize.y=c.y)),null===f.map&&!f.isPointLightShadow&&this.type===Tn){const e={minFilter:Ao,magFilter:Ao,format:jo};f.map=new o(p.x,p.y,e),f.map.texture.name=m.name+'.shadowMap',f.mapPass=new o(p.x,p.y,e),f.camera.updateProjectionMatrix()}if(null===f.map){f.map=new o(p.x,p.y,{minFilter:Eo,magFilter:Eo,format:jo}),f.map.texture.name=m.name+'.shadowMap',f.camera.updateProjectionMatrix()}e.setRenderTarget(f.map),e.clear();const y=f.getViewportCount();for(let e=0;e<y;e++){const t=f.getViewport(e);u.set(c.x*t.x,c.y*t.y,c.x*t.z,c.y*t.w),g.viewport(u),f.updateMatrices(m,e),l=f.getFrustum(),d(i,n,f.camera,m,this.type)}f.isPointLightShadow||this.type!==Tn||a(f,n),f.needsUpdate=!1}M.needsUpdate=!1,e.setRenderTarget(s,m,f)}}}function Pt(e,t,r){function a(t,r,a){const n=new Uint8Array(4),i=e.createTexture();e.bindTexture(t,i),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(let o=0;o<a;o++)e.texImage2D(r+o,0,6408,1,1,0,6408,5121,n);return i}function i(t){!0!==b[t]&&(e.enable(t),b[t]=!0)}function n(t){!1!==b[t]&&(e.disable(t),b[t]=!1)}function o(t){return M!==t&&(e.useProgram(t),M=t,!0)}function s(t,r,a,o,s,d,l,p){return t===Rn?void(S&&(n(3042),S=!1)):(S||(i(3042),S=!0),t===Dn?void(s=s||r,d=d||a,l=l||o,(r!==E||s!==A)&&(e.blendEquationSeparate(X[r],X[s]),E=r,A=s),(a!==w||o!==L||d!==R||l!==C)&&(e.blendFuncSeparate(q[a],q[o],q[d],q[l]),w=a,L=o,R=d,C=l),T=t,P=null):void((t!==T||p!==P)&&((E!==zn||A!==zn)&&(e.blendEquation(32774),E=zn,A=zn),p?t===Cn?e.blendFuncSeparate(1,771,1,771):t===Pn?e.blendFunc(1,1):t===In?e.blendFuncSeparate(0,0,769,771):t===Nn?e.blendFuncSeparate(0,768,0,770):console.error('THREE.WebGLState: Invalid blending: ',t):t===Cn?e.blendFuncSeparate(770,771,1,771):t===Pn?e.blendFunc(770,1):t===In?e.blendFunc(0,769):t===Nn?e.blendFunc(0,768):console.error('THREE.WebGLState: Invalid blending: ',t),w=null,L=null,R=null,C=null,T=t,P=p)))}function d(t){I!==t&&(t?e.frontFace(2304):e.frontFace(2305),I=t)}function l(t){t===xn?n(2884):(i(2884),t!==N&&(t===_n?e.cullFace(1029):t===bn?e.cullFace(1028):e.cullFace(1032))),N=t}function p(t){t!==D&&(H&&e.lineWidth(t),D=t)}function c(t,r,a){t?(i(32823),(z!==r||B!==a)&&(e.polygonOffset(r,a),z=r,B=a)):n(32823)}function u(t){t===void 0&&(t=33984+U-1),O!==t&&(e.activeTexture(t),O=t)}function m(t,r){null===O&&u();let a=V[O];a===void 0&&(a={type:void 0,texture:void 0},V[O]=a),(a.type!==t||a.texture!==r)&&(e.bindTexture(t,r||j[t]),a.type=t,a.texture=r)}function f(){const t=V[O];t!==void 0&&t.type!==void 0&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)}function g(t){!1===k.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),k.copy(t))}function h(t){!1===W.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),W.copy(t))}const y=r.isWebGL2,v=new function(){let t=!1;const i=new bd;let r=null;const n=new bd(0,0,0,0);return{setMask:function(a){r===a||t||(e.colorMask(a,a,a,a),r=a)},setLocked:function(e){t=e},setClear:function(t,r,o,s,a){!0===a&&(t*=s,r*=s,o*=s),i.set(t,r,o,s),!1===n.equals(i)&&(e.clearColor(t,r,o,s),n.copy(i))},reset:function(){t=!1,r=null,n.set(-1,0,0,0)}}},x=new function(){let t=!1,r=null,a=null,o=null;return{setTest:function(e){e?i(2929):n(2929)},setMask:function(a){r===a||t||(e.depthMask(a),r=a)},setFunc:function(t){a!==t&&(t?t===Qn?e.depthFunc(512):t===Kn?e.depthFunc(519):t===$n?e.depthFunc(513):t===eo?e.depthFunc(515):t===to?e.depthFunc(514):t===ro?e.depthFunc(518):t===ao?e.depthFunc(516):t===io?e.depthFunc(517):e.depthFunc(515):e.depthFunc(515),a=t)},setLocked:function(e){t=e},setClear:function(t){o!==t&&(e.clearDepth(t),o=t)},reset:function(){t=!1,r=null,a=null,o=null}}},_=new function(){let t=!1,r=null,a=null,o=null,s=null,d=null,l=null,p=null,c=null;return{setTest:function(e){t||(e?i(2960):n(2960))},setMask:function(a){r===a||t||(e.stencilMask(a),r=a)},setFunc:function(t,r,i){(a!==t||o!==r||s!==i)&&(e.stencilFunc(t,r,i),a=t,o=r,s=i)},setOp:function(t,r,a){(d!==t||l!==r||p!==a)&&(e.stencilOp(t,r,a),d=t,l=r,p=a)},setLocked:function(e){t=e},setClear:function(t){c!==t&&(e.clearStencil(t),c=t)},reset:function(){t=!1,r=null,a=null,o=null,s=null,d=null,l=null,p=null,c=null}}};let b={},M=null,S=null,T=null,E=null,w=null,L=null,A=null,R=null,C=null,P=!1,I=null,N=null,D=null,z=null,B=null;const U=e.getParameter(35661);let H=!1,F=0;const G=e.getParameter(7938);-1===G.indexOf('WebGL')?-1!==G.indexOf('OpenGL ES')&&(F=parseFloat(/^OpenGL ES (\d)/.exec(G)[1]),H=2<=F):(F=parseFloat(/^WebGL (\d)/.exec(G)[1]),H=1<=F);let O=null,V={};const k=new bd,W=new bd,j={};j[3553]=a(3553,3553,1),j[34067]=a(34067,34069,6),v.setClear(0,0,0,1),x.setClear(1),_.setClear(0),i(2929),x.setFunc(eo),d(!1),l(_n),i(2884),s(Rn);const X={[zn]:32774,[Bn]:32778,[Un]:32779};if(y)X[Hn]=32775,X[Fn]=32776;else{const e=t.get('EXT_blend_minmax');null!==e&&(X[Hn]=e.MIN_EXT,X[Fn]=e.MAX_EXT)}const q={[Gn]:0,[On]:1,[Vn]:768,[Wn]:770,[Jn]:776,[Yn]:774,[Xn]:772,[kn]:769,[jn]:771,[Zn]:775,[qn]:773};return{buffers:{color:v,depth:x,stencil:_},enable:i,disable:n,useProgram:o,setBlending:s,setMaterial:function(e,t){e.side===Ln?n(2884):i(2884);let r=e.side===wn;t&&(r=!r),d(r),e.blending===Cn&&!1===e.transparent?s(Rn):s(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),x.setFunc(e.depthFunc),x.setTest(e.depthTest),x.setMask(e.depthWrite),v.setMask(e.colorWrite);const a=e.stencilWrite;_.setTest(a),a&&(_.setMask(e.stencilWriteMask),_.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),_.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),c(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)},setFlipSided:d,setCullFace:l,setLineWidth:p,setPolygonOffset:c,setScissorTest:function(e){e?i(3089):n(3089)},activeTexture:u,bindTexture:m,unbindTexture:f,compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error('THREE.WebGLState:',e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error('THREE.WebGLState:',e)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error('THREE.WebGLState:',e)}},scissor:g,viewport:h,reset:function(){b={},O=null,V={},M=null,S=null,T=null,E=null,w=null,L=null,A=null,R=null,C=null,P=!1,I=null,N=null,D=null,z=null,B=null,v.reset(),x.reset(),_.reset()}}}function It(e,t,r,a,i,n,o){function s(e,t){return G?new OffscreenCanvas(e,t):document.createElementNS('http://www.w3.org/1999/xhtml','canvas')}function d(e,t,r,a){let i=1;if((e.width>a||e.height>a)&&(i=a/hn(e.width,e.height)),1>i||!0===t){if('undefined'!=typeof HTMLImageElement&&e instanceof HTMLImageElement||'undefined'!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||'undefined'!=typeof ImageBitmap&&e instanceof ImageBitmap){const a=t?gd.floorPowerOfTwo:gn,n=a(i*e.width),o=a(i*e.height);void 0===O&&(O=s(n,o));const d=r?s(n,o):O;d.width=n,d.height=o;const l=d.getContext('2d');return l.drawImage(e,0,0,n,o),console.warn('THREE.WebGLRenderer: Texture has been resized from ('+e.width+'x'+e.height+') to ('+n+'x'+o+').'),d}return'data'in e&&console.warn('THREE.WebGLRenderer: Image in DataTexture is too big ('+e.width+'x'+e.height+').'),e}return e}function l(e){return gd.isPowerOfTwo(e.width)&&gd.isPowerOfTwo(e.height)}function p(e){return!D&&(e.wrapS!==So||e.wrapT!==So||e.minFilter!==Eo&&e.minFilter!==Ao)}function c(e,t){return e.generateMipmaps&&t&&e.minFilter!==Eo&&e.minFilter!==Ao}function u(t,r,i,n){e.generateMipmap(t);const o=a.get(r);o.__maxMipLevel=fn(hn(i,n))*Math.LOG2E}function m(r,a,i){if(!1===D)return a;if(null!==r){if(void 0!==e[r])return e[r];console.warn('THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \''+r+'\'')}let n=a;return 6403===a&&(5126===i&&(n=33326),5131===i&&(n=33325),5121===i&&(n=33321)),6407===a&&(5126===i&&(n=34837),5131===i&&(n=34843),5121===i&&(n=32849)),6408===a&&(5126===i&&(n=34836),5131===i&&(n=34842),5121===i&&(n=32856)),(33325===n||33326===n||34842===n||34836===n)&&t.get('EXT_color_buffer_float'),n}function f(e){return e===Eo||e===wo||e===Lo?9728:9729}function g(e){const t=e.target;t.removeEventListener('dispose',g),y(t),t.isVideoTexture&&F.delete(t),o.memory.textures--}function h(e){const t=e.target;t.removeEventListener('dispose',h),v(t),o.memory.textures--}function y(t){const r=a.get(t);void 0===r.__webglInit||(e.deleteTexture(r.__webglTexture),a.remove(t))}function v(t){const r=a.get(t),i=a.get(t.texture);if(t){if(void 0!==i.__webglTexture&&e.deleteTexture(i.__webglTexture),t.depthTexture&&t.depthTexture.dispose(),t.isWebGLCubeRenderTarget)for(let t=0;6>t;t++)e.deleteFramebuffer(r.__webglFramebuffer[t]),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer[t]);else e.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer),r.__webglMultisampledFramebuffer&&e.deleteFramebuffer(r.__webglMultisampledFramebuffer),r.__webglColorRenderbuffer&&e.deleteRenderbuffer(r.__webglColorRenderbuffer),r.__webglDepthRenderbuffer&&e.deleteRenderbuffer(r.__webglDepthRenderbuffer);a.remove(t.texture),a.remove(t)}}function x(){const e=V;return e>=z&&console.warn('THREE.WebGLTextures: Trying to use '+e+' texture units while this GPU supports only '+z),V+=1,e}function _(e,t){const i=a.get(e);if(e.isVideoTexture&&P(e),0<e.version&&i.__version!==e.version){const r=e.image;if(void 0===r)console.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined');else if(!1===r.complete)console.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete');else return void T(i,e,t)}r.activeTexture(33984+t),r.bindTexture(3553,i.__webglTexture)}function b(e,t){const i=a.get(e);return 0<e.version&&i.__version!==e.version?void E(i,e,t):void(r.activeTexture(33984+t),r.bindTexture(34067,i.__webglTexture))}function M(r,n,o){o?(e.texParameteri(r,10242,k[n.wrapS]),e.texParameteri(r,10243,k[n.wrapT]),(32879===r||35866===r)&&e.texParameteri(r,32882,k[n.wrapR]),e.texParameteri(r,10240,W[n.magFilter]),e.texParameteri(r,10241,W[n.minFilter])):(e.texParameteri(r,10242,33071),e.texParameteri(r,10243,33071),(32879===r||35866===r)&&e.texParameteri(r,32882,33071),(n.wrapS!==So||n.wrapT!==So)&&console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.'),e.texParameteri(r,10240,f(n.magFilter)),e.texParameteri(r,10241,f(n.minFilter)),n.minFilter!==Eo&&n.minFilter!==Ao&&console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.'));const s=t.get('EXT_texture_filter_anisotropic');if(s){if(n.type===Uo&&null===t.get('OES_texture_float_linear'))return;if(n.type===Ho&&null===(D||t.get('OES_texture_half_float_linear')))return;(1<n.anisotropy||a.get(n).__currentAnisotropy)&&(e.texParameterf(r,s.TEXTURE_MAX_ANISOTROPY_EXT,yn(n.anisotropy,i.getMaxAnisotropy())),a.get(n).__currentAnisotropy=n.anisotropy)}}function S(t,r){t.__webglInit===void 0&&(t.__webglInit=!0,r.addEventListener('dispose',g),t.__webglTexture=e.createTexture(),o.memory.textures++)}function T(t,a,i){let o=3553;a.isDataTexture2DArray&&(o=35866),a.isDataTexture3D&&(o=32879),S(t,a),r.activeTexture(33984+i),r.bindTexture(o,t.__webglTexture),e.pixelStorei(37440,a.flipY),e.pixelStorei(37441,a.premultiplyAlpha),e.pixelStorei(3317,a.unpackAlignment);const s=p(a)&&!1===l(a.image),f=d(a.image,s,!1,U),g=l(f)||D,h=n.convert(a.format);let y=n.convert(a.type),v=m(a.internalFormat,h,y);M(o,a,g);let x;const _=a.mipmaps;if(a.isDepthTexture)v=6402,D?a.type===Uo?v=36012:a.type===Bo?v=33190:a.type===Vo?v=35056:v=33189:a.type===Uo&&console.error('WebGLRenderer: Floating point depth texture requires WebGL2.'),a.format===Yo&&6402===v&&a.type!==Do&&a.type!==Bo&&(console.warn('THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.'),a.type=Do,y=n.convert(a.type)),a.format===Zo&&6402===v&&(v=34041,a.type!==Vo&&(console.warn('THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.'),a.type=Vo,y=n.convert(a.type))),r.texImage2D(3553,0,v,f.width,f.height,0,h,y,null);else if(a.isDataTexture){if(0<_.length&&g){for(let e=0,t=_.length;e<t;e++)x=_[e],r.texImage2D(3553,e,v,x.width,x.height,0,h,y,x.data);a.generateMipmaps=!1,t.__maxMipLevel=_.length-1}else r.texImage2D(3553,0,v,f.width,f.height,0,h,y,f.data),t.__maxMipLevel=0;}else if(a.isCompressedTexture){for(let e=0,t=_.length;e<t;e++)x=_[e],a.format!==jo&&a.format!==Wo?null===h?console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()'):r.compressedTexImage2D(3553,e,v,x.width,x.height,0,x.data):r.texImage2D(3553,e,v,x.width,x.height,0,h,y,x.data);t.__maxMipLevel=_.length-1}else if(a.isDataTexture2DArray)r.texImage3D(35866,0,v,f.width,f.height,f.depth,0,h,y,f.data),t.__maxMipLevel=0;else if(a.isDataTexture3D)r.texImage3D(32879,0,v,f.width,f.height,f.depth,0,h,y,f.data),t.__maxMipLevel=0;else if(0<_.length&&g){for(let e=0,t=_.length;e<t;e++)x=_[e],r.texImage2D(3553,e,v,h,y,x);a.generateMipmaps=!1,t.__maxMipLevel=_.length-1}else r.texImage2D(3553,0,v,h,y,f),t.__maxMipLevel=0;c(a,g)&&u(o,a,f.width,f.height),t.__version=a.version,a.onUpdate&&a.onUpdate(a)}function E(t,a,i){if(6!==a.image.length)return;S(t,a),r.activeTexture(33984+i),r.bindTexture(34067,t.__webglTexture),e.pixelStorei(37440,a.flipY);const o=a&&(a.isCompressedTexture||a.image[0].isCompressedTexture),s=a.image[0]&&a.image[0].isDataTexture,p=[];for(let e=0;6>e;e++)p[e]=o||s?s?a.image[e].image:a.image[e]:d(a.image[e],!1,!0,B);const f=p[0],g=l(f)||D,h=n.convert(a.format),y=n.convert(a.type),v=m(a.internalFormat,h,y);M(34067,a,g);let x;if(o){for(let e=0;6>e;e++){x=p[e].mipmaps;for(let t=0;t<x.length;t++){const i=x[t];a.format!==jo&&a.format!==Wo?null===h?console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()'):r.compressedTexImage2D(34069+e,t,v,i.width,i.height,0,i.data):r.texImage2D(34069+e,t,v,i.width,i.height,0,h,y,i.data)}}t.__maxMipLevel=x.length-1}else{x=a.mipmaps;for(let e=0;6>e;e++)if(s){r.texImage2D(34069+e,0,v,p[e].width,p[e].height,0,h,y,p[e].data);for(let t=0;t<x.length;t++){const a=x[t],i=a.image[e].image;r.texImage2D(34069+e,t+1,v,i.width,i.height,0,h,y,i.data)}}else{r.texImage2D(34069+e,0,v,h,y,p[e]);for(let t=0;t<x.length;t++){const a=x[t];r.texImage2D(34069+e,t+1,v,h,y,a.image[e])}}t.__maxMipLevel=x.length}c(a,g)&&u(34067,a,f.width,f.height),t.__version=a.version,a.onUpdate&&a.onUpdate(a)}function w(t,i,o,s){const d=n.convert(i.texture.format),l=n.convert(i.texture.type),p=m(i.texture.internalFormat,d,l);r.texImage2D(s,0,p,i.width,i.height,0,d,l,null),e.bindFramebuffer(36160,t),e.framebufferTexture2D(36160,o,s,a.get(i.texture).__webglTexture,0),e.bindFramebuffer(36160,null)}function L(t,r,a){if(e.bindRenderbuffer(36161,t),r.depthBuffer&&!r.stencilBuffer){let i=33189;if(a){const t=r.depthTexture;t&&t.isDepthTexture&&(t.type===Uo?i=36012:t.type===Bo&&(i=33190));const a=C(r);e.renderbufferStorageMultisample(36161,a,i,r.width,r.height)}else e.renderbufferStorage(36161,i,r.width,r.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(r.depthBuffer&&r.stencilBuffer){if(a){const t=C(r);e.renderbufferStorageMultisample(36161,t,35056,r.width,r.height)}else e.renderbufferStorage(36161,34041,r.width,r.height);e.framebufferRenderbuffer(36160,33306,36161,t)}else{const t=n.convert(r.texture.format),i=n.convert(r.texture.type),o=m(r.texture.internalFormat,t,i);if(a){const t=C(r);e.renderbufferStorageMultisample(36161,t,o,r.width,r.height)}else e.renderbufferStorage(36161,o,r.width,r.height)}e.bindRenderbuffer(36161,null)}function A(t,r){const i=r&&r.isWebGLCubeRenderTarget;if(i)throw new Error('Depth Texture with cube render targets is not supported');if(e.bindFramebuffer(36160,t),!(r.depthTexture&&r.depthTexture.isDepthTexture))throw new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');a.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),_(r.depthTexture,0);const n=a.get(r.depthTexture).__webglTexture;if(r.depthTexture.format===Yo)e.framebufferTexture2D(36160,36096,3553,n,0);else if(r.depthTexture.format===Zo)e.framebufferTexture2D(36160,33306,3553,n,0);else throw new Error('Unknown depthTexture format')}function R(t){const r=a.get(t),i=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture){if(i)throw new Error('target.depthTexture not supported in Cube render targets');A(r.__webglFramebuffer,t)}else if(i){r.__webglDepthbuffer=[];for(let a=0;6>a;a++)e.bindFramebuffer(36160,r.__webglFramebuffer[a]),r.__webglDepthbuffer[a]=e.createRenderbuffer(),L(r.__webglDepthbuffer[a],t,!1)}else e.bindFramebuffer(36160,r.__webglFramebuffer),r.__webglDepthbuffer=e.createRenderbuffer(),L(r.__webglDepthbuffer,t,!1);e.bindFramebuffer(36160,null)}function C(e){return D&&e.isWebGLMultisampleRenderTarget?yn(H,e.samples):0}function P(e){const t=o.render.frame;F.get(e)!==t&&(F.set(e,t),e.update())}function I(e,t){e&&e.isWebGLRenderTarget&&(!1===j&&(console.warn('THREE.WebGLTextures.safeSetTexture2D: don\'t use render targets as textures. Use their .texture property instead.'),j=!0),e=e.texture),_(e,t)}function N(e,t){e&&e.isWebGLCubeRenderTarget&&(!1===X&&(console.warn('THREE.WebGLTextures.safeSetTextureCube: don\'t use cube render targets as textures. Use their .texture property instead.'),X=!0),e=e.texture),b(e,t)}const D=i.isWebGL2,z=i.maxTextures,B=i.maxCubemapSize,U=i.maxTextureSize,H=i.maxSamples,F=new WeakMap;let G=!1,O;try{G='undefined'!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext('2d')}catch(e){}let V=0;const k={[Mo]:10497,[So]:33071,[To]:33648},W={[Eo]:9728,[wo]:9984,[Lo]:9986,[Ao]:9729,[Ro]:9985,[Co]:9987};let j=!1,X=!1;this.allocateTextureUnit=x,this.resetTextureUnits=function(){V=0},this.setTexture2D=_,this.setTexture2DArray=function(e,t){const i=a.get(e);return 0<e.version&&i.__version!==e.version?void T(i,e,t):void(r.activeTexture(33984+t),r.bindTexture(35866,i.__webglTexture))},this.setTexture3D=function(e,t){const i=a.get(e);return 0<e.version&&i.__version!==e.version?void T(i,e,t):void(r.activeTexture(33984+t),r.bindTexture(32879,i.__webglTexture))},this.setTextureCube=b,this.setupRenderTarget=function(t){const s=a.get(t),i=a.get(t.texture);t.addEventListener('dispose',h),i.__webglTexture=e.createTexture(),o.memory.textures++;const d=!0===t.isWebGLCubeRenderTarget,p=!0===t.isWebGLMultisampleRenderTarget,f=l(t)||D;if(D&&t.texture.format===Wo&&(t.texture.type===Uo||t.texture.type===Ho)&&(t.texture.format=jo,console.warn('THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.')),d){s.__webglFramebuffer=[];for(let t=0;6>t;t++)s.__webglFramebuffer[t]=e.createFramebuffer()}else if(s.__webglFramebuffer=e.createFramebuffer(),p)if(D){s.__webglMultisampledFramebuffer=e.createFramebuffer(),s.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,s.__webglColorRenderbuffer);const r=n.convert(t.texture.format),a=n.convert(t.texture.type),i=m(t.texture.internalFormat,r,a),o=C(t);e.renderbufferStorageMultisample(36161,o,i,t.width,t.height),e.bindFramebuffer(36160,s.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,s.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),t.depthBuffer&&(s.__webglDepthRenderbuffer=e.createRenderbuffer(),L(s.__webglDepthRenderbuffer,t,!0)),e.bindFramebuffer(36160,null)}else console.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');if(d){r.bindTexture(34067,i.__webglTexture),M(34067,t.texture,f);for(let e=0;6>e;e++)w(s.__webglFramebuffer[e],t,36064,34069+e);c(t.texture,f)&&u(34067,t.texture,t.width,t.height),r.bindTexture(34067,null)}else r.bindTexture(3553,i.__webglTexture),M(3553,t.texture,f),w(s.__webglFramebuffer,t,36064,3553),c(t.texture,f)&&u(3553,t.texture,t.width,t.height),r.bindTexture(3553,null);t.depthBuffer&&R(t)},this.updateRenderTargetMipmap=function(e){const t=e.texture,i=l(e)||D;if(c(t,i)){const i=e.isWebGLCubeRenderTarget?34067:3553,n=a.get(t).__webglTexture;r.bindTexture(i,n),u(i,t,e.width,e.height),r.bindTexture(i,null)}},this.updateMultisampleRenderTarget=function(t){if(t.isWebGLMultisampleRenderTarget)if(D){const r=a.get(t);e.bindFramebuffer(36008,r.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,r.__webglFramebuffer);const i=t.width,n=t.height;let o=16384;t.depthBuffer&&(o|=256),t.stencilBuffer&&(o|=1024),e.blitFramebuffer(0,0,i,n,0,0,i,n,o,9728),e.bindFramebuffer(36160,r.__webglMultisampledFramebuffer)}else console.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.')},this.safeSetTexture2D=I,this.safeSetTextureCube=N}function Nt(e,t,r){const a=r.isWebGL2;return{convert:function(e){let r;if(e===Po)return 5121;if(e===Fo)return 32819;if(e===Go)return 32820;if(e===Oo)return 33635;if(e===Io)return 5120;if(e===No)return 5122;if(e===Do)return 5123;if(e===zo)return 5124;if(e===Bo)return 5125;if(e===Uo)return 5126;if(e===Ho)return a?5131:(r=t.get('OES_texture_half_float'),null===r?null:r.HALF_FLOAT_OES);if(e===ko)return 6406;if(e===Wo)return 6407;if(e===jo)return 6408;if(e===Xo)return 6409;if(e===qo)return 6410;if(e===Yo)return 6402;if(e===Zo)return 34041;if(e===Jo)return 6403;if(e===Qo)return 36244;if(e===Ko)return 33319;if(e===$o)return 33320;if(e===es)return 36248;if(e===ts)return 36249;if(e===rs||e===as||e===is||e===ns)if(r=t.get('WEBGL_compressed_texture_s3tc'),null!==r){if(e===rs)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===as)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===is)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===ns)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(e===os||e===ss||e===ds||e===ls)if(r=t.get('WEBGL_compressed_texture_pvrtc'),null!==r){if(e===os)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===ss)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===ds)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===ls)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(e===ps)return r=t.get('WEBGL_compressed_texture_etc1'),null===r?null:r.COMPRESSED_RGB_ETC1_WEBGL;if((e===cs||e===us)&&(r=t.get('WEBGL_compressed_texture_etc'),null!==r)){if(e===cs)return r.COMPRESSED_RGB8_ETC2;if(e===us)return r.COMPRESSED_RGBA8_ETC2_EAC}return e===ms||e===fs||e===gs||e===hs||e===ys||e===vs||e===xs||e===_s||e===bs||e===Ms||e===Ss||e===Ts||e===Es||e===ws||e===As||e===Rs||e===Cs||e===Ps||e===Is||e===Ns||e===Ds||e===zs||e===Bs||e===Us||e===Hs||e===Fs||e===Gs||e===Os?(r=t.get('WEBGL_compressed_texture_astc'),null===r?null:e):e===Ls?(r=t.get('EXT_texture_compression_bptc'),null===r?null:e):e===Vo?a?34042:(r=t.get('WEBGL_depth_texture'),null===r?null:r.UNSIGNED_INT_24_8_WEBGL):void 0}}}function Dt(e=[]){B.call(this),this.cameras=e}function zt(){l.call(this),this.type='Group'}function Bt(){this._targetRay=null,this._grip=null,this._hand=null}function Ut(e,t){function r(e){const t=h.get(e.inputSource);t&&t.dispatchEvent({type:e.type,data:e.inputSource})}function a(){h.forEach(function(e,t){e.disconnect(t)}),h.clear(),e.setFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),w.stop(),l.isPresenting=!1,l.dispatchEvent({type:'sessionend'})}function i(e){u=e,w.setContext(p),w.start(),l.isPresenting=!0,l.dispatchEvent({type:'sessionstart'})}function n(e){const t=p.inputSources;for(let r=0;r<g.length;r++)h.set(t[r],g[r]);for(let t=0;t<e.removed.length;t++){const r=e.removed[t],a=h.get(r);a&&(a.dispatchEvent({type:'disconnected',data:r}),h.delete(r))}for(let t=0;t<e.added.length;t++){const r=e.added[t],a=h.get(r);a&&a.dispatchEvent({type:'connected',data:r})}}function o(e,t,r){S.setFromMatrixPosition(t.matrixWorld),T.setFromMatrixPosition(r.matrixWorld);const a=S.distanceTo(T),i=t.projectionMatrix.elements,n=r.projectionMatrix.elements,o=i[14]/(i[10]-1),s=i[14]/(i[10]+1),d=(i[9]+1)/i[5],l=(i[9]-1)/i[5],p=(i[8]-1)/i[0],c=(n[8]+1)/n[0],u=a/(-p+c),m=u*-p;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(m),e.translateZ(u),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();const f=o+u,g=s+u;e.projectionMatrix.makePerspective(o*p-m,o*c+(a-m),d*s/g*f,l*s/g*f,f,g)}function s(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}function d(t,r){if(f=r.getViewerPose(u),null!==f){const t=f.views,r=p.renderState.baseLayer;e.setFramebuffer(r.framebuffer);let a=!1;t.length!==_.cameras.length&&(_.cameras.length=0,a=!0);for(let e=0;e<t.length;e++){const i=t[e],n=r.getViewport(i),o=x[e];o.matrix.fromArray(i.transform.matrix),o.projectionMatrix.fromArray(i.projectionMatrix),o.viewport.set(n.x,n.y,n.width,n.height),0===e&&_.matrix.copy(o.matrix),!0==a&&_.cameras.push(o)}}const a=p.inputSources;for(let e=0;e<g.length;e++){const t=g[e],i=a[e];t.update(i,r,u)}E&&E(t,r)}const l=this;let p=null,c=1,u=null,m='local-floor',f=null;const g=[],h=new Map,y=new B;y.layers.enable(1),y.viewport=new bd;const v=new B;v.layers.enable(2),v.viewport=new bd;const x=[y,v],_=new Dt;_.layers.enable(1),_.layers.enable(2);let b=null,M=null;this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=g[e];return void 0===t&&(t=new Bt,g[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=g[e];return void 0===t&&(t=new Bt,g[e]=t),t.getGripSpace()},this.getHand=function(e){let t=g[e];return void 0===t&&(t=new Bt,g[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){c=e,!0===l.isPresenting&&console.warn('THREE.WebXRManager: Cannot change framebuffer scale while presenting.')},this.setReferenceSpaceType=function(e){m=e,!0===l.isPresenting&&console.warn('THREE.WebXRManager: Cannot change reference space type while presenting.')},this.getReferenceSpace=function(){return u},this.getSession=function(){return p},this.setSession=function(e){if(p=e,null!==p){p.addEventListener('select',r),p.addEventListener('selectstart',r),p.addEventListener('selectend',r),p.addEventListener('squeeze',r),p.addEventListener('squeezestart',r),p.addEventListener('squeezeend',r),p.addEventListener('end',a);const e=t.getContextAttributes();!0!==e.xrCompatible&&t.makeXRCompatible();const o={antialias:e.antialias,alpha:e.alpha,depth:e.depth,stencil:e.stencil,framebufferScaleFactor:c},s=new XRWebGLLayer(p,t,o);p.updateRenderState({baseLayer:s}),p.requestReferenceSpace(m).then(i),p.addEventListener('inputsourceschange',n)}};const S=new Sd,T=new Sd;this.getCamera=function(e){_.near=v.near=y.near=e.near,_.far=v.far=y.far=e.far,(b!==_.near||M!==_.far)&&(p.updateRenderState({depthNear:_.near,depthFar:_.far}),b=_.near,M=_.far);const t=e.parent,r=_.cameras;s(_,t);for(let a=0;a<r.length;a++)s(r[a],t);e.matrixWorld.copy(_.matrixWorld);const a=e.children;for(let t=0,r=a.length;t<r;t++)a[t].updateMatrixWorld(!0);return 2===r.length?o(_,y,v):_.projectionMatrix.copy(y.projectionMatrix),_};let E=null;const w=new O;w.setAnimationLoop(d),this.setAnimationLoop=function(e){E=e},this.dispose=function(){}}function Ht(e){function t(t,r){t.opacity.value=r.opacity,r.color&&t.diffuse.value.copy(r.color),r.emissive&&t.emissive.value.copy(r.emissive).multiplyScalar(r.emissiveIntensity),r.map&&(t.map.value=r.map),r.alphaMap&&(t.alphaMap.value=r.alphaMap),r.specularMap&&(t.specularMap.value=r.specularMap);const a=e.get(r).envMap;if(a){t.envMap.value=a,t.flipEnvMap.value=a.isCubeTexture&&a._needsFlipEnvMap?-1:1,t.reflectivity.value=r.reflectivity,t.refractionRatio.value=r.refractionRatio;const i=e.get(a).__maxMipLevel;i!==void 0&&(t.maxMipLevel.value=i)}r.lightMap&&(t.lightMap.value=r.lightMap,t.lightMapIntensity.value=r.lightMapIntensity),r.aoMap&&(t.aoMap.value=r.aoMap,t.aoMapIntensity.value=r.aoMapIntensity);let i;r.map?i=r.map:r.specularMap?i=r.specularMap:r.displacementMap?i=r.displacementMap:r.normalMap?i=r.normalMap:r.bumpMap?i=r.bumpMap:r.roughnessMap?i=r.roughnessMap:r.metalnessMap?i=r.metalnessMap:r.alphaMap?i=r.alphaMap:r.emissiveMap?i=r.emissiveMap:r.clearcoatMap?i=r.clearcoatMap:r.clearcoatNormalMap?i=r.clearcoatNormalMap:r.clearcoatRoughnessMap&&(i=r.clearcoatRoughnessMap),i!==void 0&&(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uvTransform.value.copy(i.matrix));let n;r.aoMap?n=r.aoMap:r.lightMap&&(n=r.lightMap),n!==void 0&&(n.isWebGLRenderTarget&&(n=n.texture),!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uv2Transform.value.copy(n.matrix))}function r(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity}function a(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}function i(e,t,r,a){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*r,e.scale.value=.5*a,t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap);let i;t.map?i=t.map:t.alphaMap&&(i=t.alphaMap),i!==void 0&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),e.uvTransform.value.copy(i.matrix))}function n(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap);let r;t.map?r=t.map:t.alphaMap&&(r=t.alphaMap),r!==void 0&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix))}function o(e,t){t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap)}function s(e,t){e.specular.value.copy(t.specular),e.shininess.value=hn(t.shininess,1e-4),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===wn&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===wn&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function d(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===wn&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===wn&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function l(t,r){t.roughness.value=r.roughness,t.metalness.value=r.metalness,r.roughnessMap&&(t.roughnessMap.value=r.roughnessMap),r.metalnessMap&&(t.metalnessMap.value=r.metalnessMap),r.emissiveMap&&(t.emissiveMap.value=r.emissiveMap),r.bumpMap&&(t.bumpMap.value=r.bumpMap,t.bumpScale.value=r.bumpScale,r.side===wn&&(t.bumpScale.value*=-1)),r.normalMap&&(t.normalMap.value=r.normalMap,t.normalScale.value.copy(r.normalScale),r.side===wn&&t.normalScale.value.negate()),r.displacementMap&&(t.displacementMap.value=r.displacementMap,t.displacementScale.value=r.displacementScale,t.displacementBias.value=r.displacementBias);const a=e.get(r).envMap;a&&(t.envMapIntensity.value=r.envMapIntensity)}function p(e,t){l(e,t),e.reflectivity.value=t.reflectivity,e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.sheen&&e.sheen.value.copy(t.sheen),t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap),t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap),t.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),e.clearcoatNormalMap.value=t.clearcoatNormalMap,t.side===wn&&e.clearcoatNormalScale.value.negate()),e.transmission.value=t.transmission,t.transmissionMap&&(e.transmissionMap.value=t.transmissionMap)}function c(e,t){t.matcap&&(e.matcap.value=t.matcap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===wn&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===wn&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function u(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function m(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}function f(e,t){t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===wn&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===wn&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(e,g,h,y){g.isMeshBasicMaterial?t(e,g):g.isMeshLambertMaterial?(t(e,g),o(e,g)):g.isMeshToonMaterial?(t(e,g),d(e,g)):g.isMeshPhongMaterial?(t(e,g),s(e,g)):g.isMeshStandardMaterial?(t(e,g),g.isMeshPhysicalMaterial?p(e,g):l(e,g)):g.isMeshMatcapMaterial?(t(e,g),c(e,g)):g.isMeshDepthMaterial?(t(e,g),u(e,g)):g.isMeshDistanceMaterial?(t(e,g),m(e,g)):g.isMeshNormalMaterial?(t(e,g),f(e,g)):g.isLineBasicMaterial?(r(e,g),g.isLineDashedMaterial&&a(e,g)):g.isPointsMaterial?i(e,g,h,y):g.isSpriteMaterial?n(e,g):g.isShadowMaterial?(e.color.value.copy(g.color),e.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}}}function Ft(){const e=document.createElementNS('http://www.w3.org/1999/xhtml','canvas');return e.style.display='block',e}function Gt(e){function t(){return null===B?oe:1}function r(e,t){for(let r=0;r<e.length;r++){const a=e[r],i=v.getContext(a,t);if(null!==i)return i}return null}function a(){xe=new Z(ve),_e=new X(ve,xe,e),!1===_e.isWebGL2&&(xe.get('WEBGL_depth_texture'),xe.get('OES_texture_float'),xe.get('OES_texture_half_float'),xe.get('OES_texture_half_float_linear'),xe.get('OES_standard_derivatives'),xe.get('OES_element_index_uint'),xe.get('OES_vertex_array_object'),xe.get('ANGLE_instanced_arrays')),xe.get('OES_texture_float_linear'),He=new Nt(ve,xe,_e),be=new Pt(ve,xe,_e),be.scissor(ee.copy(pe).multiplyScalar(oe).floor()),be.viewport($.copy(le).multiplyScalar(oe).floor()),Me=new K(ve),Se=new yt,Te=new It(ve,xe,be,Se,_e,He,Me),Ee=new Y(P),we=new V(ve,_e),Fe=new W(ve,xe,we,_e),Le=new J(ve,we,Me,Fe),Ae=new re(ve,Le,we,Me),ze=new te(ve),Ne=new q(Se),Re=new ht(P,Ee,xe,_e,Fe,Ne),Ce=new Ht(Se),Pe=new bt(Se),Ie=new Lt(xe,_e),De=new k(P,Ee,be,Ae,T),Be=new j(ve,xe,Me,_e),Ue=new Q(ve,xe,Me,_e),Me.programs=Re.programs,P.capabilities=_e,P.extensions=xe,P.properties=Se,P.renderLists=Pe,P.state=be,P.info=Me}function i(e){e.preventDefault(),console.log('THREE.WebGLRenderer: Context Lost.'),I=!0}function n(){console.log('THREE.WebGLRenderer: Context Restored.'),I=!1,a()}function o(e){const t=e.target;t.removeEventListener('dispose',o),s(t)}function s(e){d(e),Se.remove(e)}function d(e){const t=Se.get(e).program;t!==void 0&&Re.releaseProgram(t)}function l(e,t){e.render(function(e){P.renderBufferImmediate(e,t)})}function p(e){Ge.isPresenting||Ve&&Ve(e)}function c(e,t,r,a){if(!1!==e.visible){const i=e.layers.test(t.layers);if(i)if(e.isGroup)r=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)R.pushLight(e),e.castShadow&&R.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||ue.intersectsSprite(e)){a&&he.setFromMatrixPosition(e.matrixWorld).applyMatrix4(ge);const t=Ae.update(e),i=e.material;i.visible&&A.push(e,t,i,r,he.z,null)}}else if(e.isImmediateRenderObject)a&&he.setFromMatrixPosition(e.matrixWorld).applyMatrix4(ge),A.push(e,null,e.material,r,he.z,null);else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.frame!==Me.render.frame&&(e.skeleton.update(),e.skeleton.frame=Me.render.frame),!e.frustumCulled||ue.intersectsObject(e))){a&&he.setFromMatrixPosition(e.matrixWorld).applyMatrix4(ge);const t=Ae.update(e),n=e.material;if(Array.isArray(n)){const a=t.groups;for(let o=0,i=a.length;o<i;o++){const i=a[o],s=n[i.materialIndex];s&&s.visible&&A.push(e,t,s,r,he.z,i)}}else n.visible&&A.push(e,t,n,r,he.z,null)}const n=e.children;for(let e=0,i=n.length;e<i;e++)c(n[e],t,r,a)}}function u(e,t,r){const a=!0===t.isScene?t.overrideMaterial:null;for(let n=0,i=e.length;n<i;n++){const i=e[n],o=i.object,s=i.geometry,d=null===a?i.material:a,l=i.group;if(r.isArrayCamera){const e=r.cameras;for(let r=0,a=e.length;r<a;r++){const a=e[r];o.layers.test(a.layers)&&(be.viewport($.copy(a.viewport)),R.setupLightsView(a),m(o,t,a,s,d,l))}}else m(o,t,r,s,d,l)}}function m(e,t,r,a,i,n){if(e.onBeforeRender(P,t,r,a,i,n),e.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),e.isImmediateRenderObject){const a=g(r,t,i,e);be.setMaterial(i),Fe.reset(),l(e,a)}else P.renderBufferDirect(r,t,a,i,e,n);e.onAfterRender(P,t,r,a,i,n)}function f(e,t,r){!0!==t.isScene&&(t=ye);const a=Se.get(e),i=R.state.lights,n=R.state.shadowsArray,s=i.state.version,l=Re.getParameters(e,i.state,n,t,r),p=Re.getProgramCacheKey(l);let c=a.program,u=!0;if(c===void 0)e.addEventListener('dispose',o);else if(c.cacheKey!==p)d(e);else if(a.lightsStateVersion!==s)u=!1;else{if(l.shaderID!==void 0){const r=e.isMeshStandardMaterial?t.environment:null;return void(a.envMap=Ee.get(e.envMap||r))}u=!1}u&&(l.uniforms=Re.getUniforms(e),e.onBeforeCompile(l,P),c=Re.acquireProgram(l,p),a.program=c,a.uniforms=l.uniforms,a.outputEncoding=l.outputEncoding);const m=a.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(a.numClippingPlanes=Ne.numPlanes,a.numIntersection=Ne.numIntersection,m.clippingPlanes=Ne.uniform),a.environment=e.isMeshStandardMaterial?t.environment:null,a.fog=t.fog,a.envMap=Ee.get(e.envMap||a.environment),a.needsLights=y(e),a.lightsStateVersion=s,a.needsLights&&(m.ambientLightColor.value=i.state.ambient,m.lightProbe.value=i.state.probe,m.directionalLights.value=i.state.directional,m.directionalLightShadows.value=i.state.directionalShadow,m.spotLights.value=i.state.spot,m.spotLightShadows.value=i.state.spotShadow,m.rectAreaLights.value=i.state.rectArea,m.ltc_1.value=i.state.rectAreaLTC1,m.ltc_2.value=i.state.rectAreaLTC2,m.pointLights.value=i.state.point,m.pointLightShadows.value=i.state.pointShadow,m.hemisphereLights.value=i.state.hemi,m.directionalShadowMap.value=i.state.directionalShadowMap,m.directionalShadowMatrix.value=i.state.directionalShadowMatrix,m.spotShadowMap.value=i.state.spotShadowMap,m.spotShadowMatrix.value=i.state.spotShadowMatrix,m.pointShadowMap.value=i.state.pointShadowMap,m.pointShadowMatrix.value=i.state.pointShadowMatrix);const f=a.program.getUniforms(),g=je.seqWithValue(f.seq,m);a.uniformsList=g}function g(e,t,r,a){!0!==t.isScene&&(t=ye),Te.resetTextureUnits();const i=t.fog,n=r.isMeshStandardMaterial?t.environment:null,o=null===B?P.outputEncoding:B.texture.encoding,s=Ee.get(r.envMap||n),d=Se.get(r),l=R.state.lights;if(!0===me&&(!0===fe||e!==F)){const t=e===F&&r.id===H;Ne.setState(r,e,t)}r.version===d.__version?r.fog&&d.fog!==i?f(r,t,a):d.environment===n?d.needsLights&&d.lightsStateVersion!==l.state.version?f(r,t,a):void 0!==d.numClippingPlanes&&(d.numClippingPlanes!==Ne.numPlanes||d.numIntersection!==Ne.numIntersection)?f(r,t,a):d.outputEncoding===o?d.envMap!==s&&f(r,t,a):f(r,t,a):f(r,t,a):(f(r,t,a),d.__version=r.version);let p=!1,c=!1,u=!1;const m=d.program,g=m.getUniforms(),y=d.uniforms;if(be.useProgram(m.program)&&(p=!0,c=!0,u=!0),r.id!==H&&(H=r.id,c=!0),p||F!==e){if(g.setValue(ve,'projectionMatrix',e.projectionMatrix),_e.logarithmicDepthBuffer&&g.setValue(ve,'logDepthBufFC',2/(fn(e.far+1)/mn)),F!==e&&(F=e,c=!0,u=!0),r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshStandardMaterial||r.envMap){const t=g.map.cameraPosition;void 0!==t&&t.setValue(ve,he.setFromMatrixPosition(e.matrixWorld))}(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&g.setValue(ve,'isOrthographic',!0===e.isOrthographicCamera),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.isShadowMaterial||r.skinning)&&g.setValue(ve,'viewMatrix',e.matrixWorldInverse)}if(r.skinning){g.setOptional(ve,a,'bindMatrix'),g.setOptional(ve,a,'bindMatrixInverse');const e=a.skeleton;if(e){const t=e.bones;if(_e.floatVertexTextures){if(null===e.boneTexture){let r=sn(4*t.length);r=gd.ceilPowerOfTwo(r),r=hn(r,4);const a=new Float32Array(4*(r*r));a.set(e.boneMatrices);const i=new G(a,r,r,jo,Uo);e.boneMatrices=a,e.boneTexture=i,e.boneTextureSize=r}g.setValue(ve,'boneTexture',e.boneTexture,Te),g.setValue(ve,'boneTextureSize',e.boneTextureSize)}else g.setOptional(ve,e,'boneMatrices')}}return(c||d.receiveShadow!==a.receiveShadow)&&(d.receiveShadow=a.receiveShadow,g.setValue(ve,'receiveShadow',a.receiveShadow)),c&&(g.setValue(ve,'toneMappingExposure',P.toneMappingExposure),d.needsLights&&h(y,u),i&&r.fog&&Ce.refreshFogUniforms(y,i),Ce.refreshMaterialUniforms(y,r,oe,ne),je.upload(ve,d.uniformsList,y,Te)),r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(je.upload(ve,d.uniformsList,y,Te),r.uniformsNeedUpdate=!1),r.isSpriteMaterial&&g.setValue(ve,'center',a.center),g.setValue(ve,'modelViewMatrix',a.modelViewMatrix),g.setValue(ve,'normalMatrix',a.normalMatrix),g.setValue(ve,'modelMatrix',a.matrixWorld),m}function h(e,t){e.ambientLightColor.needsUpdate=t,e.lightProbe.needsUpdate=t,e.directionalLights.needsUpdate=t,e.directionalLightShadows.needsUpdate=t,e.pointLights.needsUpdate=t,e.pointLightShadows.needsUpdate=t,e.spotLights.needsUpdate=t,e.spotLightShadows.needsUpdate=t,e.rectAreaLights.needsUpdate=t,e.hemisphereLights.needsUpdate=t}function y(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}e=e||{};const v=e.canvas===void 0?Ft():e.canvas,x=e.context===void 0?null:e.context,_=e.alpha!==void 0&&e.alpha,b=!(e.depth!==void 0)||e.depth,M=!(e.stencil!==void 0)||e.stencil,S=e.antialias!==void 0&&e.antialias,T=!(e.premultipliedAlpha!==void 0)||e.premultipliedAlpha,E=e.preserveDrawingBuffer!==void 0&&e.preserveDrawingBuffer,w=e.powerPreference===void 0?'default':e.powerPreference,L=e.failIfMajorPerformanceCaveat!==void 0&&e.failIfMajorPerformanceCaveat;let A=null,R=null;const C=[];this.domElement=v,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=Js,this.physicallyCorrectLights=!1,this.toneMapping=lo,this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4;const P=this;let I=!1,N=null,D=0,z=0,B=null,U=null,H=-1,F=null;const $=new bd,ee=new bd;let ae=null,ie=v.width,ne=v.height,oe=1,se=null,de=null;const le=new bd(0,0,ie,ne),pe=new bd(0,0,ie,ne);let ce=!1;const ue=new Tp;let me=!1,fe=!1;const ge=new Jd,he=new Sd,ye={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let ve=x;try{if(v.addEventListener('webglcontextlost',i,!1),v.addEventListener('webglcontextrestored',n,!1),null===ve){const e=['webgl2','webgl','experimental-webgl'];if(!0===P.isWebGL1Renderer&&e.shift(),ve=r(e,{alpha:_,depth:b,stencil:M,antialias:S,premultipliedAlpha:T,preserveDrawingBuffer:E,powerPreference:w,failIfMajorPerformanceCaveat:L}),null===ve)if(r(e))throw new Error('Error creating WebGL context with your selected attributes.');else throw new Error('Error creating WebGL context.')}void 0===ve.getShaderPrecisionFormat&&(ve.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error('THREE.WebGLRenderer: '+e.message),e}let xe,_e,be,Me,Se,Te,Ee,we,Le,Ae,Re,Ce,Pe,Ie,Ne,De,ze,Be,Ue,He,Fe;a();const Ge=new Ut(P,ve);this.xr=Ge;const Oe=new Ct(P,Ae,_e.maxTextureSize);this.shadowMap=Oe,this.getContext=function(){return ve},this.getContextAttributes=function(){return ve.getContextAttributes()},this.forceContextLoss=function(){const e=xe.get('WEBGL_lose_context');e&&e.loseContext()},this.forceContextRestore=function(){const e=xe.get('WEBGL_lose_context');e&&e.restoreContext()},this.getPixelRatio=function(){return oe},this.setPixelRatio=function(e){void 0===e||(oe=e,this.setSize(ie,ne,!1))},this.getSize=function(e){return void 0===e&&(console.warn('WebGLRenderer: .getsize() now requires a Vector2 as an argument'),e=new hd),e.set(ie,ne)},this.setSize=function(e,t,r){return Ge.isPresenting?void console.warn('THREE.WebGLRenderer: Can\'t change size while VR device is presenting.'):void(ie=e,ne=t,v.width=gn(e*oe),v.height=gn(t*oe),!1!==r&&(v.style.width=e+'px',v.style.height=t+'px'),this.setViewport(0,0,e,t))},this.getDrawingBufferSize=function(e){return void 0===e&&(console.warn('WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument'),e=new hd),e.set(ie*oe,ne*oe).floor()},this.setDrawingBufferSize=function(e,t,r){ie=e,ne=t,oe=r,v.width=gn(e*r),v.height=gn(t*r),this.setViewport(0,0,e,t)},this.getCurrentViewport=function(e){return void 0===e&&(console.warn('WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument'),e=new bd),e.copy($)},this.getViewport=function(e){return e.copy(le)},this.setViewport=function(e,t,r,a){e.isVector4?le.set(e.x,e.y,e.z,e.w):le.set(e,t,r,a),be.viewport($.copy(le).multiplyScalar(oe).floor())},this.getScissor=function(e){return e.copy(pe)},this.setScissor=function(e,t,r,a){e.isVector4?pe.set(e.x,e.y,e.z,e.w):pe.set(e,t,r,a),be.scissor(ee.copy(pe).multiplyScalar(oe).floor())},this.getScissorTest=function(){return ce},this.setScissorTest=function(e){be.setScissorTest(ce=e)},this.setOpaqueSort=function(e){se=e},this.setTransparentSort=function(e){de=e},this.getClearColor=function(e){return void 0===e&&(console.warn('WebGLRenderer: .getClearColor() now requires a Color as an argument'),e=new Fl),e.copy(De.getClearColor())},this.setClearColor=function(){De.setClearColor.apply(De,arguments)},this.getClearAlpha=function(){return De.getClearAlpha()},this.setClearAlpha=function(){De.setClearAlpha.apply(De,arguments)},this.clear=function(e,t,r){let a=0;(e===void 0||e)&&(a|=16384),(t===void 0||t)&&(a|=256),(r===void 0||r)&&(a|=1024),ve.clear(a)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){v.removeEventListener('webglcontextlost',i,!1),v.removeEventListener('webglcontextrestored',n,!1),Pe.dispose(),Ie.dispose(),Se.dispose(),Ee.dispose(),Ae.dispose(),Fe.dispose(),Ge.dispose(),ke.stop()},this.renderBufferImmediate=function(e,t){Fe.initAttributes();const r=Se.get(e);e.hasPositions&&!r.position&&(r.position=ve.createBuffer()),e.hasNormals&&!r.normal&&(r.normal=ve.createBuffer()),e.hasUvs&&!r.uv&&(r.uv=ve.createBuffer()),e.hasColors&&!r.color&&(r.color=ve.createBuffer());const a=t.getAttributes();e.hasPositions&&(ve.bindBuffer(34962,r.position),ve.bufferData(34962,e.positionArray,35048),Fe.enableAttribute(a.position),ve.vertexAttribPointer(a.position,3,5126,!1,0,0)),e.hasNormals&&(ve.bindBuffer(34962,r.normal),ve.bufferData(34962,e.normalArray,35048),Fe.enableAttribute(a.normal),ve.vertexAttribPointer(a.normal,3,5126,!1,0,0)),e.hasUvs&&(ve.bindBuffer(34962,r.uv),ve.bufferData(34962,e.uvArray,35048),Fe.enableAttribute(a.uv),ve.vertexAttribPointer(a.uv,2,5126,!1,0,0)),e.hasColors&&(ve.bindBuffer(34962,r.color),ve.bufferData(34962,e.colorArray,35048),Fe.enableAttribute(a.color),ve.vertexAttribPointer(a.color,3,5126,!1,0,0)),Fe.disableUnusedAttributes(),ve.drawArrays(4,0,e.count),e.count=0},this.renderBufferDirect=function(e,r,a,i,n,o){null===r&&(r=ye);const s=n.isMesh&&0>n.matrixWorld.determinant(),d=g(e,r,i,n);be.setMaterial(i,s);let l=a.index;const p=a.attributes.position;if(null===l){if(void 0===p||0===p.count)return;}else if(0===l.count)return;let c=1;!0===i.wireframe&&(l=Le.getWireframeAttribute(a),c=2),(i.morphTargets||i.morphNormals)&&ze.update(n,a,i,d),Fe.setup(n,i,d,a,l);let u=Be,m;null!==l&&(m=we.get(l),u=Ue,u.setIndex(m));const f=null===l?p.count:l.count,h=a.drawRange.start*c,y=a.drawRange.count*c,v=null===o?0:o.start*c,x=null===o?Infinity:o.count*c,_=hn(h,v),b=yn(f,h+y,v+x)-1,M=hn(0,b-_+1);if(0!==M){if(n.isMesh)!0===i.wireframe?(be.setLineWidth(i.wireframeLinewidth*t()),u.setMode(1)):u.setMode(4);else if(n.isLine){let e=i.linewidth;void 0===e&&(e=1),be.setLineWidth(e*t()),n.isLineSegments?u.setMode(1):n.isLineLoop?u.setMode(2):u.setMode(3)}else n.isPoints?u.setMode(0):n.isSprite&&u.setMode(4);if(n.isInstancedMesh)u.renderInstances(_,M,n.count);else if(a.isInstancedBufferGeometry){const e=yn(a.instanceCount,a._maxInstanceCount);u.renderInstances(_,M,e)}else u.render(_,M)}},this.compile=function(e,t){R=Ie.get(e),R.init(),e.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(R.pushLight(e),e.castShadow&&R.pushShadow(e))}),R.setupLights();const r=new WeakMap;e.traverse(function(t){const a=t.material;if(a)if(Array.isArray(a))for(let n=0;n<a.length;n++){const i=a[n];!1===r.has(i)&&(f(i,e,t),r.set(i))}else!1===r.has(a)&&(f(a,e,t),r.set(a))})};let Ve=null;const ke=new O;ke.setAnimationLoop(p),'undefined'!=typeof window&&ke.setContext(window),this.setAnimationLoop=function(e){Ve=e,Ge.setAnimationLoop(e),null===e?ke.stop():ke.start()},this.render=function(e,t){let r,a;if(void 0!==arguments[2]&&(console.warn('THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.'),r=arguments[2]),void 0!==arguments[3]&&(console.warn('THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.'),a=arguments[3]),void 0!==t&&!0!==t.isCamera)return void console.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');if(!0!=I){Fe.resetDefaultState(),H=-1,F=null,!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),!0===Ge.enabled&&!0===Ge.isPresenting&&(t=Ge.getCamera(t)),!0===e.isScene&&e.onBeforeRender(P,e,t,r||B),R=Ie.get(e,C.length),R.init(),C.push(R),ge.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),ue.setFromProjectionMatrix(ge),fe=this.localClippingEnabled,me=Ne.init(this.clippingPlanes,fe,t),A=Pe.get(e,t),A.init(),c(e,t,0,P.sortObjects),A.finish(),!0===P.sortObjects&&A.sort(se,de),!0===me&&Ne.beginShadows();const i=R.state.shadowsArray;Oe.render(i,e,t),R.setupLights(),R.setupLightsView(t),!0===me&&Ne.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==r&&this.setRenderTarget(r),De.render(A,e,t,a);const n=A.opaque,o=A.transparent;0<n.length&&u(n,e,t),0<o.length&&u(o,e,t),!0===e.isScene&&e.onAfterRender(P,e,t),null!==B&&(Te.updateRenderTargetMipmap(B),Te.updateMultisampleRenderTarget(B)),be.buffers.depth.setTest(!0),be.buffers.depth.setMask(!0),be.buffers.color.setMask(!0),be.setPolygonOffset(!1),C.pop(),R=0<C.length?C[C.length-1]:null,A=null}},this.setFramebuffer=function(e){N!==e&&null===B&&ve.bindFramebuffer(36160,e),N=e},this.getActiveCubeFace=function(){return D},this.getActiveMipmapLevel=function(){return z},this.getRenderList=function(){return A},this.setRenderList=function(e){A=e},this.getRenderTarget=function(){return B},this.setRenderTarget=function(e,t=0,r=0){B=e,D=t,z=r,e&&void 0===Se.get(e).__webglFramebuffer&&Te.setupRenderTarget(e);let a=N,i=!1;if(e){const r=Se.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(a=r[t],i=!0):e.isWebGLMultisampleRenderTarget?a=Se.get(e).__webglMultisampledFramebuffer:a=r,$.copy(e.viewport),ee.copy(e.scissor),ae=e.scissorTest}else $.copy(le).multiplyScalar(oe).floor(),ee.copy(pe).multiplyScalar(oe).floor(),ae=ce;if(U!==a&&(ve.bindFramebuffer(36160,a),U=a),be.viewport($),be.scissor(ee),be.setScissorTest(ae),i){const a=Se.get(e.texture);ve.framebufferTexture2D(36160,36064,34069+t,a.__webglTexture,r)}},this.readRenderTargetPixels=function(e,t,r,a,i,n,o){if(!(e&&e.isWebGLRenderTarget))return void console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');let s=Se.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==o&&(s=s[o]),s){let o=!1;s!==U&&(ve.bindFramebuffer(36160,s),o=!0);try{const o=e.texture,s=o.format,d=o.type;if(s!==jo&&He.convert(s)!==ve.getParameter(35739))return void console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');if(d!==Po&&He.convert(d)!==ve.getParameter(35738)&&!(d===Uo&&(_e.isWebGL2||xe.get('OES_texture_float')||xe.get('WEBGL_color_buffer_float')))&&!(d===Ho&&(_e.isWebGL2?xe.get('EXT_color_buffer_float'):xe.get('EXT_color_buffer_half_float'))))return void console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');36053===ve.checkFramebufferStatus(36160)?0<=t&&t<=e.width-a&&0<=r&&r<=e.height-i&&ve.readPixels(t,r,a,i,He.convert(s),He.convert(d),n):console.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.')}finally{o&&ve.bindFramebuffer(36160,U)}}},this.copyFramebufferToTexture=function(e,t,r=0){const a=cn(2,-r),i=gn(t.image.width*a),n=gn(t.image.height*a),o=He.convert(t.format);Te.setTexture2D(t,0),ve.copyTexImage2D(3553,r,o,e.x,e.y,i,n,0),be.unbindTexture()},this.copyTextureToTexture=function(e,t,r,a=0){const i=t.image.width,n=t.image.height,o=He.convert(r.format),s=He.convert(r.type);Te.setTexture2D(r,0),ve.pixelStorei(37440,r.flipY),ve.pixelStorei(37441,r.premultiplyAlpha),ve.pixelStorei(3317,r.unpackAlignment),t.isDataTexture?ve.texSubImage2D(3553,a,e.x,e.y,i,n,o,s,t.image.data):t.isCompressedTexture?ve.compressedTexSubImage2D(3553,a,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,o,t.mipmaps[0].data):ve.texSubImage2D(3553,a,e.x,e.y,o,s,t.image),0===a&&r.generateMipmaps&&ve.generateMipmap(3553),be.unbindTexture()},this.initTexture=function(e){Te.setTexture2D(e,0),be.unbindTexture()},this.resetState=function(){be.reset(),Fe.reset()},'undefined'!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe',{detail:this}))}function Ot(e){Gt.call(this,e)}function Vt(e,t){this.array=e,this.stride=t,this.count=e===void 0?0:e.length/t,this.usage=pd,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=gd.generateUUID()}function kt(e,t,r,a){this.name='',this.data=e,this.itemSize=t,this.offset=r,this.normalized=!0===a}function Wt(e){m.call(this),this.type='SpriteMaterial',this.color=new Fl(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}function jt(e){if(l.call(this),this.type='Sprite',void 0===Jp){Jp=new A;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),t=new Vt(e,5);Jp.setIndex([0,1,2,0,2,3]),Jp.setAttribute('position',new kt(t,3,0,!1)),Jp.setAttribute('uv',new kt(t,2,3,!1))}this.geometry=Jp,this.material=void 0===e?new Wt:e,this.center=new hd(.5,.5)}function Xt(e,t,r,a,i,n){ec.subVectors(e,r).addScalar(.5).multiply(a),i===void 0?tc.copy(ec):(tc.x=n*ec.x-i*ec.y,tc.y=i*ec.x+n*ec.y),e.copy(t),e.x+=tc.x,e.y+=tc.y,e.applyMatrix4(rc)}function qt(){l.call(this),this._currentLevel=0,this.type='LOD',Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}function Yt(e,t){e&&e.isGeometry&&console.error('THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.'),R.call(this,e,t),this.type='SkinnedMesh',this.bindMode='attached',this.bindMatrix=new Jd,this.bindMatrixInverse=new Jd}function Zt(){l.call(this),this.type='Bone'}function Jt(e=[],t=[]){this.uuid=gd.generateUUID(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}function Qt(e,t,r){R.call(this,e,t),this.instanceMatrix=new g(new Float32Array(16*r),16),this.instanceColor=null,this.count=r,this.frustumCulled=!1}function Kt(e){m.call(this),this.type='LineBasicMaterial',this.color=new Fl(16777215),this.linewidth=1,this.linecap='round',this.linejoin='round',this.morphTargets=!1,this.setValues(e)}function $t(e=new A,t=new Kt){l.call(this),this.type='Line',this.geometry=e,this.material=t,this.updateMorphTargets()}function er(e,t){$t.call(this,e,t),this.type='LineSegments'}function tr(e,t){$t.call(this,e,t),this.type='LineLoop'}function rr(e){m.call(this),this.type='PointsMaterial',this.color=new Fl(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(e)}function ar(e=new A,t=new rr){l.call(this),this.type='Points',this.geometry=e,this.material=t,this.updateMorphTargets()}function ir(e,t,r,a,i,n,o){const s=Cc.distanceSqToPoint(e);if(s<r){const r=new Sd;Cc.closestPointToPoint(e,r),r.applyMatrix4(a);const d=i.ray.origin.distanceTo(r);if(d<i.near||d>i.far)return;n.push({distance:d,distanceToRay:sn(s),point:r,index:t,face:null,object:o})}}function nr(e,t,r,a,n,o,s,d,l){function p(){c.needsUpdate=!0,e.requestVideoFrameCallback(p)}i.call(this,e,t,r,a,n,o,s,d,l),this.format=s===void 0?Wo:s,this.minFilter=o===void 0?Ao:o,this.magFilter=n===void 0?Ao:n,this.generateMipmaps=!1;const c=this;'requestVideoFrameCallback'in e&&e.requestVideoFrameCallback(p)}function or(e,t,r,a,n,o,s,d,l,p,c,u){i.call(this,null,o,s,d,l,p,a,n,c,u),this.image={width:t,height:r},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}function sr(e,t,r,a,n,o,s,d,l){i.call(this,e,t,r,a,n,o,s,d,l),this.needsUpdate=!0}function dr(e,t,r,a,n,o,s,d,l,p){if(p=void 0===p?Yo:p,p!==Yo&&p!==Zo)throw new Error('DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat');void 0===r&&p===Yo&&(r=Do),void 0===r&&p===Zo&&(r=Vo),i.call(this,null,a,n,o,s,d,p,r,l),this.image={width:e,height:t},this.magFilter=void 0===s?Eo:s,this.minFilter=void 0===d?Eo:d,this.flipY=!1,this.generateMipmaps=!1}function lr(){Object.defineProperty(this,'id',{value:Nc+=2}),this.uuid=gd.generateUUID(),this.name='',this.type='Geometry',this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}function pr(e,t,r,a,n){let o,i;if(n===0<Gr(e,t,r,a))for(o=t;o<r;o+=a)i=Ur(o,e[o],e[o+1],i);else for(o=r-a;o>=t;o-=a)i=Ur(o,e[o],e[o+1],i);return i&&Rr(i,i.next)&&(Hr(i),i=i.next),i}function cr(e,t){if(!e)return e;t||(t=e);let r=e,a;do if(a=!1,!r.steiner&&(Rr(r,r.next)||0===Ar(r.prev,r,r.next))){if(Hr(r),r=t=r.prev,r===r.next)break;a=!0}else r=r.next;while(a||r!==t);return t}function ur(e,t,r,a,i,n,o){if(e){!o&&n&&Mr(e,a,i,n);for(let s=e,d,l;e.prev!==e.next;){if(d=e.prev,l=e.next,n?fr(e,a,i,n):mr(e)){t.push(d.i/r),t.push(e.i/r),t.push(l.i/r),Hr(e),e=l.next,s=l.next;continue}if(e=l,e===s){o?1===o?(e=gr(cr(e),t,r),ur(e,t,r,a,i,n,2)):2==o&&hr(e,t,r,a,i,n):ur(cr(e),t,r,a,i,n,1);break}}}}function mr(e){const t=e.prev,r=e,a=e.next;if(0<=Ar(t,r,a))return!1;for(let i=e.next.next;i!==e.prev;){if(wr(t.x,t.y,r.x,r.y,a.x,a.y,i.x,i.y)&&0<=Ar(i.prev,i,i.next))return!1;i=i.next}return!0}function fr(e,t,r,i){const o=e.prev,a=e,s=e.next;if(0<=Ar(o,a,s))return!1;const d=o.x<a.x?o.x<s.x?o.x:s.x:a.x<s.x?a.x:s.x,l=o.y<a.y?o.y<s.y?o.y:s.y:a.y<s.y?a.y:s.y,c=o.x>a.x?o.x>s.x?o.x:s.x:a.x>s.x?a.x:s.x,u=o.y>a.y?o.y>s.y?o.y:s.y:a.y>s.y?a.y:s.y,m=Tr(d,l,t,r,i),f=Tr(c,u,t,r,i);let g=e.prevZ,p=e.nextZ;for(;g&&g.z>=m&&p&&p.z<=f;){if(g!==e.prev&&g!==e.next&&wr(o.x,o.y,a.x,a.y,s.x,s.y,g.x,g.y)&&0<=Ar(g.prev,g,g.next))return!1;if(g=g.prevZ,p!==e.prev&&p!==e.next&&wr(o.x,o.y,a.x,a.y,s.x,s.y,p.x,p.y)&&0<=Ar(p.prev,p,p.next))return!1;p=p.nextZ}for(;g&&g.z>=m;){if(g!==e.prev&&g!==e.next&&wr(o.x,o.y,a.x,a.y,s.x,s.y,g.x,g.y)&&0<=Ar(g.prev,g,g.next))return!1;g=g.prevZ}for(;p&&p.z<=f;){if(p!==e.prev&&p!==e.next&&wr(o.x,o.y,a.x,a.y,s.x,s.y,p.x,p.y)&&0<=Ar(p.prev,p,p.next))return!1;p=p.nextZ}return!0}function gr(e,t,r){let i=e;do{const n=i.prev,a=i.next.next;!Rr(n,a)&&Cr(n,i,i.next,a)&&Dr(n,a)&&Dr(a,n)&&(t.push(n.i/r),t.push(i.i/r),t.push(a.i/r),Hr(i),Hr(i.next),i=e=a),i=i.next}while(i!==e);return cr(i)}function hr(e,t,r,i,n,o){let s=e;do{for(let e=s.next.next;e!==s.prev;){if(s.i!==e.i&&Lr(s,e)){let a=Br(s,e);return s=cr(s,s.next),a=cr(a,a.next),ur(s,t,r,i,n,o),void ur(a,t,r,i,n,o)}e=e.next}s=s.next}while(s!==e)}function yr(e,t,r,a){const n=[];let o,i,s,d,l;for(o=0,i=t.length;o<i;o++)s=t[o]*a,d=o<i-1?t[o+1]*a:e.length,l=pr(e,s,d,a,!1),l===l.next&&(l.steiner=!0),n.push(Er(l));for(n.sort(vr),o=0;o<n.length;o++)xr(n[o],r),r=cr(r,r.next);return r}function vr(e,t){return e.x-t.x}function xr(e,t){if(t=_r(e,t),t){const r=Br(t,e);cr(t,t.next),cr(r,r.next)}}function _r(e,t){let r=t;const a=e.x,i=e.y;let n=-Infinity,o;do{if(i<=r.y&&i>=r.next.y&&r.next.y!==r.y){const e=r.x+(i-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(e<=a&&e>n){if(n=e,e===a){if(i===r.y)return r;if(i===r.next.y)return r.next}o=r.x<r.next.x?r:r.next}}r=r.next}while(r!==t);if(!o)return null;if(a===n)return o;const s=o,d=o.x,l=o.y;let p=Infinity,c;r=o;do a>=r.x&&r.x>=d&&a!==r.x&&wr(i<l?a:n,i,d,l,i<l?n:a,i,r.x,r.y)&&(c=on(i-r.y)/(a-r.x),Dr(r,e)&&(c<p||c===p&&(r.x>o.x||r.x===o.x&&br(o,r)))&&(o=r,p=c)),r=r.next;while(r!==s);return o}function br(e,t){return 0>Ar(e.prev,e,t.prev)&&0>Ar(t.next,e,e.next)}function Mr(e,t,r,a){let i=e;do null===i.z&&(i.z=Tr(i.x,i.y,t,r,a)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==e);i.prevZ.nextZ=null,i.prevZ=null,Sr(i)}function Sr(t){let r=1,a,i,n,o,e,s,d,l;do{for(i=t,t=null,e=null,s=0;i;){for(s++,n=i,d=0,a=0;a<r&&(d++,n=n.nextZ,!!n);a++);for(l=r;0<d||0<l&&n;)0!==d&&(0===l||!n||i.z<=n.z)?(o=i,i=i.nextZ,d--):(o=n,n=n.nextZ,l--),e?e.nextZ=o:t=o,o.prevZ=e,e=o;i=n}e.nextZ=null,r*=2}while(1<s);return t}function Tr(e,t,r,a,i){return e=32767*(e-r)*i,t=32767*(t-a)*i,e=16711935&(e|e<<8),e=252645135&(e|e<<4),e=858993459&(e|e<<2),e=1431655765&(e|e<<1),t=16711935&(t|t<<8),t=252645135&(t|t<<4),t=858993459&(t|t<<2),t=1431655765&(t|t<<1),e|t<<1}function Er(e){let t=e,r=e;do(t.x<r.x||t.x===r.x&&t.y<r.y)&&(r=t),t=t.next;while(t!==e);return r}function wr(e,t,r,a,i,n,o,s){return 0<=(i-o)*(t-s)-(e-o)*(n-s)&&0<=(e-o)*(a-s)-(r-o)*(t-s)&&0<=(r-o)*(n-s)-(i-o)*(a-s)}function Lr(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!Nr(e,t)&&(Dr(e,t)&&Dr(t,e)&&zr(e,t)&&(Ar(e.prev,e,t.prev)||Ar(e,t.prev,t))||Rr(e,t)&&0<Ar(e.prev,e,e.next)&&0<Ar(t.prev,t,t.next))}function Ar(e,t,a){return(t.y-e.y)*(a.x-t.x)-(t.x-e.x)*(a.y-t.y)}function Rr(e,t){return e.x===t.x&&e.y===t.y}function Cr(e,t,r,a){const i=Ir(Ar(e,t,r)),n=Ir(Ar(e,t,a)),o=Ir(Ar(r,a,e)),s=Ir(Ar(r,a,t));return!(i===n||o===s)||!!(0===i&&Pr(e,r,t))||!!(0===n&&Pr(e,a,t))||!!(0===o&&Pr(r,e,a))||!!(0===s&&Pr(r,t,a))}function Pr(e,t,a){return t.x<=hn(e.x,a.x)&&t.x>=yn(e.x,a.x)&&t.y<=hn(e.y,a.y)&&t.y>=yn(e.y,a.y)}function Ir(e){return 0<e?1:0>e?-1:0}function Nr(e,t){let r=e;do{if(r.i!==e.i&&r.next.i!==e.i&&r.i!==t.i&&r.next.i!==t.i&&Cr(r,r.next,e,t))return!0;r=r.next}while(r!==e);return!1}function Dr(e,t){return 0>Ar(e.prev,e,e.next)?0<=Ar(e,t,e.next)&&0<=Ar(e,e.prev,t):0>Ar(e,t,e.prev)||0>Ar(e,e.next,t)}function zr(e,t){let r=e,a=!1;const i=(e.x+t.x)/2,n=(e.y+t.y)/2;do r.y>n!=r.next.y>n&&r.next.y!==r.y&&i<(r.next.x-r.x)*(n-r.y)/(r.next.y-r.y)+r.x&&(a=!a),r=r.next;while(r!==e);return a}function Br(e,t){const r=new Fr(e.i,e.x,e.y),a=new Fr(t.i,t.x,t.y),i=e.next,n=t.prev;return e.next=t,t.prev=e,r.next=i,i.prev=r,a.next=r,r.prev=a,n.next=a,a.prev=n,a}function Ur(e,t,r,a){const i=new Fr(e,t,r);return a?(i.next=a.next,i.prev=a,a.next.prev=i,a.next=i):(i.prev=i,i.next=i),i}function Hr(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function Fr(e,t,r){this.i=e,this.x=t,this.y=r,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function Gr(e,t,r,a){let n=0;for(let o=t,i=r-a;o<r;o+=a)n+=(e[i]-e[o])*(e[o+1]+e[i+1]),i=o;return n}function Or(e){const t=e.length;2<t&&e[t-1].equals(e[0])&&e.pop()}function Vr(e,t){for(let r=0;r<t.length;r++)e.push(t[r].x),e.push(t[r].y)}function kr(e,t,r){if(r.shapes=[],Array.isArray(e))for(let t=0,a=e.length;t<a;t++){const a=e[t];r.shapes.push(a.uuid)}else r.shapes.push(e.uuid);return void 0!==t.extrudePath&&(r.options.extrudePath=t.extrudePath.toJSON()),r}function Wr(e,t,r){if(r.shapes=[],Array.isArray(e))for(let t=0,a=e.length;t<a;t++){const a=e[t];r.shapes.push(a.uuid)}else r.shapes.push(e.uuid);return void 0!==t.extrudePath&&(r.options.extrudePath=t.extrudePath.toJSON()),r}function jr(e,t,r){A.call(this),this.type='ParametricBufferGeometry',this.parameters={func:e,slices:t,stacks:r};const n=[],a=[],i=[],o=[],s=1e-5,d=new Sd,l=new Sd,p=new Sd,c=new Sd,m=new Sd;3>e.length&&console.error('THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.');const u=t+1;for(let n=0;n<=r;n++){const f=n/r;for(let r=0;r<=t;r++){const n=r/t;e(n,f,l),a.push(l.x,l.y,l.z),0<=n-s?(e(n-s,f,p),c.subVectors(l,p)):(e(n+s,f,p),c.subVectors(p,l)),0<=f-s?(e(n,f-s,p),m.subVectors(l,p)):(e(n,f+s,p),m.subVectors(p,l)),d.crossVectors(c,m).normalize(),i.push(d.x,d.y,d.z),o.push(n,f)}}for(let o=0;o<r;o++)for(let e=0;e<t;e++){const t=o*u+e,r=o*u+e+1,a=(o+1)*u+e+1,i=(o+1)*u+e;n.push(t,r,i),n.push(r,a,i)}this.setIndex(n),this.setAttribute('position',new E(a,3)),this.setAttribute('normal',new E(i,3)),this.setAttribute('uv',new E(o,2))}function Xr(e,t,r){lr.call(this),this.type='ParametricGeometry',this.parameters={func:e,slices:t,stacks:r},this.fromBufferGeometry(new jr(e,t,r)),this.mergeVertices()}function qr(e,t){if(t.shapes=[],Array.isArray(e))for(let r=0,a=e.length;r<a;r++){const a=e[r];t.shapes.push(a.uuid)}else t.shapes.push(e.uuid);return t}function Yr(e,t){if(t.shapes=[],Array.isArray(e))for(let r=0,a=e.length;r<a;r++){const a=e[r];t.shapes.push(a.uuid)}else t.shapes.push(e.uuid);return t}function Zr(e){m.call(this),this.type='ShadowMaterial',this.color=new Fl(0),this.transparent=!0,this.setValues(e)}function Jr(e){D.call(this,e),this.type='RawShaderMaterial'}function Qr(e){m.call(this),this.defines={STANDARD:''},this.type='MeshStandardMaterial',this.color=new Fl(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Fl(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=od,this.normalScale=new hd(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap='round',this.wireframeLinejoin='round',this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(e)}function Kr(e){Qr.call(this),this.defines={STANDARD:'',PHYSICAL:''},this.type='MeshPhysicalMaterial',this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new hd(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,'ior',{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(e){this.reflectivity=gd.clamp(2.5*(e-1)/(e+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(e)}function $r(e){m.call(this),this.type='MeshPhongMaterial',this.color=new Fl(16777215),this.specular=new Fl(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Fl(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=od,this.normalScale=new hd(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=no,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap='round',this.wireframeLinejoin='round',this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function ea(e){m.call(this),this.defines={TOON:''},this.type='MeshToonMaterial',this.color=new Fl(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Fl(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=od,this.normalScale=new hd(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap='round',this.wireframeLinejoin='round',this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function ta(e){m.call(this),this.type='MeshNormalMaterial',this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=od,this.normalScale=new hd(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function ra(e){m.call(this),this.type='MeshLambertMaterial',this.color=new Fl(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Fl(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=no,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap='round',this.wireframeLinejoin='round',this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function aa(e){m.call(this),this.defines={MATCAP:''},this.type='MeshMatcapMaterial',this.color=new Fl(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=od,this.normalScale=new hd(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function ia(e){Kt.call(this),this.type='LineDashedMaterial',this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}function na(e,t,r,a){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=a===void 0?new t.constructor(r):a,this.sampleValues=t,this.valueSize=r}function oa(e,t,r,a){na.call(this,e,t,r,a),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function sa(e,t,r,a){na.call(this,e,t,r,a)}function da(e,t,r,a){na.call(this,e,t,r,a)}function la(e,t,r,a){if(e===void 0)throw new Error('THREE.KeyframeTrack: track name is undefined');if(void 0===t||0===t.length)throw new Error('THREE.KeyframeTrack: no keyframes in track named '+e);this.name=e,this.times=mu.convertArray(t,this.TimeBufferType),this.values=mu.convertArray(r,this.ValueBufferType),this.setInterpolation(a||this.DefaultInterpolation)}function pa(e,t,r){la.call(this,e,t,r)}function ca(e,t,r,a){la.call(this,e,t,r,a)}function ua(e,t,r,a){la.call(this,e,t,r,a)}function ma(e,t,r,a){na.call(this,e,t,r,a)}function fa(e,t,r,a){la.call(this,e,t,r,a)}function ga(e,t,r,a){la.call(this,e,t,r,a)}function ha(e,t,r,a){la.call(this,e,t,r,a)}function ya(e,t=-1,r,a=Ys){this.name=e,this.tracks=r,this.duration=t,this.blendMode=a,this.uuid=gd.generateUUID(),0>this.duration&&this.resetDuration()}function va(e){switch(e.toLowerCase()){case'scalar':case'double':case'float':case'number':case'integer':return ua;case'vector':case'vector2':case'vector3':case'vector4':return ha;case'color':return ca;case'quaternion':return fa;case'bool':case'boolean':return pa;case'string':return ga;}throw new Error('THREE.KeyframeTrack: Unsupported typeName: '+e)}function xa(e){if(e.type===void 0)throw new Error('THREE.KeyframeTrack: track type undefined, can not parse');const t=va(e.type);if(e.times===void 0){const t=[],r=[];mu.flattenJSON(e.keys,t,r,'value'),e.times=t,e.values=r}return void 0===t.parse?new t(e.name,e.times,e.values,e.interpolation):t.parse(e)}function _a(e,t,r){const a=this;let i=!1,n=0,o=0,s;const d=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=r,this.itemStart=function(e){o++,!1==i&&a.onStart!==void 0&&a.onStart(e,n,o),i=!0},this.itemEnd=function(e){n++,a.onProgress!==void 0&&a.onProgress(e,n,o),n==o&&(i=!1,a.onLoad!==void 0&&a.onLoad())},this.itemError=function(e){a.onError!==void 0&&a.onError(e)},this.resolveURL=function(e){return s?s(e):e},this.setURLModifier=function(e){return s=e,this},this.addHandler=function(e,t){return d.push(e,t),this},this.removeHandler=function(e){const t=d.indexOf(e);return-1!==t&&d.splice(t,2),this},this.getHandler=function(e){for(let t=0,r=d.length;t<r;t+=2){const r=d[t],a=d[t+1];if(r.global&&(r.lastIndex=0),r.test(e))return a}return null}}function ba(e){this.manager=e===void 0?gu:e,this.crossOrigin='anonymous',this.withCredentials=!1,this.path='',this.resourcePath='',this.requestHeader={}}function Ma(e){ba.call(this,e)}function Sa(e){ba.call(this,e)}function Ta(e){ba.call(this,e)}function Ea(e){ba.call(this,e)}function wa(e){ba.call(this,e)}function La(e){ba.call(this,e)}function Aa(e){ba.call(this,e)}function Ra(){this.type='Curve',this.arcLengthDivisions=200}function Ca(e,t,r,a,i,n,o,s){Ra.call(this),this.type='EllipseCurve',this.aX=e||0,this.aY=t||0,this.xRadius=r||1,this.yRadius=a||1,this.aStartAngle=i||0,this.aEndAngle=n||2*vn,this.aClockwise=o||!1,this.aRotation=s||0}function Pa(e,t,r,a,i,n){Ca.call(this,e,t,r,r,a,i,n),this.type='ArcCurve'}function Ia(){function e(e,t,o,s){r=e,a=o,i=-3*e+3*t-2*o-s,n=2*e-2*t+o+s}let r=0,a=0,i=0,n=0;return{initCatmullRom:function(t,r,a,i,n){e(r,a,n*(a-t),n*(i-r))},initNonuniformCatmullRom:function(t,r,a,i,n,o,s){let d=(r-t)/n-(a-t)/(n+o)+(a-r)/o,l=(a-r)/o-(i-r)/(o+s)+(i-a)/s;d*=o,l*=o,e(r,a,d,l)},calc:function(e){const t=e*e;return r+a*e+i*t+n*(t*e)}}}function Na(e=[],t=!1,r='centripetal',a=.5){Ra.call(this),this.type='CatmullRomCurve3',this.points=e,this.closed=t,this.curveType=r,this.tension=a}function Da(e,t,r,a,i){const n=.5*(a-t),o=.5*(i-r),s=e*e;return(2*r-2*a+n+o)*(e*s)+(-3*r+3*a-2*n-o)*s+n*e+r}function za(e,t){const r=1-e;return r*r*t}function Ba(e,t){return 2*(1-e)*e*t}function Ua(e,t){return e*e*t}function Ha(e,t,r,a){return za(e,t)+Ba(e,r)+Ua(e,a)}function Fa(e,t){const r=1-e;return r*r*r*t}function Ga(e,t){const r=1-e;return 3*r*r*e*t}function Oa(e,t){return 3*(1-e)*e*e*t}function Va(e,t){return e*e*e*t}function ka(e,t,r,a,i){return Fa(e,t)+Ga(e,r)+Oa(e,a)+Va(e,i)}function Wa(e=new hd,t=new hd,r=new hd,a=new hd){Ra.call(this),this.type='CubicBezierCurve',this.v0=e,this.v1=t,this.v2=r,this.v3=a}function ja(e=new Sd,t=new Sd,r=new Sd,a=new Sd){Ra.call(this),this.type='CubicBezierCurve3',this.v0=e,this.v1=t,this.v2=r,this.v3=a}function Xa(e=new hd,t=new hd){Ra.call(this),this.type='LineCurve',this.v1=e,this.v2=t}function qa(e=new Sd,t=new Sd){Ra.call(this),this.type='LineCurve3',this.v1=e,this.v2=t}function Ya(e=new hd,t=new hd,r=new hd){Ra.call(this),this.type='QuadraticBezierCurve',this.v0=e,this.v1=t,this.v2=r}function Za(e=new Sd,t=new Sd,r=new Sd){Ra.call(this),this.type='QuadraticBezierCurve3',this.v0=e,this.v1=t,this.v2=r}function Ja(e=[]){Ra.call(this),this.type='SplineCurve',this.points=e}function Qa(){Ra.call(this),this.type='CurvePath',this.curves=[],this.autoClose=!1}function Ka(e){Qa.call(this),this.type='Path',this.currentPoint=new hd,e&&this.setFromPoints(e)}function $a(e){Ka.call(this,e),this.uuid=gd.generateUUID(),this.type='Shape',this.holes=[]}function ei(e,t=1){l.call(this),this.type='Light',this.color=new Fl(e),this.intensity=t}function ti(e,t,r){ei.call(this,e,r),this.type='HemisphereLight',this.position.copy(l.DefaultUp),this.updateMatrix(),this.groundColor=new Fl(t)}function ri(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new hd(512,512),this.map=null,this.mapPass=null,this.matrix=new Jd,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Tp,this._frameExtents=new hd(1,1),this._viewportCount=1,this._viewports=[new bd(0,0,1,1)]}function ai(){ri.call(this,new B(50,1,.5,500)),this.focus=1}function ii(e,t,r,a,i,n){ei.call(this,e,t),this.type='SpotLight',this.position.copy(l.DefaultUp),this.updateMatrix(),this.target=new l,Object.defineProperty(this,'power',{get:function(){return this.intensity*vn},set:function(e){this.intensity=e/vn}}),this.distance=r===void 0?0:r,this.angle=a===void 0?vn/3:a,this.penumbra=i===void 0?0:i,this.decay=n===void 0?1:n,this.shadow=new ai}function ni(){ri.call(this,new B(90,1,.5,500)),this._frameExtents=new hd(4,2),this._viewportCount=6,this._viewports=[new bd(2,1,1,1),new bd(0,1,1,1),new bd(3,1,1,1),new bd(1,1,1,1),new bd(3,0,1,1),new bd(1,0,1,1)],this._cubeDirections=[new Sd(1,0,0),new Sd(-1,0,0),new Sd(0,0,1),new Sd(0,0,-1),new Sd(0,1,0),new Sd(0,-1,0)],this._cubeUps=[new Sd(0,1,0),new Sd(0,1,0),new Sd(0,1,0),new Sd(0,1,0),new Sd(0,0,1),new Sd(0,0,-1)]}function oi(e,t,r,a){ei.call(this,e,t),this.type='PointLight',Object.defineProperty(this,'power',{get:function(){return 4*this.intensity*vn},set:function(e){this.intensity=e/(4*vn)}}),this.distance=r===void 0?0:r,this.decay=a===void 0?1:a,this.shadow=new ni}function si(e=-1,t=1,r=1,a=-1,i=.1,n=2e3){z.call(this),this.type='OrthographicCamera',this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=r,this.bottom=a,this.near=i,this.far=n,this.updateProjectionMatrix()}function di(){ri.call(this,new si(-5,5,5,-5,.5,500))}function li(e,t){ei.call(this,e,t),this.type='DirectionalLight',this.position.copy(l.DefaultUp),this.updateMatrix(),this.target=new l,this.shadow=new di}function pi(e,t){ei.call(this,e,t),this.type='AmbientLight'}function ci(e,t,r,a){ei.call(this,e,t),this.type='RectAreaLight',this.width=r===void 0?10:r,this.height=a===void 0?10:a}function ui(e,t){ei.call(this,void 0,t),this.type='LightProbe',this.sh=e===void 0?new Mu:e}function mi(e){ba.call(this,e),this.textures={}}function fi(){A.call(this),this.type='InstancedBufferGeometry',this.instanceCount=Infinity}function gi(e,t,r,a){'number'==typeof r&&(a=r,r=!1,console.error('THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.')),g.call(this,e,t,r),this.meshPerAttribute=a||1}function hi(e){ba.call(this,e)}function yi(e){'undefined'==typeof createImageBitmap&&console.warn('THREE.ImageBitmapLoader: createImageBitmap() not supported.'),'undefined'==typeof fetch&&console.warn('THREE.ImageBitmapLoader: fetch() not supported.'),ba.call(this,e),this.options={premultiplyAlpha:'none'}}function vi(){this.type='ShapePath',this.color=new Fl,this.subPaths=[],this.currentPath=null}function xi(e){this.type='Font',this.data=e}function _i(e,t,r){const a=Array.from?Array.from(e):(e+'').split(''),i=t/r.resolution,n=(r.boundingBox.yMax-r.boundingBox.yMin+r.underlineThickness)*i,o=[];let s=0,d=0;for(let l=0;l<a.length;l++){const e=a[l];if('\n'===e)s=0,d-=n;else{const t=bi(e,i,s,d,r);s+=t.offsetX,o.push(t.path)}}return o}function bi(e,t,r,a,i){const n=i.glyphs[e]||i.glyphs['?'];if(!n)return void console.error('THREE.Font: character "'+e+'" does not exists in font family '+i.familyName+'.');const o=new vi;let s,d,l,p,c,u,m,f;if(n.o){const e=n._cachedOutline||(n._cachedOutline=n.o.split(' '));for(let n=0,i=e.length;n<i;){const i=e[n++];'m'===i?(s=e[n++]*t+r,d=e[n++]*t+a,o.moveTo(s,d)):'l'===i?(s=e[n++]*t+r,d=e[n++]*t+a,o.lineTo(s,d)):'q'===i?(l=e[n++]*t+r,p=e[n++]*t+a,c=e[n++]*t+r,u=e[n++]*t+a,o.quadraticCurveTo(c,u,l,p)):'b'===i?(l=e[n++]*t+r,p=e[n++]*t+a,c=e[n++]*t+r,u=e[n++]*t+a,m=e[n++]*t+r,f=e[n++]*t+a,o.bezierCurveTo(c,u,m,f,l,p)):void 0}}return{offsetX:n.ha*t,path:o}}function Mi(e){ba.call(this,e)}function Si(e){ba.call(this,e)}function Ti(e,t,r){ui.call(this,void 0,r);const a=new Fl().set(e),i=new Fl().set(t),n=new Sd(a.r,a.g,a.b),o=new Sd(i.r,i.g,i.b),s=sn(Math.PI);this.sh.coefficients[0].copy(n).add(o).multiplyScalar(s),this.sh.coefficients[1].copy(n).sub(o).multiplyScalar(0.8660254037844386*s)}function Ei(e,t){ui.call(this,void 0,t);const r=new Fl().set(e);this.sh.coefficients[0].set(r.r,r.g,r.b).multiplyScalar(2*sn(Math.PI))}function wi(){return('undefined'==typeof performance?Date:performance).now()}function Li(e,t,r){this.binding=e,this.valueSize=r;let a,i,n;'quaternion'===t?(a=this._slerp,i=this._slerpAdditive,n=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*r),this._workIndex=5):'string'===t||'bool'===t?(a=this._select,i=this._select,n=this._setAdditiveIdentityOther,this.buffer=Array(5*r)):(a=this._lerp,i=this._lerpAdditive,n=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*r));this._mixBufferRegion=a,this._mixBufferRegionAdditive=i,this._setIdentity=n,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}function Ai(e,t,r){const a=r||Ri.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,a)}function Ri(e,t,r){this.path=t,this.parsedPath=r||Ri.parseTrackName(t),this.node=Ri.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e}function Ci(e){this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}function Pi(e,t,r){Vt.call(this,e,t),this.meshPerAttribute=r||1}function Ii(e,t,r,a,i){this.buffer=e,this.type=t,this.itemSize=r,this.elementSize=a,this.count=i,this.version=0}function Ni(e,t,r,a){this.ray=new Zd(e,t),this.near=r||0,this.far=a||Infinity,this.camera=null,this.layers=new sl,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn('THREE.Raycaster: params.PointCloud has been renamed to params.Points.'),this.Points}}})}function Di(e,t){return e.distance-t.distance}function zi(e,t,r,a){if(e.layers.test(t.layers)&&e.raycast(t,r),!0===a){const a=e.children;for(let e=0,i=a.length;e<i;e++)zi(a[e],t,r,!0)}}function Bi(e){l.call(this),this.material=e,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}function Ui(e){const t=[];e&&e.isBone&&t.push(e);for(let r=0;r<e.children.length;r++)t.push.apply(t,Ui(e.children[r]));return t}function Hi(e,t,r,a,i,n,o){um.set(i,n,o).unproject(a);const s=t[e];if(s!==void 0){const e=r.getAttribute('position');for(let t=0,r=s.length;t<r;t++)e.setXYZ(s[t],um.x,um.y,um.z)}}function Fi(e){return void 0!==e&&e.type===Po&&(e.encoding===Js||e.encoding===Qs||e.encoding===Ks)}function Gi(e){const t=new o(3*Tm,3*Tm,e);return t.texture.mapping=_o,t.texture.name='PMREM.cubeUv',t.scissorTest=!0,t}function Oi(e,t,r,a,i){e.viewport.set(t,r,a,i),e.scissor.set(t,r,a,i)}function Vi(e){const t=new Float32Array(e),r=new Sd(0,1,0),a=new Jr({name:'SphericalGaussianBlur',defines:{n:e},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:t},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r},inputEncoding:{value:Am[Js]},outputEncoding:{value:Am[Js]}},vertexShader:ji(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			${Xi()}

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:Rn,depthTest:!1,depthWrite:!1});return a}function ki(){const e=new hd(1,1),t=new Jr({name:'EquirectangularToCubeUV',uniforms:{envMap:{value:null},texelSize:{value:e},inputEncoding:{value:Am[Js]},outputEncoding:{value:Am[Js]}},vertexShader:ji(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			${Xi()}

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x += texelSize.x;
				vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.y += texelSize.y;
				vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:Rn,depthTest:!1,depthWrite:!1});return t}function Wi(){const e=new Jr({name:'CubemapToCubeUV',uniforms:{envMap:{value:null},inputEncoding:{value:Am[Js]},outputEncoding:{value:Am[Js]}},vertexShader:ji(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			${Xi()}

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;
				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:Rn,depthTest:!1,depthWrite:!1});return e}function ji(){return`

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Xi(){return`

		uniform int inputEncoding;
		uniform int outputEncoding;

		#include <encodings_pars_fragment>

		vec4 inputTexelToLinear( vec4 value ) {

			if ( inputEncoding == 0 ) {

				return value;

			} else if ( inputEncoding == 1 ) {

				return sRGBToLinear( value );

			} else if ( inputEncoding == 2 ) {

				return RGBEToLinear( value );

			} else if ( inputEncoding == 3 ) {

				return RGBMToLinear( value, 7.0 );

			} else if ( inputEncoding == 4 ) {

				return RGBMToLinear( value, 16.0 );

			} else if ( inputEncoding == 5 ) {

				return RGBDToLinear( value, 256.0 );

			} else {

				return GammaToLinear( value, 2.2 );

			}

		}

		vec4 linearToOutputTexel( vec4 value ) {

			if ( outputEncoding == 0 ) {

				return value;

			} else if ( outputEncoding == 1 ) {

				return LinearTosRGB( value );

			} else if ( outputEncoding == 2 ) {

				return LinearToRGBE( value );

			} else if ( outputEncoding == 3 ) {

				return LinearToRGBM( value, 7.0 );

			} else if ( outputEncoding == 4 ) {

				return LinearToRGBM( value, 16.0 );

			} else if ( outputEncoding == 5 ) {

				return LinearToRGBD( value, 256.0 );

			} else {

				return LinearToGamma( value, 2.2 );

			}

		}

		vec4 envMapTexelToLinear( vec4 color ) {

			return inputTexelToLinear( color );

		}
	`}function qi(e){console.warn('THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.'),Na.call(this,e),this.type='catmullrom'}function Yi(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}function Zi(e,t){if(!(e instanceof t))throw new TypeError('Cannot call a class as a function')}function Ji(e,t){for(var r=0,a;r<t.length;r++)a=t[r],a.enumerable=a.enumerable||!1,a.configurable=!0,'value'in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}function Qi(e,t,r){return t&&Ji(e.prototype,t),r&&Ji(e,r),e}var Ki=Math.sign,$i=Number.isInteger,en=Math.tan,tn=Math.atan,rn=Number.EPSILON,an=Math.acos,nn=Math.atan2,on=Math.abs,sn=Math.sqrt,dn=Math.round,ln=Math.sin,pn=Math.cos,cn=Math.pow,un=Math.ceil,mn=Math.LN2,fn=Math.log,gn=Math.floor,hn=Math.max,yn=Math.min,vn=Math.PI;r.r(t);const xn=0,_n=1,bn=2,Mn=1,Sn=2,Tn=3,En=0,wn=1,Ln=2,An=1,Rn=0,Cn=1,Pn=2,In=3,Nn=4,Dn=5,zn=100,Bn=101,Un=102,Hn=103,Fn=104,Gn=200,On=201,Vn=202,kn=203,Wn=204,jn=205,Xn=206,qn=207,Yn=208,Zn=209,Jn=210,Qn=0,Kn=1,$n=2,eo=3,to=4,ro=5,ao=6,io=7,no=0,oo=1,so=2,lo=0,po=1,co=2,uo=3,mo=4,fo=5,go=300,ho=301,yo=302,vo=303,xo=304,_o=306,bo=307,Mo=1e3,So=1001,To=1002,Eo=1003,wo=1004,Lo=1005,Ao=1006,Ro=1007,Co=1008,Po=1009,Io=1010,No=1011,Do=1012,zo=1013,Bo=1014,Uo=1015,Ho=1016,Fo=1017,Go=1018,Oo=1019,Vo=1020,ko=1021,Wo=1022,jo=1023,Xo=1024,qo=1025,Yo=1026,Zo=1027,Jo=1028,Qo=1029,Ko=1030,$o=1031,es=1032,ts=1033,rs=33776,as=33777,is=33778,ns=33779,os=35840,ss=35841,ds=35842,ls=35843,ps=36196,cs=37492,us=37496,ms=37808,fs=37809,gs=37810,hs=37811,ys=37812,vs=37813,xs=37814,_s=37815,bs=37816,Ms=37817,Ss=37818,Ts=37819,Es=37820,ws=37821,Ls=36492,As=37840,Rs=37841,Cs=37842,Ps=37843,Is=37844,Ns=37845,Ds=37846,zs=37847,Bs=37848,Us=37849,Hs=37850,Fs=37851,Gs=37852,Os=37853,Vs=2300,ks=2301,Ws=2302,js=2400,Xs=2401,qs=2402,Ys=2500,Zs=2501,Js=3e3,Qs=3001,Ks=3007,$s=3002,ed=3003,td=3004,rd=3005,ad=3006,id=3200,nd=3201,od=0,sd=1,dd=7680,ld=519,pd=35044,cd=35048,ud='300 es';Object.assign(a.prototype,{addEventListener:function(e,t){this._listeners===void 0&&(this._listeners={});const r=this._listeners;r[e]===void 0&&(r[e]=[]),-1===r[e].indexOf(t)&&r[e].push(t)},hasEventListener:function(e,t){if(this._listeners===void 0)return!1;const r=this._listeners;return r[e]!==void 0&&-1!==r[e].indexOf(t)},removeEventListener:function(e,t){if(void 0!==this._listeners){const r=this._listeners,a=r[e];if(void 0!==a){const e=a.indexOf(t);-1!==e&&a.splice(e,1)}}},dispatchEvent:function(e){if(void 0!==this._listeners){const t=this._listeners,r=t[e.type];if(void 0!==r){e.target=this;const t=r.slice(0);for(let r=0,a=t.length;r<a;r++)t[r].call(this,e)}}}});const md=[];for(let a=0;256>a;a++)md[a]=(16>a?'0':'')+a.toString(16);let fd=1234567;const gd={DEG2RAD:vn/180,RAD2DEG:180/vn,generateUUID:function(){const e=0|4294967295*Math.random(),t=0|4294967295*Math.random(),r=0|4294967295*Math.random(),a=0|4294967295*Math.random(),i=md[255&e]+md[255&e>>8]+md[255&e>>16]+md[255&e>>24]+'-'+md[255&t]+md[255&t>>8]+'-'+md[64|15&t>>16]+md[255&t>>24]+'-'+md[128|63&r]+md[255&r>>8]+'-'+md[255&r>>16]+md[255&r>>24]+md[255&a]+md[255&a>>8]+md[255&a>>16]+md[255&a>>24];return i.toUpperCase()},clamp:function(e,t,r){return hn(t,yn(r,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,r,a,i){return a+(e-t)*(i-a)/(r-t)},lerp:function(e,r,a){return(1-a)*e+a*r},smoothstep:function(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t),e*e*(3-2*e))},smootherstep:function(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t),e*e*e*(e*(6*e-15)+10))},randInt:function(e,t){return e+gn(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){return void 0!==e&&(fd=e%2147483647),fd=16807*fd%2147483647,(fd-1)/2147483646},degToRad:function(e){return e*gd.DEG2RAD},radToDeg:function(e){return e*gd.RAD2DEG},isPowerOfTwo:function(e){return 0==(e&e-1)&&0!==e},ceilPowerOfTwo:function(e){return cn(2,un(fn(e)/mn))},floorPowerOfTwo:function(e){return cn(2,gn(fn(e)/mn))},setQuaternionFromProperEuler:function(e,t,r,a,i){const n=pn,o=ln,s=n(r/2),d=o(r/2),l=n((t+a)/2),p=o((t+a)/2),c=n((t-a)/2),u=o((t-a)/2),m=n((a-t)/2),f=o((a-t)/2);'XYX'===i?e.set(s*p,d*c,d*u,s*l):'YZY'===i?e.set(d*u,s*p,d*c,s*l):'ZXZ'===i?e.set(d*c,d*u,s*p,s*l):'XZX'===i?e.set(s*p,d*f,d*m,s*l):'YXY'===i?e.set(d*m,s*p,d*f,s*l):'ZYZ'===i?e.set(d*f,d*m,s*p,s*l):console.warn('THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: '+i)}};class hd{constructor(e=0,t=0){Object.defineProperty(this,'isVector2',{value:!0}),this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error('index is out of range: '+e);}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error('index is out of range: '+e);}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return void 0===t?(this.x+=e.x,this.y+=e.y,this):(console.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.'),this.addVectors(e,t))}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return void 0===t?(this.x-=e.x,this.y-=e.y,this):(console.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.'),this.subVectors(e,t))}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(t){const r=this.x,a=this.y,i=t.elements;return this.x=i[0]*r+i[3]*a+i[6],this.y=i[1]*r+i[4]*a+i[7],this}min(e){return this.x=yn(this.x,e.x),this.y=yn(this.y,e.y),this}max(e){return this.x=hn(this.x,e.x),this.y=hn(this.y,e.y),this}clamp(e,t){return this.x=hn(e.x,yn(t.x,this.x)),this.y=hn(e.y,yn(t.y,this.y)),this}clampScalar(e,t){return this.x=hn(e,yn(t,this.x)),this.y=hn(e,yn(t,this.y)),this}clampLength(e,t){const r=this.length();return this.divideScalar(r||1).multiplyScalar(hn(e,yn(t,r)))}floor(){return this.x=gn(this.x),this.y=gn(this.y),this}ceil(){return this.x=un(this.x),this.y=un(this.y),this}round(){return this.x=dn(this.x),this.y=dn(this.y),this}roundToZero(){return this.x=0>this.x?un(this.x):gn(this.x),this.y=0>this.y?un(this.y):gn(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return sn(this.x*this.x+this.y*this.y)}manhattanLength(){return on(this.x)+on(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){const e=nn(-this.y,-this.x)+vn;return e}distanceTo(e){return sn(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,r=this.y-e.y;return t*t+r*r}manhattanDistanceTo(e){return on(this.x-e.x)+on(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,r){return void 0!==r&&console.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().'),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const r=pn(t),a=ln(t),i=this.x-e.x,n=this.y-e.y;return this.x=i*r-n*a+e.x,this.y=i*a+n*r+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}class yd{constructor(){Object.defineProperty(this,'isMatrix3',{value:!0}),this.elements=[1,0,0,0,1,0,0,0,1],0<arguments.length&&console.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.')}set(e,t,r,a,i,n,o,s,d){const l=this.elements;return l[0]=e,l[1]=a,l[2]=o,l[3]=t,l[4]=i,l[5]=s,l[6]=r,l[7]=n,l[8]=d,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}clone(){return new this.constructor().fromArray(this.elements)}copy(e){const t=this.elements,r=e.elements;return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],this}extractBasis(e,t,r){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),r.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const r=e.elements,a=t.elements,i=this.elements,n=r[0],o=r[3],s=r[6],d=r[1],l=r[4],p=r[7],c=r[2],u=r[5],m=r[8],f=a[0],g=a[3],h=a[6],y=a[1],v=a[4],x=a[7],_=a[2],b=a[5],M=a[8];return i[0]=n*f+o*y+s*_,i[3]=n*g+o*v+s*b,i[6]=n*h+o*x+s*M,i[1]=d*f+l*y+p*_,i[4]=d*g+l*v+p*b,i[7]=d*h+l*x+p*M,i[2]=c*f+u*y+m*_,i[5]=c*g+u*v+m*b,i[8]=c*h+u*x+m*M,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const t=this.elements,r=t[0],a=t[1],n=t[2],o=t[3],s=t[4],e=t[5],d=t[6],l=t[7],p=t[8];return r*s*p-r*e*l-a*o*p+a*e*d+n*o*l-n*s*d}invert(){const e=this.elements,t=e[0],r=e[1],a=e[2],i=e[3],n=e[4],o=e[5],s=e[6],d=e[7],l=e[8],p=l*n-o*d,c=o*s-l*i,u=d*i-n*s,m=t*p+r*c+a*u;if(0==m)return this.set(0,0,0,0,0,0,0,0,0);const f=1/m;return e[0]=p*f,e[1]=(a*d-l*r)*f,e[2]=(o*r-a*n)*f,e[3]=c*f,e[4]=(l*t-a*s)*f,e[5]=(a*i-o*t)*f,e[6]=u*f,e[7]=(r*s-d*t)*f,e[8]=(n*t-r*i)*f,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).copy(this).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,r,a,i,n,o){const d=pn(i),l=ln(i);return this.set(r*d,r*l,-r*(d*n+l*o)+n+e,-a*l,a*d,-a*(-l*n+d*o)+o+t,0,0,1),this}scale(e,t){const r=this.elements;return r[0]*=e,r[3]*=e,r[6]*=e,r[1]*=t,r[4]*=t,r[7]*=t,this}rotate(e){const t=pn(e),r=ln(e),a=this.elements,i=a[0],n=a[3],o=a[6],d=a[1],l=a[4],p=a[7];return a[0]=t*i+r*d,a[3]=t*n+r*l,a[6]=t*o+r*p,a[1]=-r*i+t*d,a[4]=-r*n+t*l,a[7]=-r*o+t*p,this}translate(e,t){const r=this.elements;return r[0]+=e*r[2],r[3]+=e*r[5],r[6]+=e*r[8],r[1]+=t*r[2],r[4]+=t*r[5],r[7]+=t*r[8],this}equals(e){const t=this.elements,r=e.elements;for(let a=0;9>a;a++)if(t[a]!==r[a])return!1;return!0}fromArray(e,t=0){for(let r=0;9>r;r++)this.elements[r]=e[r+t];return this}toArray(e=[],t=0){const r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e}}let vd;const xd={getDataURL:function(e){if(/^data:/i.test(e.src))return e.src;if('undefined'==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{vd===void 0&&(vd=document.createElementNS('http://www.w3.org/1999/xhtml','canvas')),vd.width=e.width,vd.height=e.height;const r=vd.getContext('2d');e instanceof ImageData?r.putImageData(e,0,0):r.drawImage(e,0,0,e.width,e.height),t=vd}return 2048<t.width||2048<t.height?t.toDataURL('image/jpeg',.6):t.toDataURL('image/png')}};let _d=0;i.DEFAULT_IMAGE=void 0,i.DEFAULT_MAPPING=go,i.prototype=Object.assign(Object.create(a.prototype),{constructor:i,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this},toJSON:function(e){const t=void 0===e||'string'==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const r={metadata:{version:4.5,type:'Texture',generator:'Texture.toJSON'},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const a=this.image;if(void 0===a.uuid&&(a.uuid=gd.generateUUID()),!t&&void 0===e.images[a.uuid]){let t;if(Array.isArray(a)){t=[];for(let e=0,r=a.length;e<r;e++)a[e].isDataTexture?t.push(n(a[e].image)):t.push(n(a[e]))}else t=n(a);e.images[a.uuid]={uuid:a.uuid,url:t}}r.image=a.uuid}return t||(e.textures[this.uuid]=r),r},dispose:function(){this.dispatchEvent({type:'dispose'})},transformUv:function(e){if(this.mapping!==go)return e;if(e.applyMatrix3(this.matrix),0>e.x||1<e.x)switch(this.wrapS){case Mo:e.x-=gn(e.x);break;case So:e.x=0>e.x?0:1;break;case To:1===on(gn(e.x)%2)?e.x=un(e.x)-e.x:e.x-=gn(e.x);}if(0>e.y||1<e.y)switch(this.wrapT){case Mo:e.y-=gn(e.y);break;case So:e.y=0>e.y?0:1;break;case To:1===on(gn(e.y)%2)?e.y=un(e.y)-e.y:e.y-=gn(e.y);}return this.flipY&&(e.y=1-e.y),e}}),Object.defineProperty(i.prototype,'needsUpdate',{set:function(e){!0===e&&this.version++}});class bd{constructor(e=0,t=0,r=0,a=1){Object.defineProperty(this,'isVector4',{value:!0}),this.x=e,this.y=t,this.z=r,this.w=a}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,r,a){return this.x=e,this.y=t,this.z=r,this.w=a,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error('index is out of range: '+e);}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error('index is out of range: '+e);}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0===e.w?1:e.w,this}add(e,t){return void 0===t?(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this):(console.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.'),this.addVectors(e,t))}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return void 0===t?(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this):(console.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.'),this.subVectors(e,t))}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(t){const r=this.x,a=this.y,i=this.z,n=this.w,o=t.elements;return this.x=o[0]*r+o[4]*a+o[8]*i+o[12]*n,this.y=o[1]*r+o[5]*a+o[9]*i+o[13]*n,this.z=o[2]*r+o[6]*a+o[10]*i+o[14]*n,this.w=o[3]*r+o[7]*a+o[11]*i+o[15]*n,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*an(e.w);const t=sn(1-e.w*e.w);return 1e-4>t?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,r,a,i;const n=.01,o=.1,d=e.elements,l=d[0],p=d[4],c=d[8],u=d[1],m=d[5],f=d[9],g=d[2],h=d[6],y=d[10];if(on(p-u)<n&&on(c-g)<n&&on(f-h)<n){if(on(p+u)<o&&on(c+g)<o&&on(f+h)<o&&on(l+m+y-3)<o)return this.set(1,0,0,0),this;t=vn;const e=(l+1)/2,s=(m+1)/2,d=(y+1)/2,v=(p+u)/4,x=(c+g)/4,_=(f+h)/4;return e>s&&e>d?e<n?(r=0,a=.707106781,i=.707106781):(r=sn(e),a=v/r,i=x/r):s>d?s<n?(r=.707106781,a=0,i=.707106781):(a=sn(s),r=v/a,i=_/a):d<n?(r=.707106781,a=.707106781,i=0):(i=sn(d),r=x/i,a=_/i),this.set(r,a,i,t),this}let v=sn((h-f)*(h-f)+(c-g)*(c-g)+(u-p)*(u-p));return .001>on(v)&&(v=1),this.x=(h-f)/v,this.y=(c-g)/v,this.z=(u-p)/v,this.w=an((l+m+y-1)/2),this}min(e){return this.x=yn(this.x,e.x),this.y=yn(this.y,e.y),this.z=yn(this.z,e.z),this.w=yn(this.w,e.w),this}max(e){return this.x=hn(this.x,e.x),this.y=hn(this.y,e.y),this.z=hn(this.z,e.z),this.w=hn(this.w,e.w),this}clamp(e,t){return this.x=hn(e.x,yn(t.x,this.x)),this.y=hn(e.y,yn(t.y,this.y)),this.z=hn(e.z,yn(t.z,this.z)),this.w=hn(e.w,yn(t.w,this.w)),this}clampScalar(e,t){return this.x=hn(e,yn(t,this.x)),this.y=hn(e,yn(t,this.y)),this.z=hn(e,yn(t,this.z)),this.w=hn(e,yn(t,this.w)),this}clampLength(e,t){const r=this.length();return this.divideScalar(r||1).multiplyScalar(hn(e,yn(t,r)))}floor(){return this.x=gn(this.x),this.y=gn(this.y),this.z=gn(this.z),this.w=gn(this.w),this}ceil(){return this.x=un(this.x),this.y=un(this.y),this.z=un(this.z),this.w=un(this.w),this}round(){return this.x=dn(this.x),this.y=dn(this.y),this.z=dn(this.z),this.w=dn(this.w),this}roundToZero(){return this.x=0>this.x?un(this.x):gn(this.x),this.y=0>this.y?un(this.y):gn(this.y),this.z=0>this.z?un(this.z):gn(this.z),this.w=0>this.w?un(this.w):gn(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return sn(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return on(this.x)+on(this.y)+on(this.z)+on(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this.w=e.w+(t.w-e.w)*r,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,r){return void 0!==r&&console.warn('THREE.Vector4: offset has been removed from .fromBufferAttribute().'),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}o.prototype=Object.assign(Object.create(a.prototype),{constructor:o,isWebGLRenderTarget:!0,setSize:function(e,t){(this.width!==e||this.height!==t)&&(this.width=e,this.height=t,this.texture.image.width=e,this.texture.image.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this},dispose:function(){this.dispatchEvent({type:'dispose'})}}),s.prototype=Object.assign(Object.create(o.prototype),{constructor:s,isWebGLMultisampleRenderTarget:!0,copy:function(e){return o.prototype.copy.call(this,e),this.samples=e.samples,this}});class Md{constructor(e=0,t=0,r=0,a=1){Object.defineProperty(this,'isQuaternion',{value:!0}),this._x=e,this._y=t,this._z=r,this._w=a}static slerp(e,r,a,i){return a.copy(e).slerp(r,i)}static slerpFlat(e,r,a,i,n,o,d){let t=a[i+0],l=a[i+1],p=a[i+2],c=a[i+3];const u=n[o+0],m=n[o+1],f=n[o+2],g=n[o+3];if(c!==g||t!==u||l!==m||p!==f){let e=1-d;const r=t*u+l*m+p*f+c*g,a=0<=r?1:-1,i=1-r*r;if(i>rn){const t=sn(i),n=nn(t,r*a);e=ln(e*n)/t,d=ln(d*n)/t}const n=d*a;if(t=t*e+u*n,l=l*e+m*n,p=p*e+f*n,c=c*e+g*n,e==1-d){const e=1/sn(t*t+l*l+p*p+c*c);t*=e,l*=e,p*=e,c*=e}}e[r]=t,e[r+1]=l,e[r+2]=p,e[r+3]=c}static multiplyQuaternionsFlat(e,t,r,a,i,n){const o=r[a],s=r[a+1],d=r[a+2],l=r[a+3],p=i[n],c=i[n+1],u=i[n+2],m=i[n+3];return e[t]=o*m+l*p+s*u-d*c,e[t+1]=s*m+l*c+d*p-o*u,e[t+2]=d*m+l*u+o*c-s*p,e[t+3]=l*m-o*p-s*c-d*u,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,r,a){return this._x=e,this._y=t,this._z=r,this._w=a,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw new Error('THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.');const r=e._x,a=e._y,i=e._z,n=e._order,o=pn,s=ln,d=o(r/2),l=o(a/2),p=o(i/2),c=s(r/2),u=s(a/2),m=s(i/2);return'XYZ'===n?(this._x=c*l*p+d*u*m,this._y=d*u*p-c*l*m,this._z=d*l*m+c*u*p,this._w=d*l*p-c*u*m):'YXZ'===n?(this._x=c*l*p+d*u*m,this._y=d*u*p-c*l*m,this._z=d*l*m-c*u*p,this._w=d*l*p+c*u*m):'ZXY'===n?(this._x=c*l*p-d*u*m,this._y=d*u*p+c*l*m,this._z=d*l*m+c*u*p,this._w=d*l*p-c*u*m):'ZYX'===n?(this._x=c*l*p-d*u*m,this._y=d*u*p+c*l*m,this._z=d*l*m-c*u*p,this._w=d*l*p+c*u*m):'YZX'===n?(this._x=c*l*p+d*u*m,this._y=d*u*p+c*l*m,this._z=d*l*m-c*u*p,this._w=d*l*p-c*u*m):'XZY'===n?(this._x=c*l*p-d*u*m,this._y=d*u*p-c*l*m,this._z=d*l*m+c*u*p,this._w=d*l*p+c*u*m):console.warn('THREE.Quaternion: .setFromEuler() encountered an unknown order: '+n),!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const r=t/2,a=ln(r);return this._x=e.x*a,this._y=e.y*a,this._z=e.z*a,this._w=pn(r),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,r=t[0],a=t[4],i=t[8],n=t[1],o=t[5],d=t[9],l=t[2],p=t[6],c=t[10],u=r+o+c;if(0<u){const e=.5/sn(u+1);this._w=.25/e,this._x=(p-d)*e,this._y=(i-l)*e,this._z=(n-a)*e}else if(r>o&&r>c){const e=2*sn(1+r-o-c);this._w=(p-d)/e,this._x=.25*e,this._y=(a+n)/e,this._z=(i+l)/e}else if(o>c){const e=2*sn(1+o-r-c);this._w=(i-l)/e,this._x=(a+n)/e,this._y=.25*e,this._z=(d+p)/e}else{const e=2*sn(1+c-r-o);this._w=(n-a)/e,this._x=(i+l)/e,this._y=(d+p)/e,this._z=.25*e}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let a=e.dot(t)+1;return a<1e-6?(a=0,on(e.x)>on(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=a):(this._x=0,this._y=-e.z,this._z=e.y,this._w=a)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=a),this.normalize()}angleTo(e){return 2*an(on(gd.clamp(this.dot(e),-1,1)))}rotateTowards(e,r){const a=this.angleTo(e);if(0===a)return this;const i=yn(1,r/a);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return sn(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x*=e,this._y*=e,this._z*=e,this._w*=e),this._onChangeCallback(),this}multiply(e,t){return void 0===t?this.multiplyQuaternions(this,e):(console.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.'),this.multiplyQuaternions(e,t))}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const r=e._x,a=e._y,i=e._z,n=e._w,o=t._x,s=t._y,d=t._z,l=t._w;return this._x=r*l+n*o+a*d-i*s,this._y=a*l+n*s+i*o-r*d,this._z=i*l+n*d+r*s-a*o,this._w=n*l-r*o-a*s-i*d,this._onChangeCallback(),this}slerp(e,r){if(0===r)return this;if(1===r)return this.copy(e);const t=this._x,a=this._y,i=this._z,n=this._w;let o=n*e._w+t*e._x+a*e._y+i*e._z;if(0>o?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),1<=o)return this._w=n,this._x=t,this._y=a,this._z=i,this;const s=1-o*o;if(s<=rn){const e=1-r;return this._w=e*n+r*this._w,this._x=e*t+r*this._x,this._y=e*a+r*this._y,this._z=e*i+r*this._z,this.normalize(),this._onChangeCallback(),this}const d=sn(s),l=nn(d,o),p=ln((1-r)*l)/d,c=ln(r*l)/d;return this._w=n*p+this._w*c,this._x=t*p+this._x*c,this._y=a*p+this._y*c,this._z=i*p+this._z*c,this._onChangeCallback(),this}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}class Sd{constructor(e=0,t=0,r=0){Object.defineProperty(this,'isVector3',{value:!0}),this.x=e,this.y=t,this.z=r}set(e,t,r){return void 0===r&&(r=this.z),this.x=e,this.y=t,this.z=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error('index is out of range: '+e);}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error('index is out of range: '+e);}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return void 0===t?(this.x+=e.x,this.y+=e.y,this.z+=e.z,this):(console.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.'),this.addVectors(e,t))}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return void 0===t?(this.x-=e.x,this.y-=e.y,this.z-=e.z,this):(console.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.'),this.subVectors(e,t))}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return void 0===t?(this.x*=e.x,this.y*=e.y,this.z*=e.z,this):(console.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.'),this.multiplyVectors(e,t))}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.'),this.applyQuaternion(Ed.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Ed.setFromAxisAngle(e,t))}applyMatrix3(t){const r=this.x,a=this.y,i=this.z,n=t.elements;return this.x=n[0]*r+n[3]*a+n[6]*i,this.y=n[1]*r+n[4]*a+n[7]*i,this.z=n[2]*r+n[5]*a+n[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(t){const r=this.x,a=this.y,i=this.z,n=t.elements,e=1/(n[3]*r+n[7]*a+n[11]*i+n[15]);return this.x=(n[0]*r+n[4]*a+n[8]*i+n[12])*e,this.y=(n[1]*r+n[5]*a+n[9]*i+n[13])*e,this.z=(n[2]*r+n[6]*a+n[10]*i+n[14])*e,this}applyQuaternion(e){const t=this.x,r=this.y,a=this.z,i=e.x,n=e.y,o=e.z,s=e.w,d=s*t+n*a-o*r,l=s*r+o*t-i*a,p=s*a+i*r-n*t,c=-i*t-n*r-o*a;return this.x=d*s+c*-i+l*-o-p*-n,this.y=l*s+c*-n+p*-i-d*-o,this.z=p*s+c*-o+d*-n-l*-i,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(t){const r=this.x,a=this.y,i=this.z,n=t.elements;return this.x=n[0]*r+n[4]*a+n[8]*i,this.y=n[1]*r+n[5]*a+n[9]*i,this.z=n[2]*r+n[6]*a+n[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=yn(this.x,e.x),this.y=yn(this.y,e.y),this.z=yn(this.z,e.z),this}max(e){return this.x=hn(this.x,e.x),this.y=hn(this.y,e.y),this.z=hn(this.z,e.z),this}clamp(e,t){return this.x=hn(e.x,yn(t.x,this.x)),this.y=hn(e.y,yn(t.y,this.y)),this.z=hn(e.z,yn(t.z,this.z)),this}clampScalar(e,t){return this.x=hn(e,yn(t,this.x)),this.y=hn(e,yn(t,this.y)),this.z=hn(e,yn(t,this.z)),this}clampLength(e,t){const r=this.length();return this.divideScalar(r||1).multiplyScalar(hn(e,yn(t,r)))}floor(){return this.x=gn(this.x),this.y=gn(this.y),this.z=gn(this.z),this}ceil(){return this.x=un(this.x),this.y=un(this.y),this.z=un(this.z),this}round(){return this.x=dn(this.x),this.y=dn(this.y),this.z=dn(this.z),this}roundToZero(){return this.x=0>this.x?un(this.x):gn(this.x),this.y=0>this.y?un(this.y):gn(this.y),this.z=0>this.z?un(this.z):gn(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return sn(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return on(this.x)+on(this.y)+on(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this}cross(e,t){return void 0===t?this.crossVectors(this,e):(console.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.'),this.crossVectors(e,t))}crossVectors(e,t){const r=e.x,a=e.y,i=e.z,n=t.x,o=t.y,s=t.z;return this.x=a*s-i*o,this.y=i*n-r*s,this.z=r*o-a*n,this}projectOnVector(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const r=e.dot(this)/t;return this.copy(e).multiplyScalar(r)}projectOnPlane(e){return Td.copy(this).projectOnVector(e),this.sub(Td)}reflect(e){return this.sub(Td.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=sn(this.lengthSq()*e.lengthSq());if(0===t)return vn/2;const r=this.dot(e)/t;return an(gd.clamp(r,-1,1))}distanceTo(e){return sn(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,r=this.y-e.y,a=this.z-e.z;return t*t+r*r+a*a}manhattanDistanceTo(e){return on(this.x-e.x)+on(this.y-e.y)+on(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,r){const a=ln(t)*e;return this.x=a*ln(r),this.y=pn(t)*e,this.z=a*pn(r),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,r){return this.x=e*ln(t),this.y=r,this.z=e*pn(t),this}setFromMatrixPosition(t){const r=t.elements;return this.x=r[12],this.y=r[13],this.z=r[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),r=this.setFromMatrixColumn(e,1).length(),a=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=r,this.z=a,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,r){return void 0!==r&&console.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().'),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}const Td=new Sd,Ed=new Md;class wd{constructor(e,t){Object.defineProperty(this,'isBox3',{value:!0}),this.min=e===void 0?new Sd(+Infinity,+Infinity,+Infinity):e,this.max=t===void 0?new Sd(-Infinity,-Infinity,-Infinity):t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=+Infinity,r=+Infinity,a=+Infinity,n=-Infinity,o=-Infinity,s=-Infinity;for(let d=0,i=e.length;d<i;d+=3){const i=e[d],l=e[d+1],p=e[d+2];i<t&&(t=i),l<r&&(r=l),p<a&&(a=p),i>n&&(n=i),l>o&&(o=l),p>s&&(s=p)}return this.min.set(t,r,a),this.max.set(n,o,s),this}setFromBufferAttribute(e){let t=+Infinity,r=+Infinity,a=+Infinity,n=-Infinity,o=-Infinity,s=-Infinity;for(let d=0,i=e.count;d<i;d++){const i=e.getX(d),l=e.getY(d),p=e.getZ(d);i<t&&(t=i),l<r&&(r=l),p<a&&(a=p),i>n&&(n=i),l>o&&(o=l),p>s&&(s=p)}return this.min.set(t,r,a),this.max.set(n,o,s),this}setFromPoints(e){this.makeEmpty();for(let t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const r=Ad.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=+Infinity,this.max.x=this.max.y=this.max.z=-Infinity,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return void 0===e&&(console.warn('THREE.Box3: .getCenter() target is now required'),e=new Sd),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return void 0===e&&(console.warn('THREE.Box3: .getSize() target is now required'),e=new Sd),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);const t=e.geometry;t!==void 0&&(null===t.boundingBox&&t.computeBoundingBox(),Rd.copy(t.boundingBox),Rd.applyMatrix4(e.matrixWorld),this.union(Rd));const r=e.children;for(let t=0,a=r.length;t<a;t++)this.expandByObject(r[t]);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return void 0===t&&(console.warn('THREE.Box3: .getParameter() target is now required'),t=new Sd),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Ad),Ad.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,r;return 0<e.normal.x?(t=e.normal.x*this.min.x,r=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,r=e.normal.x*this.min.x),0<e.normal.y?(t+=e.normal.y*this.min.y,r+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,r+=e.normal.y*this.min.y),0<e.normal.z?(t+=e.normal.z*this.min.z,r+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,r+=e.normal.z*this.min.z),t<=-e.constant&&r>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Bd),Ud.subVectors(this.max,Bd),Cd.subVectors(e.a,Bd),Pd.subVectors(e.b,Bd),Id.subVectors(e.c,Bd),Nd.subVectors(Pd,Cd),Dd.subVectors(Id,Pd),zd.subVectors(Cd,Id);let t=[0,-Nd.z,Nd.y,0,-Dd.z,Dd.y,0,-zd.z,zd.y,Nd.z,0,-Nd.x,Dd.z,0,-Dd.x,zd.z,0,-zd.x,-Nd.y,Nd.x,0,-Dd.y,Dd.x,0,-zd.y,zd.x,0];return!!d(t,Cd,Pd,Id,Ud)&&(t=[1,0,0,0,1,0,0,0,1],!!d(t,Cd,Pd,Id,Ud))&&(Hd.crossVectors(Nd,Dd),t=[Hd.x,Hd.y,Hd.z],d(t,Cd,Pd,Id,Ud))}clampPoint(e,t){return void 0===t&&(console.warn('THREE.Box3: .clampPoint() target is now required'),t=new Sd),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){const t=Ad.copy(e).clamp(this.min,this.max);return t.sub(e).length()}getBoundingSphere(e){return void 0===e&&console.error('THREE.Box3: .getBoundingSphere() target is now required'),this.getCenter(e.center),e.radius=.5*this.getSize(Ad).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Ld[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Ld[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Ld[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Ld[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Ld[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Ld[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Ld[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Ld[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Ld),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Ld=[new Sd,new Sd,new Sd,new Sd,new Sd,new Sd,new Sd,new Sd],Ad=new Sd,Rd=new wd,Cd=new Sd,Pd=new Sd,Id=new Sd,Nd=new Sd,Dd=new Sd,zd=new Sd,Bd=new Sd,Ud=new Sd,Hd=new Sd,Fd=new Sd,Gd=new wd;class Od{constructor(e,t){this.center=e===void 0?new Sd:e,this.radius=t===void 0?-1:t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const r=this.center;void 0===t?Gd.setFromPoints(e).getCenter(r):r.copy(t);let a=0;for(let n=0,i=e.length;n<i;n++)a=hn(a,r.distanceToSquared(e[n]));return this.radius=sn(a),this}clone(){return new this.constructor().copy(this)}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return 0>this.radius}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return on(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const r=this.center.distanceToSquared(e);return void 0===t&&(console.warn('THREE.Sphere: .clampPoint() target is now required'),t=new Sd),t.copy(e),r>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return(void 0===e&&(console.warn('THREE.Sphere: .getBoundingBox() target is now required'),e=new wd),this.isEmpty())?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius*=e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}}const Vd=new Sd,kd=new Sd,Wd=new Sd,jd=new Sd,Xd=new Sd,qd=new Sd,Yd=new Sd;class Zd{constructor(e,t){this.origin=e===void 0?new Sd:e,this.direction=t===void 0?new Sd(0,0,-1):t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}clone(){return new this.constructor().copy(this)}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return void 0===t&&(console.warn('THREE.Ray: .at() target is now required'),t=new Sd),t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Vd)),this}closestPointToPoint(e,t){t===void 0&&(console.warn('THREE.Ray: .closestPointToPoint() target is now required'),t=new Sd),t.subVectors(e,this.origin);const r=t.dot(this.direction);return 0>r?t.copy(this.origin):t.copy(this.direction).multiplyScalar(r).add(this.origin)}distanceToPoint(e){return sn(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Vd.subVectors(e,this.origin).dot(this.direction);return 0>t?this.origin.distanceToSquared(e):(Vd.copy(this.direction).multiplyScalar(t).add(this.origin),Vd.distanceToSquared(e))}distanceSqToSegment(e,t,r,a){kd.copy(e).add(t).multiplyScalar(.5),Wd.copy(t).sub(e).normalize(),jd.copy(this.origin).sub(kd);const i=.5*e.distanceTo(t),n=-this.direction.dot(Wd),o=jd.dot(this.direction),s=-jd.dot(Wd),d=jd.lengthSq(),l=on(1-n*n);let p,c,u,m;if(!(0<l))c=0<n?-i:i,p=hn(0,-(n*c+o)),u=-p*p+c*(c+2*s)+d;else if(p=n*s-o,c=n*o-s,m=i*l,!(0<=p))c<=-m?(p=hn(0,-(-n*i+o)),c=0<p?-i:yn(hn(-i,-s),i),u=-p*p+c*(c+2*s)+d):c<=m?(p=0,c=yn(hn(-i,-s),i),u=c*(c+2*s)+d):(p=hn(0,-(n*i+o)),c=0<p?i:yn(hn(-i,-s),i),u=-p*p+c*(c+2*s)+d);else if(!(c>=-m))c=-i,p=hn(0,-(n*c+o)),u=-p*p+c*(c+2*s)+d;else if(c<=m){const e=1/l;p*=e,c*=e,u=p*(p+n*c+2*o)+c*(n*p+c+2*s)+d}else c=i,p=hn(0,-(n*c+o)),u=-p*p+c*(c+2*s)+d;return r&&r.copy(this.direction).multiplyScalar(p).add(this.origin),a&&a.copy(Wd).multiplyScalar(c).add(kd),u}intersectSphere(e,t){Vd.subVectors(e.center,this.origin);const r=Vd.dot(this.direction),a=Vd.dot(Vd)-r*r,i=e.radius*e.radius;if(a>i)return null;const n=sn(i-a),o=r-n,s=r+n;return 0>o&&0>s?null:0>o?this.at(s,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const r=e.normal.dot(this.direction);if(0===r)return 0===e.distanceToPoint(this.origin)?0:null;const a=-(this.origin.dot(e.normal)+e.constant)/r;return 0<=a?a:null}intersectPlane(e,r){const a=this.distanceToPlane(e);return null===a?null:this.at(a,r)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);if(0===t)return!0;const r=e.normal.dot(this.direction);return!!(0>r*t)}intersectBox(e,t){let r,a,i,n,o,s;const d=1/this.direction.x,l=1/this.direction.y,p=1/this.direction.z,c=this.origin;return(0<=d?(r=(e.min.x-c.x)*d,a=(e.max.x-c.x)*d):(r=(e.max.x-c.x)*d,a=(e.min.x-c.x)*d),0<=l?(i=(e.min.y-c.y)*l,n=(e.max.y-c.y)*l):(i=(e.max.y-c.y)*l,n=(e.min.y-c.y)*l),r>n||i>a)?null:((i>r||r!=r)&&(r=i),(n<a||a!=a)&&(a=n),0<=p?(o=(e.min.z-c.z)*p,s=(e.max.z-c.z)*p):(o=(e.max.z-c.z)*p,s=(e.min.z-c.z)*p),r>s||o>a)?null:((o>r||r!=r)&&(r=o),(s<a||a!=a)&&(a=s),0>a?null:this.at(0<=r?r:a,t))}intersectsBox(e){return null!==this.intersectBox(e,Vd)}intersectTriangle(e,t,r,a,i){Xd.subVectors(t,e),qd.subVectors(r,e),Yd.crossVectors(Xd,qd);let n=this.direction.dot(Yd),o;if(0<n){if(a)return null;o=1}else if(0>n)o=-1,n=-n;else return null;jd.subVectors(this.origin,e);const s=o*this.direction.dot(qd.crossVectors(jd,qd));if(0>s)return null;const d=o*this.direction.dot(Xd.cross(jd));if(0>d)return null;if(s+d>n)return null;const l=-o*jd.dot(Yd);return 0>l?null:this.at(l/n,i)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}}class Jd{constructor(){Object.defineProperty(this,'isMatrix4',{value:!0}),this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],0<arguments.length&&console.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.')}set(e,t,r,a,i,n,o,s,d,l,p,c,u,m,f,g){const h=this.elements;return h[0]=e,h[4]=t,h[8]=r,h[12]=a,h[1]=i,h[5]=n,h[9]=o,h[13]=s,h[2]=d,h[6]=l,h[10]=p,h[14]=c,h[3]=u,h[7]=m,h[11]=f,h[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Jd().fromArray(this.elements)}copy(e){const t=this.elements,r=e.elements;return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],t[9]=r[9],t[10]=r[10],t[11]=r[11],t[12]=r[12],t[13]=r[13],t[14]=r[14],t[15]=r[15],this}copyPosition(e){const t=this.elements,r=e.elements;return t[12]=r[12],t[13]=r[13],t[14]=r[14],this}extractBasis(e,t,r){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),r.setFromMatrixColumn(this,2),this}makeBasis(e,t,r){return this.set(e.x,t.x,r.x,0,e.y,t.y,r.y,0,e.z,t.z,r.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,r=e.elements,a=1/Qd.setFromMatrixColumn(e,0).length(),i=1/Qd.setFromMatrixColumn(e,1).length(),n=1/Qd.setFromMatrixColumn(e,2).length();return t[0]=r[0]*a,t[1]=r[1]*a,t[2]=r[2]*a,t[3]=0,t[4]=r[4]*i,t[5]=r[5]*i,t[6]=r[6]*i,t[7]=0,t[8]=r[8]*n,t[9]=r[9]*n,t[10]=r[10]*n,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error('THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');const r=this.elements,i=t.x,n=t.y,o=t.z,s=pn(i),l=ln(i),p=pn(n),u=ln(n),m=pn(o),e=ln(o);if('XYZ'===t.order){const t=s*m,a=s*e,i=l*m,n=l*e;r[0]=p*m,r[4]=-p*e,r[8]=u,r[1]=a+i*u,r[5]=t-n*u,r[9]=-l*p,r[2]=n-t*u,r[6]=i+a*u,r[10]=s*p}else if('YXZ'===t.order){const t=p*m,a=p*e,i=u*m,n=u*e;r[0]=t+n*l,r[4]=i*l-a,r[8]=s*u,r[1]=s*e,r[5]=s*m,r[9]=-l,r[2]=a*l-i,r[6]=n+t*l,r[10]=s*p}else if('ZXY'===t.order){const t=p*m,i=p*e,n=u*m,o=u*e;r[0]=t-o*l,r[4]=-s*e,r[8]=n+i*l,r[1]=i+n*l,r[5]=s*m,r[9]=o-t*l,r[2]=-s*u,r[6]=l,r[10]=s*p}else if('ZYX'===t.order){const t=s*m,a=s*e,i=l*m,n=l*e;r[0]=p*m,r[4]=i*u-a,r[8]=t*u+n,r[1]=p*e,r[5]=n*u+t,r[9]=a*u-i,r[2]=-u,r[6]=l*p,r[10]=s*p}else if('YZX'===t.order){const t=s*p,a=s*u,i=l*p,n=l*u;r[0]=p*m,r[4]=n-t*e,r[8]=i*e+a,r[1]=e,r[5]=s*m,r[9]=-l*m,r[2]=-u*m,r[6]=a*e+i,r[10]=t-n*e}else if('XZY'===t.order){const t=s*p,a=s*u,i=l*p,n=l*u;r[0]=p*m,r[4]=-e,r[8]=u*m,r[1]=t*e+n,r[5]=s*m,r[9]=a*e-i,r[2]=i*e-a,r[6]=l*m,r[10]=n*e+t}return r[3]=0,r[7]=0,r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1,this}makeRotationFromQuaternion(e){return this.compose($d,e,el)}lookAt(e,t,r){const a=this.elements;return al.subVectors(e,t),0===al.lengthSq()&&(al.z=1),al.normalize(),tl.crossVectors(r,al),0===tl.lengthSq()&&(1===on(r.z)?al.x+=1e-4:al.z+=1e-4,al.normalize(),tl.crossVectors(r,al)),tl.normalize(),rl.crossVectors(al,tl),a[0]=tl.x,a[4]=rl.x,a[8]=al.x,a[1]=tl.y,a[5]=rl.y,a[9]=al.y,a[2]=tl.z,a[6]=rl.z,a[10]=al.z,this}multiply(e,t){return void 0===t?this.multiplyMatrices(this,e):(console.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.'),this.multiplyMatrices(e,t))}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const r=e.elements,a=t.elements,i=this.elements,n=r[0],o=r[4],s=r[8],d=r[12],l=r[1],p=r[5],c=r[9],u=r[13],m=r[2],f=r[6],g=r[10],h=r[14],y=r[3],v=r[7],x=r[11],_=r[15],b=a[0],M=a[4],S=a[8],T=a[12],E=a[1],w=a[5],L=a[9],A=a[13],R=a[2],C=a[6],P=a[10],I=a[14],N=a[3],D=a[7],z=a[11],B=a[15];return i[0]=n*b+o*E+s*R+d*N,i[4]=n*M+o*w+s*C+d*D,i[8]=n*S+o*L+s*P+d*z,i[12]=n*T+o*A+s*I+d*B,i[1]=l*b+p*E+c*R+u*N,i[5]=l*M+p*w+c*C+u*D,i[9]=l*S+p*L+c*P+u*z,i[13]=l*T+p*A+c*I+u*B,i[2]=m*b+f*E+g*R+h*N,i[6]=m*M+f*w+g*C+h*D,i[10]=m*S+f*L+g*P+h*z,i[14]=m*T+f*A+g*I+h*B,i[3]=y*b+v*E+x*R+_*N,i[7]=y*M+v*w+x*C+_*D,i[11]=y*S+v*L+x*P+_*z,i[15]=y*T+v*A+x*I+_*B,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],r=e[4],a=e[8],i=e[12],n=e[1],o=e[5],s=e[9],d=e[13],l=e[2],p=e[6],c=e[10],u=e[14],m=e[3],f=e[7],g=e[11],h=e[15];return m*(+i*s*p-a*d*p-i*o*c+r*d*c+a*o*u-r*s*u)+f*(+t*s*u-t*d*c+i*n*c-a*n*u+a*d*l-i*s*l)+g*(+t*d*p-t*o*u-i*n*p+r*n*u+i*o*l-r*d*l)+h*(-a*o*l-t*s*p+t*o*c+a*n*p-r*n*c+r*s*l)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,r){const a=this.elements;return e.isVector3?(a[12]=e.x,a[13]=e.y,a[14]=e.z):(a[12]=e,a[13]=t,a[14]=r),this}invert(){const e=this.elements,t=e[0],r=e[1],a=e[2],i=e[3],n=e[4],o=e[5],s=e[6],d=e[7],l=e[8],p=e[9],c=e[10],u=e[11],m=e[12],f=e[13],g=e[14],h=e[15],y=p*g*d-f*c*d+f*s*u-o*g*u-p*s*h+o*c*h,v=m*c*d-l*g*d-m*s*u+n*g*u+l*s*h-n*c*h,x=l*f*d-m*p*d+m*o*u-n*f*u-l*o*h+n*p*h,_=m*p*s-l*f*s-m*o*c+n*f*c+l*o*g-n*p*g,b=t*y+r*v+a*x+i*_;if(0==b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/b;return e[0]=y*M,e[1]=(f*c*i-p*g*i-f*a*u+r*g*u+p*a*h-r*c*h)*M,e[2]=(o*g*i-f*s*i+f*a*d-r*g*d-o*a*h+r*s*h)*M,e[3]=(p*s*i-o*c*i-p*a*d+r*c*d+o*a*u-r*s*u)*M,e[4]=v*M,e[5]=(l*g*i-m*c*i+m*a*u-t*g*u-l*a*h+t*c*h)*M,e[6]=(m*s*i-n*g*i-m*a*d+t*g*d+n*a*h-t*s*h)*M,e[7]=(n*c*i-l*s*i+l*a*d-t*c*d-n*a*u+t*s*u)*M,e[8]=x*M,e[9]=(m*p*i-l*f*i-m*r*u+t*f*u+l*r*h-t*p*h)*M,e[10]=(n*f*i-m*o*i+m*r*d-t*f*d-n*r*h+t*o*h)*M,e[11]=(l*o*i-n*p*i-l*r*d+t*p*d+n*r*u-t*o*u)*M,e[12]=_*M,e[13]=(l*f*a-m*p*a+m*r*c-t*f*c-l*r*g+t*p*g)*M,e[14]=(m*o*a-n*f*a-m*r*s+t*f*s+n*r*g-t*o*g)*M,e[15]=(n*p*a-l*o*a+l*r*s-t*p*s-n*r*c+t*o*c)*M,this}scale(e){const t=this.elements,r=e.x,a=e.y,i=e.z;return t[0]*=r,t[4]*=a,t[8]*=i,t[1]*=r,t[5]*=a,t[9]*=i,t[2]*=r,t[6]*=a,t[10]*=i,t[3]*=r,t[7]*=a,t[11]*=i,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],a=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return sn(hn(t,r,a))}makeTranslation(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this}makeRotationX(e){const t=pn(e),r=ln(e);return this.set(1,0,0,0,0,t,-r,0,0,r,t,0,0,0,0,1),this}makeRotationY(e){const t=pn(e),r=ln(e);return this.set(t,0,r,0,0,1,0,0,-r,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=pn(e),r=ln(e);return this.set(t,-r,0,0,r,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,r){const a=pn(r),i=ln(r),n=1-a,t=e.x,o=e.y,s=e.z,d=n*t,l=n*o;return this.set(d*t+a,d*o-i*s,d*s+i*o,0,d*o+i*s,l*o+a,l*s-i*t,0,d*s-i*o,l*s+i*t,n*s*s+a,0,0,0,0,1),this}makeScale(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this}makeShear(e,t,r){return this.set(1,t,r,0,e,1,r,0,e,t,1,0,0,0,0,1),this}compose(e,t,r){const a=this.elements,i=t._x,n=t._y,o=t._z,s=t._w,d=i+i,l=n+n,p=o+o,c=i*d,u=i*l,m=i*p,f=n*l,g=n*p,h=o*p,y=s*d,v=s*l,x=s*p,_=r.x,b=r.y,M=r.z;return a[0]=(1-(f+h))*_,a[1]=(u+x)*_,a[2]=(m-v)*_,a[3]=0,a[4]=(u-x)*b,a[5]=(1-(c+h))*b,a[6]=(g+y)*b,a[7]=0,a[8]=(m+v)*M,a[9]=(g-y)*M,a[10]=(1-(c+f))*M,a[11]=0,a[12]=e.x,a[13]=e.y,a[14]=e.z,a[15]=1,this}decompose(e,t,r){const a=this.elements;let i=Qd.set(a[0],a[1],a[2]).length();const n=Qd.set(a[4],a[5],a[6]).length(),o=Qd.set(a[8],a[9],a[10]).length(),s=this.determinant();0>s&&(i=-i),e.x=a[12],e.y=a[13],e.z=a[14],Kd.copy(this);const d=1/i,l=1/n,p=1/o;return Kd.elements[0]*=d,Kd.elements[1]*=d,Kd.elements[2]*=d,Kd.elements[4]*=l,Kd.elements[5]*=l,Kd.elements[6]*=l,Kd.elements[8]*=p,Kd.elements[9]*=p,Kd.elements[10]*=p,t.setFromRotationMatrix(Kd),r.x=i,r.y=n,r.z=o,this}makePerspective(e,t,r,a,i,n){void 0===n&&console.warn('THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.');const o=this.elements;return o[0]=2*i/(t-e),o[4]=0,o[8]=(t+e)/(t-e),o[12]=0,o[1]=0,o[5]=2*i/(r-a),o[9]=(r+a)/(r-a),o[13]=0,o[2]=0,o[6]=0,o[10]=-(n+i)/(n-i),o[14]=-2*n*i/(n-i),o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(e,t,r,a,i,n){const o=this.elements,s=1/(t-e),d=1/(r-a),l=1/(n-i);return o[0]=2*s,o[4]=0,o[8]=0,o[12]=-((t+e)*s),o[1]=0,o[5]=2*d,o[9]=0,o[13]=-((r+a)*d),o[2]=0,o[6]=0,o[10]=-2*l,o[14]=-((n+i)*l),o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(e){const t=this.elements,r=e.elements;for(let a=0;16>a;a++)if(t[a]!==r[a])return!1;return!0}fromArray(e,t=0){for(let r=0;16>r;r++)this.elements[r]=e[r+t];return this}toArray(e=[],t=0){const r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e}}const Qd=new Sd,Kd=new Jd,$d=new Sd(0,0,0),el=new Sd(1,1,1),tl=new Sd,rl=new Sd,al=new Sd;class il{constructor(e=0,t=0,r=0,a=il.DefaultOrder){Object.defineProperty(this,'isEuler',{value:!0}),this._x=e,this._y=t,this._z=r,this._order=a}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,r,a){return this._x=e,this._y=t,this._z=r,this._order=a||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t,r){var a=Math.asin;const i=gd.clamp,n=e.elements,o=n[0],s=n[4],d=n[8],l=n[1],p=n[5],c=n[9],u=n[2],m=n[6],f=n[10];return t=t||this._order,'XYZ'===t?(this._y=a(i(d,-1,1)),.9999999>on(d)?(this._x=nn(-c,f),this._z=nn(-s,o)):(this._x=nn(m,p),this._z=0)):'YXZ'===t?(this._x=a(-i(c,-1,1)),.9999999>on(c)?(this._y=nn(d,f),this._z=nn(l,p)):(this._y=nn(-u,o),this._z=0)):'ZXY'===t?(this._x=a(i(m,-1,1)),.9999999>on(m)?(this._y=nn(-u,f),this._z=nn(-s,p)):(this._y=0,this._z=nn(l,o))):'ZYX'===t?(this._y=a(-i(u,-1,1)),.9999999>on(u)?(this._x=nn(m,f),this._z=nn(l,o)):(this._x=0,this._z=nn(-s,p))):'YZX'===t?(this._z=a(i(l,-1,1)),.9999999>on(l)?(this._x=nn(-c,p),this._y=nn(-u,o)):(this._x=0,this._y=nn(d,f))):'XZY'===t?(this._z=a(-i(s,-1,1)),.9999999>on(s)?(this._x=nn(m,p),this._y=nn(d,o)):(this._x=nn(-c,f),this._y=0)):console.warn('THREE.Euler: .setFromRotationMatrix() encountered an unknown order: '+t),(this._order=t,!1!==r&&this._onChangeCallback(),this)}setFromQuaternion(e,t,r){return nl.makeRotationFromQuaternion(e),this.setFromRotationMatrix(nl,t,r)}setFromVector3(e,t){return this.set(e.x,e.y,e.z,t||this._order)}reorder(e){return ol.setFromEuler(this),this.setFromQuaternion(ol,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new Sd(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}il.DefaultOrder='XYZ',il.RotationOrders=['XYZ','YZX','ZXY','XZY','YXZ','ZYX'];const nl=new Jd,ol=new Md;class sl{constructor(){this.mask=1}set(e){this.mask=0|1<<e}enable(e){this.mask|=0|1<<e}enableAll(){this.mask=-1}toggle(e){this.mask^=0|1<<e}disable(e){this.mask&=~(0|1<<e)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}}let dl=0;const ll=new Sd,pl=new Md,cl=new Jd,ul=new Sd,ml=new Sd,fl=new Sd,gl=new Md,hl=new Sd(1,0,0),yl=new Sd(0,1,0),vl=new Sd(0,0,1),xl={type:'added'},_l={type:'removed'};l.DefaultUp=new Sd(0,1,0),l.DefaultMatrixAutoUpdate=!0,l.prototype=Object.assign(Object.create(a.prototype),{constructor:l,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(e){return this.quaternion.premultiply(e),this},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(e,t){return pl.setFromAxisAngle(e,t),this.quaternion.multiply(pl),this},rotateOnWorldAxis:function(e,t){return pl.setFromAxisAngle(e,t),this.quaternion.premultiply(pl),this},rotateX:function(e){return this.rotateOnAxis(hl,e)},rotateY:function(e){return this.rotateOnAxis(yl,e)},rotateZ:function(e){return this.rotateOnAxis(vl,e)},translateOnAxis:function(e,t){return ll.copy(e).applyQuaternion(this.quaternion),this.position.add(ll.multiplyScalar(t)),this},translateX:function(e){return this.translateOnAxis(hl,e)},translateY:function(e){return this.translateOnAxis(yl,e)},translateZ:function(e){return this.translateOnAxis(vl,e)},localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(e){return e.applyMatrix4(cl.copy(this.matrixWorld).invert())},lookAt:function(e,t,r){e.isVector3?ul.copy(e):ul.set(e,t,r);const a=this.parent;this.updateWorldMatrix(!0,!1),ml.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?cl.lookAt(ml,ul,this.up):cl.lookAt(ul,ml,this.up),this.quaternion.setFromRotationMatrix(cl),a&&(cl.extractRotation(a.matrixWorld),pl.setFromRotationMatrix(cl),this.quaternion.premultiply(pl.invert()))},add:function(e){if(1<arguments.length){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?(console.error('THREE.Object3D.add: object can\'t be added as a child of itself.',e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(xl)):console.error('THREE.Object3D.add: object not an instance of THREE.Object3D.',e),this)},remove:function(e){if(1<arguments.length){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(_l)),this},clear:function(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(_l)}return this.children.length=0,this},attach:function(e){return this.updateWorldMatrix(!0,!1),cl.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),cl.multiply(e.parent.matrixWorld)),e.applyMatrix4(cl),e.updateWorldMatrix(!1,!1),this.add(e),this},getObjectById:function(e){return this.getObjectByProperty('id',e)},getObjectByName:function(e){return this.getObjectByProperty('name',e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(let r=0,a=this.children.length;r<a;r++){const a=this.children[r],i=a.getObjectByProperty(e,t);if(i!==void 0)return i}},getWorldPosition:function(e){return void 0===e&&(console.warn('THREE.Object3D: .getWorldPosition() target is now required'),e=new Sd),this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(e){return void 0===e&&(console.warn('THREE.Object3D: .getWorldQuaternion() target is now required'),e=new Md),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ml,e,fl),e},getWorldScale:function(e){return void 0===e&&(console.warn('THREE.Object3D: .getWorldScale() target is now required'),e=new Sd),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ml,gl,e),e},getWorldDirection:function(t){t===void 0&&(console.warn('THREE.Object3D: .getWorldDirection() target is now required'),t=new Sd),this.updateWorldMatrix(!0,!1);const r=this.matrixWorld.elements;return t.set(r[8],r[9],r[10]).normalize()},raycast:function(){},traverse:function(e){e(this);const t=this.children;for(let r=0,a=t.length;r<a;r++)t[r].traverse(e)},traverseVisible:function(e){if(!1!==this.visible){e(this);const t=this.children;for(let r=0,a=t.length;r<a;r++)t[r].traverseVisible(e)}},traverseAncestors:function(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let r=0,a=t.length;r<a;r++)t[r].updateMatrixWorld(e)},updateWorldMatrix:function(e,t){const r=this.parent;if(!0===e&&null!==r&&r.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const e=this.children;for(let t=0,r=e.length;t<r;t++)e[t].updateWorldMatrix(!1,!0)}},toJSON:function(e){function t(t,r){return void 0===t[r.uuid]&&(t[r.uuid]=r.toJSON(e)),r.uuid}function r(e){const t=[];for(const r in e){const a=e[r];delete a.metadata,t.push(a)}return t}const a=void 0===e||'string'==typeof e,i={};a&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},i.metadata={version:4.5,type:'Object',generator:'Object3D.toJSON'});const n={};if(n.uuid=this.uuid,n.type=this.type,''!==this.name&&(n.name=this.name),!0===this.castShadow&&(n.castShadow=!0),!0===this.receiveShadow&&(n.receiveShadow=!0),!1===this.visible&&(n.visible=!1),!1===this.frustumCulled&&(n.frustumCulled=!1),0!==this.renderOrder&&(n.renderOrder=this.renderOrder),'{}'!==JSON.stringify(this.userData)&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type='InstancedMesh',n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON()),this.isMesh||this.isLine||this.isPoints){n.geometry=t(e.geometries,this.geometry);const r=this.geometry.parameters;if(void 0!==r&&void 0!==r.shapes){const a=r.shapes;if(Array.isArray(a))for(let r=0,i=a.length;r<i;r++){const i=a[r];t(e.shapes,i)}else t(e.shapes,a)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(t(e.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const r=[];for(let a=0,i=this.material.length;a<i;a++)r.push(t(e.materials,this.material[a]));n.material=r}else n.material=t(e.materials,this.material);if(0<this.children.length){n.children=[];for(let t=0;t<this.children.length;t++)n.children.push(this.children[t].toJSON(e).object)}if(0<this.animations.length){n.animations=[];for(let r=0;r<this.animations.length;r++){const a=this.animations[r];n.animations.push(t(e.animations,a))}}if(a){const t=r(e.geometries),a=r(e.materials),n=r(e.textures),o=r(e.images),s=r(e.shapes),d=r(e.skeletons),l=r(e.animations);0<t.length&&(i.geometries=t),0<a.length&&(i.materials=a),0<n.length&&(i.textures=n),0<o.length&&(i.images=o),0<s.length&&(i.shapes=s),0<d.length&&(i.skeletons=d),0<l.length&&(i.animations=l)}return i.object=n,i},clone:function(e){return new this.constructor().copy(this,e)},copy:function(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let t=0;t<e.children.length;t++){const r=e.children[t];this.add(r.clone())}return this}});const bl=new Sd,Ml=new Sd,Sl=new yd;class Tl{constructor(e,t){Object.defineProperty(this,'isPlane',{value:!0}),this.normal=e===void 0?new Sd(1,0,0):e,this.constant=t===void 0?0:t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,r,a){return this.normal.set(e,t,r),this.constant=a,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,r){const a=bl.subVectors(r,t).cross(Ml.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(a,e),this}clone(){return new this.constructor().copy(this)}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return void 0===t&&(console.warn('THREE.Plane: .projectPoint() target is now required'),t=new Sd),t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,r){r===void 0&&(console.warn('THREE.Plane: .intersectLine() target is now required'),r=new Sd);const a=e.delta(bl),i=this.normal.dot(a);if(0===i)return 0===this.distanceToPoint(e.start)?r.copy(e.start):void 0;const n=-(e.start.dot(this.normal)+this.constant)/i;return 0>n||1<n?void 0:r.copy(a).multiplyScalar(n).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),r=this.distanceToPoint(e.end);return 0>t&&0<r||0>r&&0<t}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return void 0===e&&(console.warn('THREE.Plane: .coplanarPoint() target is now required'),e=new Sd),e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const r=t||Sl.getNormalMatrix(e),a=this.coplanarPoint(bl).applyMatrix4(e),i=this.normal.applyMatrix3(r).normalize();return this.constant=-a.dot(i),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}}const El=new Sd,wl=new Sd,Ll=new Sd,Al=new Sd,Rl=new Sd,Cl=new Sd,Pl=new Sd,Il=new Sd,Nl=new Sd,Dl=new Sd;class zl{constructor(e,t,r){this.a=e===void 0?new Sd:e,this.b=t===void 0?new Sd:t,this.c=r===void 0?new Sd:r}static getNormal(e,t,r,a){a===void 0&&(console.warn('THREE.Triangle: .getNormal() target is now required'),a=new Sd),a.subVectors(r,t),El.subVectors(e,t),a.cross(El);const i=a.lengthSq();return 0<i?a.multiplyScalar(1/sn(i)):a.set(0,0,0)}static getBarycoord(e,t,r,a,i){El.subVectors(a,t),wl.subVectors(r,t),Ll.subVectors(e,t);const n=El.dot(El),o=El.dot(wl),s=El.dot(Ll),d=wl.dot(wl),l=wl.dot(Ll),p=n*d-o*o;if(void 0===i&&(console.warn('THREE.Triangle: .getBarycoord() target is now required'),i=new Sd),0==p)return i.set(-2,-1,-1);const c=1/p,m=(d*s-o*l)*c,u=(n*l-o*s)*c;return i.set(1-m-u,u,m)}static containsPoint(e,t,r,a){return this.getBarycoord(e,t,r,a,Al),0<=Al.x&&0<=Al.y&&1>=Al.x+Al.y}static getUV(e,t,r,a,i,n,o,s){return this.getBarycoord(e,t,r,a,Al),s.set(0,0),s.addScaledVector(i,Al.x),s.addScaledVector(n,Al.y),s.addScaledVector(o,Al.z),s}static isFrontFacing(e,t,r,a){return El.subVectors(r,t),wl.subVectors(e,t),!!(0>El.cross(wl).dot(a))}set(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this}setFromPointsAndIndices(e,t,r,a){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[a]),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return El.subVectors(this.c,this.b),wl.subVectors(this.a,this.b),.5*El.cross(wl).length()}getMidpoint(e){return void 0===e&&(console.warn('THREE.Triangle: .getMidpoint() target is now required'),e=new Sd),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return zl.getNormal(this.a,this.b,this.c,e)}getPlane(e){return void 0===e&&(console.warn('THREE.Triangle: .getPlane() target is now required'),e=new Tl),e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return zl.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,r,a,i){return zl.getUV(e,this.a,this.b,this.c,t,r,a,i)}containsPoint(e){return zl.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return zl.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){void 0===t&&(console.warn('THREE.Triangle: .closestPointToPoint() target is now required'),t=new Sd);const r=this.a,a=this.b,i=this.c;let n,o;Rl.subVectors(a,r),Cl.subVectors(i,r),Il.subVectors(e,r);const s=Rl.dot(Il),d=Cl.dot(Il);if(0>=s&&0>=d)return t.copy(r);Nl.subVectors(e,a);const l=Rl.dot(Nl),p=Cl.dot(Nl);if(0<=l&&p<=l)return t.copy(a);const c=s*p-l*d;if(0>=c&&0<=s&&0>=l)return n=s/(s-l),t.copy(r).addScaledVector(Rl,n);Dl.subVectors(e,i);const u=Rl.dot(Dl),m=Cl.dot(Dl);if(0<=m&&u<=m)return t.copy(i);const f=u*d-s*m;if(0>=f&&0<=d&&0>=m)return o=d/(d-m),t.copy(r).addScaledVector(Cl,o);const g=l*m-u*p;if(0>=g&&0<=p-l&&0<=u-m)return Pl.subVectors(i,a),o=(p-l)/(p-l+(u-m)),t.copy(a).addScaledVector(Pl,o);const h=1/(g+f+c);return n=f*h,o=c*h,t.copy(r).addScaledVector(Rl,n).addScaledVector(Cl,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const Bl={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Ul={h:0,s:0,l:0},Hl={h:0,s:0,l:0};class Fl{constructor(e,t,r){return Object.defineProperty(this,'isColor',{value:!0}),void 0===t&&void 0===r?this.set(e):this.setRGB(e,t,r)}set(e){return e&&e.isColor?this.copy(e):'number'==typeof e?this.setHex(e):'string'==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=gn(e),this.r=(255&e>>16)/255,this.g=(255&e>>8)/255,this.b=(255&e)/255,this}setRGB(e,t,r){return this.r=e,this.g=t,this.b=r,this}setHSL(e,t,r){if(e=gd.euclideanModulo(e,1),t=gd.clamp(t,0,1),r=gd.clamp(r,0,1),0===t)this.r=this.g=this.b=r;else{const a=.5>=r?r*(1+t):r+t-r*t,i=2*r-a;this.r=c(i,a,e+1/3),this.g=c(i,a,e),this.b=c(i,a,e-1/3)}return this}setStyle(e){function t(t){void 0===t||1>parseFloat(t)&&console.warn('THREE.Color: Alpha component of '+e+' will be ignored.')}let r;if(r=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)){let e;const a=r[1],i=r[2];switch(a){case'rgb':case'rgba':if(e=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i))return this.r=yn(255,parseInt(e[1],10))/255,this.g=yn(255,parseInt(e[2],10))/255,this.b=yn(255,parseInt(e[3],10))/255,t(e[4]),this;if(e=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i))return this.r=yn(100,parseInt(e[1],10))/100,this.g=yn(100,parseInt(e[2],10))/100,this.b=yn(100,parseInt(e[3],10))/100,t(e[4]),this;break;case'hsl':case'hsla':if(e=/^(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i)){const r=parseFloat(e[1])/360,a=parseInt(e[2],10)/100,i=parseInt(e[3],10)/100;return t(e[4]),this.setHSL(r,a,i)}}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const e=r[1],t=e.length;if(3===t)return this.r=parseInt(e.charAt(0)+e.charAt(0),16)/255,this.g=parseInt(e.charAt(1)+e.charAt(1),16)/255,this.b=parseInt(e.charAt(2)+e.charAt(2),16)/255,this;if(6===t)return this.r=parseInt(e.charAt(0)+e.charAt(1),16)/255,this.g=parseInt(e.charAt(2)+e.charAt(3),16)/255,this.b=parseInt(e.charAt(4)+e.charAt(5),16)/255,this}return e&&0<e.length?this.setColorName(e):this}setColorName(e){const t=Bl[e];return void 0===t?console.warn('THREE.Color: Unknown color '+e):this.setHex(t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copyGammaToLinear(e,t=2){return this.r=cn(e.r,t),this.g=cn(e.g,t),this.b=cn(e.b,t),this}copyLinearToGamma(e,t=2){const r=0<t?1/t:1;return this.r=cn(e.r,r),this.g=cn(e.g,r),this.b=cn(e.b,r),this}convertGammaToLinear(e){return this.copyGammaToLinear(this,e),this}convertLinearToGamma(e){return this.copyLinearToGamma(this,e),this}copySRGBToLinear(e){return this.r=p(e.r),this.g=p(e.g),this.b=p(e.b),this}copyLinearToSRGB(e){return this.r=u(e.r),this.g=u(e.g),this.b=u(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return('000000'+this.getHex().toString(16)).slice(-6)}getHSL(e){void 0===e&&(console.warn('THREE.Color: .getHSL() target is now required'),e={h:0,s:0,l:0});const t=this.r,r=this.g,a=this.b,i=hn(t,r,a),n=yn(t,r,a);let o,s;const d=(n+i)/2;if(n===i)o=0,s=0;else{const e=i-n;s=.5>=d?e/(i+n):e/(2-i-n),i===t?o=(r-a)/e+(r<a?6:0):i===r?o=(a-t)/e+2:i===a?o=(t-r)/e+4:void 0,o/=6}return e.h=o,e.s=s,e.l=d,e}getStyle(){return'rgb('+(0|255*this.r)+','+(0|255*this.g)+','+(0|255*this.b)+')'}offsetHSL(e,t,r){return this.getHSL(Ul),Ul.h+=e,Ul.s+=t,Ul.l+=r,this.setHSL(Ul.h,Ul.s,Ul.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=hn(0,this.r-e.r),this.g=hn(0,this.g-e.g),this.b=hn(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpHSL(e,t){this.getHSL(Ul),e.getHSL(Hl);const r=gd.lerp(Ul.h,Hl.h,t),a=gd.lerp(Ul.s,Hl.s,t),i=gd.lerp(Ul.l,Hl.l,t);return this.setHSL(r,a,i),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}Fl.NAMES=Bl,Fl.prototype.r=1,Fl.prototype.g=1,Fl.prototype.b=1;class Gl{constructor(e,t,r,a,i,n=0){this.a=e,this.b=t,this.c=r,this.normal=a&&a.isVector3?a:new Sd,this.vertexNormals=Array.isArray(a)?a:[],this.color=i&&i.isColor?i:new Fl,this.vertexColors=Array.isArray(i)?i:[],this.materialIndex=n}clone(){return new this.constructor().copy(this)}copy(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(let t=0,r=e.vertexNormals.length;t<r;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(let t=0,r=e.vertexColors.length;t<r;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this}}let Ol=0;m.prototype=Object.assign(Object.create(a.prototype),{constructor:m,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(e){if(void 0!==e)for(const t in e){const r=e[t];if(void 0===r){console.warn('THREE.Material: \''+t+'\' parameter is undefined.');continue}if('shading'==t){console.warn('THREE.'+this.type+': .shading has been removed. Use the boolean .flatShading instead.'),this.flatShading=r===An;continue}const a=this[t];if(void 0===a){console.warn('THREE.'+this.type+': \''+t+'\' is not a property of this material.');continue}a&&a.isColor?a.set(r):a&&a.isVector3&&r&&r.isVector3?a.copy(r):this[t]=r}},toJSON:function(e){function t(e){const t=[];for(const r in e){const a=e[r];delete a.metadata,t.push(a)}return t}const r=void 0===e||'string'==typeof e;r&&(e={textures:{},images:{}});const a={metadata:{version:4.5,type:'Material',generator:'Material.toJSON'}};if(a.uuid=this.uuid,a.type=this.type,''!==this.name&&(a.name=this.name),this.color&&this.color.isColor&&(a.color=this.color.getHex()),void 0!==this.roughness&&(a.roughness=this.roughness),void 0!==this.metalness&&(a.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(a.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(a.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(a.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(a.specular=this.specular.getHex()),void 0!==this.shininess&&(a.shininess=this.shininess),void 0!==this.clearcoat&&(a.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(a.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(a.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(a.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(a.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,a.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(a.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(a.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(a.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(a.lightMap=this.lightMap.toJSON(e).uuid),this.aoMap&&this.aoMap.isTexture&&(a.aoMap=this.aoMap.toJSON(e).uuid,a.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(a.bumpMap=this.bumpMap.toJSON(e).uuid,a.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(a.normalMap=this.normalMap.toJSON(e).uuid,a.normalMapType=this.normalMapType,a.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(a.displacementMap=this.displacementMap.toJSON(e).uuid,a.displacementScale=this.displacementScale,a.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(a.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(a.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(a.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(a.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(a.envMap=this.envMap.toJSON(e).uuid,a.reflectivity=this.reflectivity,a.refractionRatio=this.refractionRatio,void 0!==this.combine&&(a.combine=this.combine),void 0!==this.envMapIntensity&&(a.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(a.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.size&&(a.size=this.size),void 0!==this.sizeAttenuation&&(a.sizeAttenuation=this.sizeAttenuation),this.blending!==Cn&&(a.blending=this.blending),!0===this.flatShading&&(a.flatShading=this.flatShading),this.side!==En&&(a.side=this.side),this.vertexColors&&(a.vertexColors=!0),1>this.opacity&&(a.opacity=this.opacity),!0===this.transparent&&(a.transparent=this.transparent),a.depthFunc=this.depthFunc,a.depthTest=this.depthTest,a.depthWrite=this.depthWrite,a.stencilWrite=this.stencilWrite,a.stencilWriteMask=this.stencilWriteMask,a.stencilFunc=this.stencilFunc,a.stencilRef=this.stencilRef,a.stencilFuncMask=this.stencilFuncMask,a.stencilFail=this.stencilFail,a.stencilZFail=this.stencilZFail,a.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(a.rotation=this.rotation),!0===this.polygonOffset&&(a.polygonOffset=!0),0!==this.polygonOffsetFactor&&(a.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(a.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(a.linewidth=this.linewidth),void 0!==this.dashSize&&(a.dashSize=this.dashSize),void 0!==this.gapSize&&(a.gapSize=this.gapSize),void 0!==this.scale&&(a.scale=this.scale),!0===this.dithering&&(a.dithering=!0),0<this.alphaTest&&(a.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(a.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(a.wireframe=this.wireframe),1<this.wireframeLinewidth&&(a.wireframeLinewidth=this.wireframeLinewidth),'round'!==this.wireframeLinecap&&(a.wireframeLinecap=this.wireframeLinecap),'round'!==this.wireframeLinejoin&&(a.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(a.morphTargets=!0),!0===this.morphNormals&&(a.morphNormals=!0),!0===this.skinning&&(a.skinning=!0),!1===this.visible&&(a.visible=!1),!1===this.toneMapped&&(a.toneMapped=!1),'{}'!==JSON.stringify(this.userData)&&(a.userData=this.userData),r){const r=t(e.textures),i=t(e.images);0<r.length&&(a.textures=r),0<i.length&&(a.images=i)}return a},clone:function(){return new this.constructor().copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.flatShading=e.flatShading,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let r=null;if(null!==t){const e=t.length;r=Array(e);for(let a=0;a!==e;++a)r[a]=t[a].clone()}return this.clippingPlanes=r,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this},dispose:function(){this.dispatchEvent({type:'dispose'})}}),Object.defineProperty(m.prototype,'needsUpdate',{set:function(e){!0===e&&this.version++}}),f.prototype=Object.create(m.prototype),f.prototype.constructor=f,f.prototype.isMeshBasicMaterial=!0,f.prototype.copy=function(e){return m.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this};const Vl=new Sd,kl=new hd;Object.defineProperty(g.prototype,'needsUpdate',{set:function(e){!0===e&&this.version++}}),Object.assign(g.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this},copyAt:function(e,t,r){e*=this.itemSize,r*=t.itemSize;for(let a=0,i=this.itemSize;a<i;a++)this.array[e+a]=t.array[r+a];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(e){const t=this.array;let r=0;for(let a=0,i=e.length,n;a<i;a++)n=e[a],void 0===n&&(console.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined',a),n=new Fl),t[r++]=n.r,t[r++]=n.g,t[r++]=n.b;return this},copyVector2sArray:function(e){const t=this.array;let r=0;for(let a=0,i=e.length,n;a<i;a++)n=e[a],void 0===n&&(console.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined',a),n=new hd),t[r++]=n.x,t[r++]=n.y;return this},copyVector3sArray:function(e){const t=this.array;let r=0;for(let a=0,i=e.length,n;a<i;a++)n=e[a],void 0===n&&(console.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined',a),n=new Sd),t[r++]=n.x,t[r++]=n.y,t[r++]=n.z;return this},copyVector4sArray:function(e){const t=this.array;let r=0;for(let a=0,i=e.length,n;a<i;a++)n=e[a],void 0===n&&(console.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined',a),n=new bd),t[r++]=n.x,t[r++]=n.y,t[r++]=n.z,t[r++]=n.w;return this},applyMatrix3:function(e){if(2===this.itemSize)for(let t=0,r=this.count;t<r;t++)kl.fromBufferAttribute(this,t),kl.applyMatrix3(e),this.setXY(t,kl.x,kl.y);else if(3===this.itemSize)for(let t=0,r=this.count;t<r;t++)Vl.fromBufferAttribute(this,t),Vl.applyMatrix3(e),this.setXYZ(t,Vl.x,Vl.y,Vl.z);return this},applyMatrix4:function(e){for(let t=0,r=this.count;t<r;t++)Vl.x=this.getX(t),Vl.y=this.getY(t),Vl.z=this.getZ(t),Vl.applyMatrix4(e),this.setXYZ(t,Vl.x,Vl.y,Vl.z);return this},applyNormalMatrix:function(e){for(let t=0,r=this.count;t<r;t++)Vl.x=this.getX(t),Vl.y=this.getY(t),Vl.z=this.getZ(t),Vl.applyNormalMatrix(e),this.setXYZ(t,Vl.x,Vl.y,Vl.z);return this},transformDirection:function(e){for(let t=0,r=this.count;t<r;t++)Vl.x=this.getX(t),Vl.y=this.getY(t),Vl.z=this.getZ(t),Vl.transformDirection(e),this.setXYZ(t,Vl.x,Vl.y,Vl.z);return this},set:function(e,t=0){return this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this},setXYZ:function(e,t,r,a){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=a,this},setXYZW:function(e,t,r,a,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=a,this.array[e+3]=i,this},onUpload:function(e){return this.onUploadCallback=e,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}}),h.prototype=Object.create(g.prototype),h.prototype.constructor=h,y.prototype=Object.create(g.prototype),y.prototype.constructor=y,v.prototype=Object.create(g.prototype),v.prototype.constructor=v,x.prototype=Object.create(g.prototype),x.prototype.constructor=x,_.prototype=Object.create(g.prototype),_.prototype.constructor=_,b.prototype=Object.create(g.prototype),b.prototype.constructor=b,M.prototype=Object.create(g.prototype),M.prototype.constructor=M,S.prototype=Object.create(g.prototype),S.prototype.constructor=S,S.prototype.isFloat16BufferAttribute=!0,E.prototype=Object.create(g.prototype),E.prototype.constructor=E,T.prototype=Object.create(g.prototype),T.prototype.constructor=T;class Wl{constructor(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}computeGroups(e){const t=[];let r,a,i;const n=e.faces;for(a=0;a<n.length;a++){const e=n[a];e.materialIndex!==i&&(i=e.materialIndex,r!==void 0&&(r.count=3*a-r.start,t.push(r)),r={start:3*a,materialIndex:i})}r!==void 0&&(r.count=3*a-r.start,t.push(r)),this.groups=t}fromGeometry(e){const t=e.faces,r=e.vertices,a=e.faceVertexUvs,n=a[0]&&0<a[0].length,o=a[1]&&0<a[1].length,s=e.morphTargets,d=s.length;let l;if(0<d){l=[];for(let e=0;e<d;e++)l[e]={name:s[e].name,data:[]};this.morphTargets.position=l}const p=e.morphNormals,c=p.length;let u;if(0<c){u=[];for(let e=0;e<c;e++)u[e]={name:p[e].name,data:[]};this.morphTargets.normal=u}const m=e.skinIndices,f=e.skinWeights,g=m.length===r.length,h=f.length===r.length;0<r.length&&0===t.length&&console.error('THREE.DirectGeometry: Faceless geometries are not supported.');for(let y=0;y<t.length;y++){const e=t[y];this.vertices.push(r[e.a],r[e.b],r[e.c]);const i=e.vertexNormals;if(3===i.length)this.normals.push(i[0],i[1],i[2]);else{const t=e.normal;this.normals.push(t,t,t)}const v=e.vertexColors;if(3===v.length)this.colors.push(v[0],v[1],v[2]);else{const t=e.color;this.colors.push(t,t,t)}if(!0===n){const e=a[0][y];void 0===e?(console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ',y),this.uvs.push(new hd,new hd,new hd)):this.uvs.push(e[0],e[1],e[2])}if(!0===o){const e=a[1][y];void 0===e?(console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ',y),this.uvs2.push(new hd,new hd,new hd)):this.uvs2.push(e[0],e[1],e[2])}for(let t=0;t<d;t++){const r=s[t].vertices;l[t].data.push(r[e.a],r[e.b],r[e.c])}for(let e=0;e<c;e++){const t=p[e].vertexNormals[y];u[e].data.push(t.a,t.b,t.c)}g&&this.skinIndices.push(m[e.a],m[e.b],m[e.c]),h&&this.skinWeights.push(f[e.a],f[e.b],f[e.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this}}const jl={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:'undefined'==typeof Uint8ClampedArray?Uint8Array:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};let Xl=1;const ql=new Jd,Yl=new l,Zl=new Sd,Jl=new wd,Ql=new wd,Kl=new Sd;A.prototype=Object.assign(Object.create(a.prototype),{constructor:A,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(e){return this.index=Array.isArray(e)?new(65535<w(e)?M:_)(e,1):e,this},getAttribute:function(e){return this.attributes[e]},setAttribute:function(e,t){return this.attributes[e]=t,this},deleteAttribute:function(e){return delete this.attributes[e],this},hasAttribute:function(e){return this.attributes[e]!==void 0},addGroup:function(e,t,r=0){this.groups.push({start:e,count:t,materialIndex:r})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix4:function(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const r=this.attributes.normal;if(void 0!==r){const t=new yd().getNormalMatrix(e);r.applyNormalMatrix(t),r.needsUpdate=!0}const a=this.attributes.tangent;return void 0!==a&&(a.transformDirection(e),a.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(e){return ql.makeRotationX(e),this.applyMatrix4(ql),this},rotateY:function(e){return ql.makeRotationY(e),this.applyMatrix4(ql),this},rotateZ:function(e){return ql.makeRotationZ(e),this.applyMatrix4(ql),this},translate:function(e,t,r){return ql.makeTranslation(e,t,r),this.applyMatrix4(ql),this},scale:function(e,t,r){return ql.makeScale(e,t,r),this.applyMatrix4(ql),this},lookAt:function(e){return Yl.lookAt(e),Yl.updateMatrix(),this.applyMatrix4(Yl.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Zl).negate(),this.translate(Zl.x,Zl.y,Zl.z),this},setFromObject:function(e){const t=e.geometry;if(e.isPoints||e.isLine){const e=new E(3*t.vertices.length,3),r=new E(3*t.colors.length,3);if(this.setAttribute('position',e.copyVector3sArray(t.vertices)),this.setAttribute('color',r.copyColorsArray(t.colors)),t.lineDistances&&t.lineDistances.length===t.vertices.length){const e=new E(t.lineDistances.length,1);this.setAttribute('lineDistance',e.copyArray(t.lineDistances))}null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone())}else e.isMesh&&t&&t.isGeometry&&this.fromGeometry(t);return this},setFromPoints:function(e){const t=[];for(let r=0,a=e.length;r<a;r++){const a=e[r];t.push(a.x,a.y,a.z||0)}return this.setAttribute('position',new E(t,3)),this},updateFromObject:function(e){let t=e.geometry;if(e.isMesh){let e=t.__directGeometry;if(!0===t.elementsNeedUpdate&&(e=void 0,t.elementsNeedUpdate=!1),void 0===e)return this.fromGeometry(t);e.verticesNeedUpdate=t.verticesNeedUpdate,e.normalsNeedUpdate=t.normalsNeedUpdate,e.colorsNeedUpdate=t.colorsNeedUpdate,e.uvsNeedUpdate=t.uvsNeedUpdate,e.groupsNeedUpdate=t.groupsNeedUpdate,t.verticesNeedUpdate=!1,t.normalsNeedUpdate=!1,t.colorsNeedUpdate=!1,t.uvsNeedUpdate=!1,t.groupsNeedUpdate=!1,t=e}if(!0===t.verticesNeedUpdate){const e=this.attributes.position;void 0!==e&&(e.copyVector3sArray(t.vertices),e.needsUpdate=!0),t.verticesNeedUpdate=!1}if(!0===t.normalsNeedUpdate){const e=this.attributes.normal;void 0!==e&&(e.copyVector3sArray(t.normals),e.needsUpdate=!0),t.normalsNeedUpdate=!1}if(!0===t.colorsNeedUpdate){const e=this.attributes.color;void 0!==e&&(e.copyColorsArray(t.colors),e.needsUpdate=!0),t.colorsNeedUpdate=!1}if(t.uvsNeedUpdate){const e=this.attributes.uv;void 0!==e&&(e.copyVector2sArray(t.uvs),e.needsUpdate=!0),t.uvsNeedUpdate=!1}if(t.lineDistancesNeedUpdate){const e=this.attributes.lineDistance;void 0!==e&&(e.copyArray(t.lineDistances),e.needsUpdate=!0),t.lineDistancesNeedUpdate=!1}return t.groupsNeedUpdate&&(t.computeGroups(e.geometry),this.groups=t.groups,t.groupsNeedUpdate=!1),this},fromGeometry:function(e){return e.__directGeometry=new Wl().fromGeometry(e),this.fromDirectGeometry(e.__directGeometry)},fromDirectGeometry:function(e){const t=new Float32Array(3*e.vertices.length);if(this.setAttribute('position',new g(t,3).copyVector3sArray(e.vertices)),0<e.normals.length){const t=new Float32Array(3*e.normals.length);this.setAttribute('normal',new g(t,3).copyVector3sArray(e.normals))}if(0<e.colors.length){const t=new Float32Array(3*e.colors.length);this.setAttribute('color',new g(t,3).copyColorsArray(e.colors))}if(0<e.uvs.length){const t=new Float32Array(2*e.uvs.length);this.setAttribute('uv',new g(t,2).copyVector2sArray(e.uvs))}if(0<e.uvs2.length){const t=new Float32Array(2*e.uvs2.length);this.setAttribute('uv2',new g(t,2).copyVector2sArray(e.uvs2))}for(const t in this.groups=e.groups,e.morphTargets){const r=[],a=e.morphTargets[t];for(let e=0,t=a.length;e<t;e++){const t=a[e],i=new E(3*t.data.length,3);i.name=t.name,r.push(i.copyVector3sArray(t.data))}this.morphAttributes[t]=r}if(0<e.skinIndices.length){const t=new E(4*e.skinIndices.length,4);this.setAttribute('skinIndex',t.copyVector4sArray(e.skinIndices))}if(0<e.skinWeights.length){const t=new E(4*e.skinWeights.length,4);this.setAttribute('skinWeight',t.copyVector4sArray(e.skinWeights))}return null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new wd);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new Sd(-Infinity,-Infinity,-Infinity),new Sd(+Infinity,+Infinity,+Infinity));if(void 0===e)this.boundingBox.makeEmpty();else if(this.boundingBox.setFromBufferAttribute(e),t)for(let e=0,r=t.length;e<r;e++){const r=t[e];Jl.setFromBufferAttribute(r),this.morphTargetsRelative?(Kl.addVectors(this.boundingBox.min,Jl.min),this.boundingBox.expandByPoint(Kl),Kl.addVectors(this.boundingBox.max,Jl.max),this.boundingBox.expandByPoint(Kl)):(this.boundingBox.expandByPoint(Jl.min),this.boundingBox.expandByPoint(Jl.max))}(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Od);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new Sd,Infinity);if(e){const r=this.boundingSphere.center;if(Jl.setFromBufferAttribute(e),t)for(let e=0,r=t.length;e<r;e++){const r=t[e];Ql.setFromBufferAttribute(r),this.morphTargetsRelative?(Kl.addVectors(Jl.min,Ql.min),Jl.expandByPoint(Kl),Kl.addVectors(Jl.max,Ql.max),Jl.expandByPoint(Kl)):(Jl.expandByPoint(Ql.min),Jl.expandByPoint(Ql.max))}Jl.getCenter(r);let a=0;for(let t=0,i=e.count;t<i;t++)Kl.fromBufferAttribute(e,t),a=hn(a,r.distanceToSquared(Kl));if(t)for(let n=0,i=t.length;n<i;n++){const i=t[n],o=this.morphTargetsRelative;for(let t=0,n=i.count;t<n;t++)Kl.fromBufferAttribute(i,t),o&&(Zl.fromBufferAttribute(e,t),Kl.add(Zl)),a=hn(a,r.distanceToSquared(Kl))}this.boundingSphere.radius=sn(a),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){const e=this.index,t=this.getAttribute('position');if(t!==void 0){let r=this.getAttribute('normal');if(r===void 0)r=new g(new Float32Array(3*t.count),3),this.setAttribute('normal',r);else for(let e=0,t=r.count;e<t;e++)r.setXYZ(e,0,0,0);const a=new Sd,n=new Sd,o=new Sd,s=new Sd,d=new Sd,l=new Sd,p=new Sd,c=new Sd;if(e)for(let u=0,i=e.count;u<i;u+=3){const i=e.getX(u+0),m=e.getX(u+1),f=e.getX(u+2);a.fromBufferAttribute(t,i),n.fromBufferAttribute(t,m),o.fromBufferAttribute(t,f),p.subVectors(o,n),c.subVectors(a,n),p.cross(c),s.fromBufferAttribute(r,i),d.fromBufferAttribute(r,m),l.fromBufferAttribute(r,f),s.add(p),d.add(p),l.add(p),r.setXYZ(i,s.x,s.y,s.z),r.setXYZ(m,d.x,d.y,d.z),r.setXYZ(f,l.x,l.y,l.z)}else for(let e=0,i=t.count;e<i;e+=3)a.fromBufferAttribute(t,e+0),n.fromBufferAttribute(t,e+1),o.fromBufferAttribute(t,e+2),p.subVectors(o,n),c.subVectors(a,n),p.cross(c),r.setXYZ(e+0,p.x,p.y,p.z),r.setXYZ(e+1,p.x,p.y,p.z),r.setXYZ(e+2,p.x,p.y,p.z);this.normalizeNormals(),r.needsUpdate=!0}},merge:function(e,t){if(!(e&&e.isBufferGeometry))return void console.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.',e);t===void 0&&(t=0,console.warn('THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'));const r=this.attributes;for(const a in r){if(void 0===e.attributes[a])continue;const i=r[a],n=i.array,o=e.attributes[a],s=o.array,d=o.itemSize*t,l=yn(s.length,n.length-d);for(let e=0,t=d;e<l;e++,t++)n[t]=s[e]}return this},normalizeNormals:function(){const e=this.attributes.normal;for(let t=0,r=e.count;t<r;t++)Kl.fromBufferAttribute(e,t),Kl.normalize(),e.setXYZ(t,Kl.x,Kl.y,Kl.z)},toNonIndexed:function(){function e(e,t){const r=e.array,a=e.itemSize,i=e.normalized,n=new r.constructor(t.length*a);let o=0,s=0;for(let d=0,i=t.length;d<i;d++){o=t[d]*a;for(let e=0;e<a;e++)n[s++]=r[o++]}return new g(n,a,i)}if(null===this.index)return console.warn('THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.'),this;const t=new A,r=this.index.array,a=this.attributes;for(const i in a){const n=a[i],o=e(n,r);t.setAttribute(i,o)}const i=this.morphAttributes;for(const a in i){const n=[],o=i[a];for(let t=0,a=o.length;t<a;t++){const a=o[t],i=e(a,r);n.push(i)}t.morphAttributes[a]=n}t.morphTargetsRelative=this.morphTargetsRelative;const n=this.groups;for(let e=0,r=n.length;e<r;e++){const r=n[e];t.addGroup(r.start,r.count,r.materialIndex)}return t},toJSON:function(){const e={metadata:{version:4.5,type:'BufferGeometry',generator:'BufferGeometry.toJSON'}};if(e.uuid=this.uuid,e.type=this.type,''!==this.name&&(e.name=this.name),0<Object.keys(this.userData).length&&(e.userData=this.userData),void 0!==this.parameters){const t=this.parameters;for(const r in t)void 0!==t[r]&&(e[r]=t[r]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const r=this.attributes;for(const t in r){const a=r[t],i=a.toJSON(e.data);''!==a.name&&(i.name=a.name),e.data.attributes[t]=i}const a={};let i=!1;for(const t in this.morphAttributes){const r=this.morphAttributes[t],n=[];for(let t=0,a=r.length;t<a;t++){const a=r[t],i=a.toJSON(e.data);''!==a.name&&(i.name=a.name),n.push(i)}0<n.length&&(a[t]=n,i=!0)}i&&(e.data.morphAttributes=a,e.data.morphTargetsRelative=this.morphTargetsRelative);const n=this.groups;0<n.length&&(e.data.groups=JSON.parse(JSON.stringify(n)));const o=this.boundingSphere;return null!==o&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e},clone:function(){return new A().copy(this)},copy:function(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const r=e.index;null!==r&&this.setIndex(r.clone(t));const a=e.attributes;for(const r in a){const e=a[r];this.setAttribute(r,e.clone(t))}const i=e.morphAttributes;for(const r in i){const e=[],a=i[r];for(let r=0,i=a.length;r<i;r++)e.push(a[r].clone(t));this.morphAttributes[r]=e}this.morphTargetsRelative=e.morphTargetsRelative;const n=e.groups;for(let t=0,r=n.length;t<r;t++){const e=n[t];this.addGroup(e.start,e.count,e.materialIndex)}const o=e.boundingBox;null!==o&&(this.boundingBox=o.clone());const s=e.boundingSphere;return null!==s&&(this.boundingSphere=s.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this},dispose:function(){this.dispatchEvent({type:'dispose'})}});const $l=new Jd,ep=new Zd,tp=new Od,rp=new Sd,ap=new Sd,ip=new Sd,np=new Sd,op=new Sd,sp=new Sd,dp=new Sd,lp=new Sd,pp=new Sd,cp=new hd,up=new hd,mp=new hd,fp=new Sd,gp=new Sd;R.prototype=Object.assign(Object.create(l.prototype),{constructor:R,isMesh:!0,copy:function(e){return l.prototype.copy.call(this,e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,r=Object.keys(t);if(0<r.length){const e=t[r[0]];if(e!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,r=e.length;t<r;t++){const r=e[t].name||t+'';this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=t}}}}else{const t=e.morphTargets;t!==void 0&&0<t.length&&console.error('THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.')}},raycast:function(e,t){const r=this.geometry,n=this.material,a=this.matrixWorld;if(void 0===n)return;if(null===r.boundingSphere&&r.computeBoundingSphere(),tp.copy(r.boundingSphere),tp.applyMatrix4(a),!1===e.ray.intersectsSphere(tp))return;if($l.copy(a).invert(),ep.copy(e.ray).applyMatrix4($l),null!==r.boundingBox&&!1===ep.intersectsBox(r.boundingBox))return;let o;if(r.isBufferGeometry){const s=r.index,d=r.attributes.position,l=r.morphAttributes.position,p=r.morphTargetsRelative,u=r.attributes.uv,m=r.attributes.uv2,a=r.groups,c=r.drawRange;if(null!==s){if(Array.isArray(n))for(let r=0,i=a.length;r<i;r++){const i=a[r],f=n[i.materialIndex],g=hn(i.start,c.start),h=yn(i.start+i.count,c.start+c.count);for(let r=g;r<h;r+=3){const n=s.getX(r),a=s.getX(r+1),g=s.getX(r+2);o=P(this,f,e,ep,d,l,p,u,m,n,a,g),o&&(o.faceIndex=gn(r/3),o.face.materialIndex=i.materialIndex,t.push(o))}}else{const r=hn(0,c.start),a=yn(s.count,c.start+c.count);for(let f=r;f<a;f+=3){const r=s.getX(f),a=s.getX(f+1),i=s.getX(f+2);o=P(this,n,e,ep,d,l,p,u,m,r,a,i),o&&(o.faceIndex=gn(f/3),t.push(o))}}}else if(void 0!==d)if(Array.isArray(n))for(let r=0,i=a.length;r<i;r++){const i=a[r],s=n[i.materialIndex],f=hn(i.start,c.start),g=yn(i.start+i.count,c.start+c.count);for(let r=f;r<g;r+=3){const n=r,a=r+1,f=r+2;o=P(this,s,e,ep,d,l,p,u,m,n,a,f),o&&(o.faceIndex=gn(r/3),o.face.materialIndex=i.materialIndex,t.push(o))}}else{const r=hn(0,c.start),a=yn(d.count,c.start+c.count);for(let s=r;s<a;s+=3){const r=s,a=s+1,i=s+2;o=P(this,n,e,ep,d,l,p,u,m,r,a,i),o&&(o.faceIndex=gn(s/3),t.push(o))}}}else if(r.isGeometry){const a=Array.isArray(n),i=r.vertices,s=r.faces;let d;const l=r.faceVertexUvs[0];0<l.length&&(d=l);for(let r=0,l=s.length;r<l;r++){const l=s[r],p=a?n[l.materialIndex]:n;if(void 0===p)continue;const c=i[l.a],u=i[l.b],m=i[l.c];if(o=C(this,p,e,ep,c,u,m,fp),o){if(d&&d[r]){const e=d[r];cp.copy(e[0]),up.copy(e[1]),mp.copy(e[2]),o.uv=zl.getUV(fp,c,u,m,cp,up,mp,new hd)}o.face=l,o.faceIndex=r,t.push(o)}}}}});class hp extends A{constructor(e=1,t=1,r=1,a=1,i=1,n=1){function o(e,t,r,a,i,n,o,u,g,h,y){const v=g+1;let _=0,x=0;const b=new Sd;for(let s=0;s<h+1;s++){const l=s*(o/h)-o/2;for(let o=0;o<v;o++){const m=o*(n/g)-n/2;b[e]=m*a,b[t]=l*i,b[r]=u/2,d.push(b.x,b.y,b.z),b[e]=0,b[t]=0,b[r]=0<u?1:-1,p.push(b.x,b.y,b.z),c.push(o/g),c.push(1-s/h),_+=1}}for(let s=0;s<h;s++)for(let e=0;e<g;e++){const t=m+e+v*s,r=m+e+v*(s+1),a=m+(e+1)+v*(s+1),i=m+(e+1)+v*s;l.push(t,r,i),l.push(r,a,i),x+=6}s.addGroup(f,x,y),f+=x,m+=_}super(),this.type='BoxBufferGeometry',this.parameters={width:e,height:t,depth:r,widthSegments:a,heightSegments:i,depthSegments:n};const s=this;a=gn(a),i=gn(i),n=gn(n);const l=[],d=[],p=[],c=[];let m=0,f=0;o('z','y','x',-1,-1,r,t,e,n,i,0),o('z','y','x',1,-1,r,t,-e,n,i,1),o('x','z','y',1,1,e,r,t,a,n,2),o('x','z','y',1,-1,e,r,-t,a,n,3),o('x','y','z',1,-1,e,t,r,a,i,4),o('x','y','z',-1,-1,e,t,-r,a,i,5),this.setIndex(l),this.setAttribute('position',new E(d,3)),this.setAttribute('normal',new E(p,3)),this.setAttribute('uv',new E(c,2))}}const yp={clone:I,merge:N};var vp='void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}',xp='void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}';D.prototype=Object.create(m.prototype),D.prototype.constructor=D,D.prototype.isShaderMaterial=!0,D.prototype.copy=function(e){return m.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=I(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this},D.prototype.toJSON=function(e){const t=m.prototype.toJSON.call(this,e);for(const r in t.glslVersion=this.glslVersion,t.uniforms={},this.uniforms){const a=this.uniforms[r],i=a.value;t.uniforms[r]=i&&i.isTexture?{type:'t',value:i.toJSON(e).uuid}:i&&i.isColor?{type:'c',value:i.getHex()}:i&&i.isVector2?{type:'v2',value:i.toArray()}:i&&i.isVector3?{type:'v3',value:i.toArray()}:i&&i.isVector4?{type:'v4',value:i.toArray()}:i&&i.isMatrix3?{type:'m3',value:i.toArray()}:i&&i.isMatrix4?{type:'m4',value:i.toArray()}:{value:i}}0<Object.keys(this.defines).length&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const r={};for(const t in this.extensions)!0===this.extensions[t]&&(r[t]=!0);return 0<Object.keys(r).length&&(t.extensions=r),t},z.prototype=Object.assign(Object.create(l.prototype),{constructor:z,isCamera:!0,copy:function(e,t){return l.prototype.copy.call(this,e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this},getWorldDirection:function(t){t===void 0&&(console.warn('THREE.Camera: .getWorldDirection() target is now required'),t=new Sd),this.updateWorldMatrix(!0,!1);const r=this.matrixWorld.elements;return t.set(-r[8],-r[9],-r[10]).normalize()},updateMatrixWorld:function(e){l.prototype.updateMatrixWorld.call(this,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()},updateWorldMatrix:function(e,t){l.prototype.updateWorldMatrix.call(this,e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()},clone:function(){return new this.constructor().copy(this)}}),B.prototype=Object.assign(Object.create(z.prototype),{constructor:B,isPerspectiveCamera:!0,copy:function(e,t){return z.prototype.copy.call(this,e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this},setFocalLength:function(e){const t=.5*this.getFilmHeight()/e;this.fov=2*gd.RAD2DEG*tn(t),this.updateProjectionMatrix()},getFocalLength:function(){const e=en(.5*gd.DEG2RAD*this.fov);return .5*this.getFilmHeight()/e},getEffectiveFOV:function(){return 2*gd.RAD2DEG*tn(en(.5*gd.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*yn(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/hn(this.aspect,1)},setViewOffset:function(e,t,r,a,i,n){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=a,this.view.width=i,this.view.height=n,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const e=this.near;let t=e*en(.5*gd.DEG2RAD*this.fov)/this.zoom,r=2*t,a=this.aspect*r,i=-.5*a;const n=this.view;if(null!==this.view&&this.view.enabled){const e=n.fullWidth,o=n.fullHeight;i+=n.offsetX*a/e,t-=n.offsetY*r/o,a*=n.width/e,r*=n.height/o}const o=this.filmOffset;0!==o&&(i+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+a,t,t-r,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(e){const t=l.prototype.toJSON.call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}});const _p=90,bp=1;U.prototype=Object.create(l.prototype),U.prototype.constructor=U,H.prototype=Object.create(i.prototype),H.prototype.constructor=H,H.prototype.isCubeTexture=!0,Object.defineProperty(H.prototype,'images',{get:function(){return this.image},set:function(e){this.image=e}}),F.prototype=Object.create(o.prototype),F.prototype.constructor=F,F.prototype.isWebGLCubeRenderTarget=!0,F.prototype.fromEquirectangularTexture=function(e,t){this.texture.type=t.type,this.texture.format=jo,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const r={uniforms:{tEquirect:{value:null}},vertexShader:`

			varying vec3 vWorldDirection;

			vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

				return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

			}

			void main() {

				vWorldDirection = transformDirection( position, modelMatrix );

				#include <begin_vertex>
				#include <project_vertex>

			}
		`,fragmentShader:`

			uniform sampler2D tEquirect;

			varying vec3 vWorldDirection;

			#include <common>

			void main() {

				vec3 direction = normalize( vWorldDirection );

				vec2 sampleUV = equirectUv( direction );

				gl_FragColor = texture2D( tEquirect, sampleUV );

			}
		`},a=new hp(5,5,5),i=new D({name:'CubemapFromEquirect',uniforms:I(r.uniforms),vertexShader:r.vertexShader,fragmentShader:r.fragmentShader,side:wn,blending:Rn});i.uniforms.tEquirect.value=t;const n=new R(a,i),o=t.minFilter;t.minFilter===Co&&(t.minFilter=Ao);const s=new U(1,10,this);return s.update(e,n),t.minFilter=o,n.geometry.dispose(),n.material.dispose(),this},F.prototype.clear=function(e,t,r,a){const i=e.getRenderTarget();for(let n=0;6>n;n++)e.setRenderTarget(this,n),e.clear(t,r,a);e.setRenderTarget(i)},G.prototype=Object.create(i.prototype),G.prototype.constructor=G,G.prototype.isDataTexture=!0;const Mp=new Od,Sp=new Sd;class Tp{constructor(e,t,r,a,i,n){this.planes=[e===void 0?new Tl:e,t===void 0?new Tl:t,r===void 0?new Tl:r,a===void 0?new Tl:a,i===void 0?new Tl:i,n===void 0?new Tl:n]}set(e,t,r,a,i,n){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(r),o[3].copy(a),o[4].copy(i),o[5].copy(n),this}clone(){return new this.constructor().copy(this)}copy(e){const t=this.planes;for(let r=0;6>r;r++)t[r].copy(e.planes[r]);return this}setFromProjectionMatrix(e){const t=this.planes,r=e.elements,a=r[0],i=r[1],n=r[2],o=r[3],s=r[4],d=r[5],l=r[6],p=r[7],c=r[8],u=r[9],m=r[10],f=r[11],g=r[12],h=r[13],y=r[14],v=r[15];return t[0].setComponents(o-a,p-s,f-c,v-g).normalize(),t[1].setComponents(o+a,p+s,f+c,v+g).normalize(),t[2].setComponents(o+i,p+d,f+u,v+h).normalize(),t[3].setComponents(o-i,p-d,f-u,v-h).normalize(),t[4].setComponents(o-n,p-l,f-m,v-y).normalize(),t[5].setComponents(o+n,p+l,f+m,v+y).normalize(),this}intersectsObject(e){const t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),Mp.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Mp)}intersectsSprite(e){return Mp.center.set(0,0,0),Mp.radius=.7071067811865476,Mp.applyMatrix4(e.matrixWorld),this.intersectsSphere(Mp)}intersectsSphere(e){const t=this.planes,r=e.center,a=-e.radius;for(let n=0;6>n;n++){const e=t[n].distanceToPoint(r);if(e<a)return!1}return!0}intersectsBox(e){const t=this.planes;for(let r=0;6>r;r++){const a=t[r];if(Sp.x=0<a.normal.x?e.max.x:e.min.x,Sp.y=0<a.normal.y?e.max.y:e.min.y,Sp.z=0<a.normal.z?e.max.z:e.min.z,0>a.distanceToPoint(Sp))return!1}return!0}containsPoint(e){const t=this.planes;for(let r=0;6>r;r++)if(0>t[r].distanceToPoint(e))return!1;return!0}}class Ep extends A{constructor(e=1,t=1,r=1,a=1){super(),this.type='PlaneBufferGeometry',this.parameters={width:e,height:t,widthSegments:r,heightSegments:a};const i=gn(r),n=gn(a),o=i+1,s=[],d=[],l=[],p=[];for(let s=0;s<n+1;s++){const r=s*(t/n)-t/2;for(let t=0;t<o;t++){const a=t*(e/i)-e/2;d.push(a,-r,0),l.push(0,0,1),p.push(t/i),p.push(1-s/n)}}for(let l=0;l<n;l++)for(let e=0;e<i;e++){const t=e+o*l,r=e+o*(l+1),a=e+1+o*(l+1),i=e+1+o*l;s.push(t,r,i),s.push(r,a,i)}this.setIndex(s),this.setAttribute('position',new E(d,3)),this.setAttribute('normal',new E(l,3)),this.setAttribute('uv',new E(p,2))}}const wp={alphamap_fragment:'#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif',alphamap_pars_fragment:'#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif',alphatest_fragment:'#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif',aomap_fragment:'#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif',aomap_pars_fragment:'#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif',begin_vertex:'vec3 transformed = vec3( position );',beginnormal_vertex:'vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif',bsdfs:'vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif',bumpmap_pars_fragment:'#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif',clipping_planes_fragment:'#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif',clipping_planes_pars_fragment:'#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif',clipping_planes_pars_vertex:'#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif',clipping_planes_vertex:'#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif',color_fragment:'#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif',color_pars_fragment:'#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif',color_pars_vertex:'#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif',color_vertex:'#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor.xyz *= color.xyz;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif',common:'#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}',cube_uv_reflection_fragment:'#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif',defaultnormal_vertex:'vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif',displacementmap_pars_vertex:'#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif',displacementmap_vertex:'#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif',emissivemap_fragment:'#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif',emissivemap_pars_fragment:'#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif',encodings_fragment:'gl_FragColor = linearToOutputTexel( gl_FragColor );',encodings_pars_fragment:'\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}',envmap_fragment:'#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif',envmap_common_pars_fragment:'#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif',envmap_pars_fragment:'#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif',envmap_pars_vertex:'#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif',envmap_physical_pars_fragment:'#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif',envmap_vertex:'#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif',fog_vertex:'#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif',fog_pars_vertex:'#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif',fog_fragment:'#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif',fog_pars_fragment:'#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif',gradientmap_pars_fragment:'#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}',lightmap_fragment:'#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif',lightmap_pars_fragment:'#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif',lights_lambert_vertex:'vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif',lights_pars_begin:'uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif',lights_toon_fragment:'ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;',lights_toon_pars_fragment:'varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)',lights_phong_fragment:'BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;',lights_phong_pars_fragment:'varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)',lights_physical_fragment:'PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif',lights_physical_pars_fragment:'struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}',lights_fragment_begin:'\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif',lights_fragment_maps:'#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif',lights_fragment_end:'#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif',logdepthbuf_fragment:'#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif',logdepthbuf_pars_fragment:'#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif',logdepthbuf_pars_vertex:'#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif',logdepthbuf_vertex:'#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif',map_fragment:'#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif',map_pars_fragment:'#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif',map_particle_fragment:'#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif',map_particle_pars_fragment:'#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif',metalnessmap_fragment:'float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif',metalnessmap_pars_fragment:'#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif',morphnormal_vertex:'#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif',morphtarget_pars_vertex:'#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif',morphtarget_vertex:'#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif',normal_fragment_begin:'#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;',normal_fragment_maps:'#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif',normalmap_pars_fragment:'#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tmat3 tsn = mat3( S, T, N );\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif',clearcoat_normal_fragment_begin:'#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif',clearcoat_normal_fragment_maps:'#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\t#endif\n#endif',clearcoat_pars_fragment:'#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif',packing:'vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}',premultiplied_alpha_fragment:'#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif',project_vertex:'vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;',dithering_fragment:'#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif',dithering_pars_fragment:'#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif',roughnessmap_fragment:'float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif',roughnessmap_pars_fragment:'#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif',shadowmap_pars_fragment:'#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif',shadowmap_pars_vertex:'#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif',shadowmap_vertex:'#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif',shadowmask_pars_fragment:'float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}',skinbase_vertex:'#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif',skinning_pars_vertex:'#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif',skinning_vertex:'#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif',skinnormal_vertex:'#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif',specularmap_fragment:'float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif',specularmap_pars_fragment:'#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif',tonemapping_fragment:'#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif',tonemapping_pars_fragment:'#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }',transmissionmap_fragment:'#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif',transmissionmap_pars_fragment:'#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif',uv_pars_fragment:'#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif',uv_pars_vertex:'#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif',uv_vertex:'#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif',uv2_pars_fragment:'#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif',uv2_pars_vertex:'#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif',uv2_vertex:'#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif',worldpos_vertex:'#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif',background_frag:'uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}',background_vert:'varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}',cube_frag:'#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}',cube_vert:'varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}',depth_frag:'#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}',depth_vert:'#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}',distanceRGBA_frag:'#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}',distanceRGBA_vert:'#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}',equirect_frag:'uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}',equirect_vert:'varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}',linedashed_frag:'uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}',linedashed_vert:'uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}',meshbasic_frag:'uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}',meshbasic_vert:'#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}',meshlambert_frag:'uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}',meshlambert_vert:'#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}',meshmatcap_frag:'#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}',meshmatcap_vert:'#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}',meshtoon_frag:'#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}',meshtoon_vert:'#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}',meshphong_frag:'#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}',meshphong_vert:'#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}',meshphysical_frag:'#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}',meshphysical_vert:'#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}',normal_frag:'#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}',normal_vert:'#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}',points_frag:'uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}',points_vert:'uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}',shadow_frag:'uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}',shadow_vert:'#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}',sprite_frag:'uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}',sprite_vert:'uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}'},Lp={common:{diffuse:{value:new Fl(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new yd},uv2Transform:{value:new yd},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new hd(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Fl(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Fl(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new yd}},sprite:{diffuse:{value:new Fl(15658734)},opacity:{value:1},center:{value:new hd(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new yd}}},Ap={basic:{uniforms:N([Lp.common,Lp.specularmap,Lp.envmap,Lp.aomap,Lp.lightmap,Lp.fog]),vertexShader:wp.meshbasic_vert,fragmentShader:wp.meshbasic_frag},lambert:{uniforms:N([Lp.common,Lp.specularmap,Lp.envmap,Lp.aomap,Lp.lightmap,Lp.emissivemap,Lp.fog,Lp.lights,{emissive:{value:new Fl(0)}}]),vertexShader:wp.meshlambert_vert,fragmentShader:wp.meshlambert_frag},phong:{uniforms:N([Lp.common,Lp.specularmap,Lp.envmap,Lp.aomap,Lp.lightmap,Lp.emissivemap,Lp.bumpmap,Lp.normalmap,Lp.displacementmap,Lp.fog,Lp.lights,{emissive:{value:new Fl(0)},specular:{value:new Fl(1118481)},shininess:{value:30}}]),vertexShader:wp.meshphong_vert,fragmentShader:wp.meshphong_frag},standard:{uniforms:N([Lp.common,Lp.envmap,Lp.aomap,Lp.lightmap,Lp.emissivemap,Lp.bumpmap,Lp.normalmap,Lp.displacementmap,Lp.roughnessmap,Lp.metalnessmap,Lp.fog,Lp.lights,{emissive:{value:new Fl(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:wp.meshphysical_vert,fragmentShader:wp.meshphysical_frag},toon:{uniforms:N([Lp.common,Lp.aomap,Lp.lightmap,Lp.emissivemap,Lp.bumpmap,Lp.normalmap,Lp.displacementmap,Lp.gradientmap,Lp.fog,Lp.lights,{emissive:{value:new Fl(0)}}]),vertexShader:wp.meshtoon_vert,fragmentShader:wp.meshtoon_frag},matcap:{uniforms:N([Lp.common,Lp.bumpmap,Lp.normalmap,Lp.displacementmap,Lp.fog,{matcap:{value:null}}]),vertexShader:wp.meshmatcap_vert,fragmentShader:wp.meshmatcap_frag},points:{uniforms:N([Lp.points,Lp.fog]),vertexShader:wp.points_vert,fragmentShader:wp.points_frag},dashed:{uniforms:N([Lp.common,Lp.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:wp.linedashed_vert,fragmentShader:wp.linedashed_frag},depth:{uniforms:N([Lp.common,Lp.displacementmap]),vertexShader:wp.depth_vert,fragmentShader:wp.depth_frag},normal:{uniforms:N([Lp.common,Lp.bumpmap,Lp.normalmap,Lp.displacementmap,{opacity:{value:1}}]),vertexShader:wp.normal_vert,fragmentShader:wp.normal_frag},sprite:{uniforms:N([Lp.sprite,Lp.fog]),vertexShader:wp.sprite_vert,fragmentShader:wp.sprite_frag},background:{uniforms:{uvTransform:{value:new yd},t2D:{value:null}},vertexShader:wp.background_vert,fragmentShader:wp.background_frag},cube:{uniforms:N([Lp.envmap,{opacity:{value:1}}]),vertexShader:wp.cube_vert,fragmentShader:wp.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:wp.equirect_vert,fragmentShader:wp.equirect_frag},distanceRGBA:{uniforms:N([Lp.common,Lp.displacementmap,{referencePosition:{value:new Sd},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:wp.distanceRGBA_vert,fragmentShader:wp.distanceRGBA_frag},shadow:{uniforms:N([Lp.lights,Lp.fog,{color:{value:new Fl(0)},opacity:{value:1}}]),vertexShader:wp.shadow_vert,fragmentShader:wp.shadow_frag}};Ap.physical={uniforms:N([Ap.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new hd(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new Fl(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:wp.meshphysical_vert,fragmentShader:wp.meshphysical_frag},ae.prototype=Object.create(i.prototype),ae.prototype.constructor=ae,ae.prototype.isDataTexture2DArray=!0,ie.prototype=Object.create(i.prototype),ie.prototype.constructor=ie,ie.prototype.isDataTexture3D=!0;const Rp=new i,Cp=new ae,Pp=new ie,Ip=new H,Np=[],Dp=[],zp=new Float32Array(16),Bp=new Float32Array(9),Up=new Float32Array(4);Oe.prototype.updateCache=function(e){const t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),se(t,e)},Ve.prototype.setValue=function(e,t,r){const a=this.seq;for(let o=0,i=a.length;o!==i;++o){const i=a[o];i.setValue(e,t[i.id],r)}};const Hp=/(\w+)(\])?(\[|\.)?/g;je.prototype.setValue=function(e,t,r,a){const i=this.map[t];i!==void 0&&i.setValue(e,r,a)},je.prototype.setOptional=function(e,t,r){const a=t[r];a!==void 0&&this.setValue(e,r,a)},je.upload=function(e,t,r,a){for(let o=0,i=t.length;o!==i;++o){const i=t[o],n=r[i.id];!1!==n.needsUpdate&&i.setValue(e,n.value,a)}},je.seqWithValue=function(e,t){const a=[];for(let r=0,i=e.length;r!==i;++r){const i=e[r];i.id in t&&a.push(i)}return a};let Fp=0;const Gp=/^[ \t]*#include +<([\w\d./]+)>/gm,Op=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Vp=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;let kp=0;At.prototype=Object.create(m.prototype),At.prototype.constructor=At,At.prototype.isMeshDepthMaterial=!0,At.prototype.copy=function(e){return m.prototype.copy.call(this,e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this},Rt.prototype=Object.create(m.prototype),Rt.prototype.constructor=Rt,Rt.prototype.isMeshDistanceMaterial=!0,Rt.prototype.copy=function(e){return m.prototype.copy.call(this,e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this};var Wp='uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}',jp='void main() {\n\tgl_Position = vec4( position, 1.0 );\n}';Dt.prototype=Object.assign(Object.create(B.prototype),{constructor:Dt,isArrayCamera:!0}),zt.prototype=Object.assign(Object.create(l.prototype),{constructor:zt,isGroup:!0}),Object.assign(Bt.prototype,{constructor:Bt,getHandSpace:function(){if(null===this._hand&&(this._hand=new zt,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints=[],this._hand.inputState={pinching:!1},window.XRHand))for(let e=0;e<=window.XRHand.LITTLE_PHALANX_TIP;e++){const e=new zt;e.matrixAutoUpdate=!1,e.visible=!1,this._hand.joints.push(e),this._hand.add(e)}return this._hand},getTargetRaySpace:function(){return null===this._targetRay&&(this._targetRay=new zt,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return null===this._grip&&(this._grip=new zt,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this},disconnect:function(e){return this.dispatchEvent({type:'disconnected',data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this},update:function(e,t,r){let a=null,i=null,n=null;const o=this._targetRay,s=this._grip,d=this._hand;if(e&&'visible-blurred'!==t.session.visibilityState)if(d&&e.hand){n=!0;for(let a=0;a<=window.XRHand.LITTLE_PHALANX_TIP;a++)if(e.hand[a]){const i=t.getJointPose(e.hand[a],r),n=d.joints[a];null!==i&&(n.matrix.fromArray(i.transform.matrix),n.matrix.decompose(n.position,n.rotation,n.scale),n.jointRadius=i.radius),n.visible=null!==i;const o=d.joints[window.XRHand.INDEX_PHALANX_TIP],s=d.joints[window.XRHand.THUMB_PHALANX_TIP],l=o.position.distanceTo(s.position),p=.02,c=.005;d.inputState.pinching&&l>p+c?(d.inputState.pinching=!1,this.dispatchEvent({type:'pinchend',handedness:e.handedness,target:this})):!d.inputState.pinching&&l<=p-c&&(d.inputState.pinching=!0,this.dispatchEvent({type:'pinchstart',handedness:e.handedness,target:this}))}}else null!==o&&(a=t.getPose(e.targetRaySpace,r),null!==a&&(o.matrix.fromArray(a.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale))),null!==s&&e.gripSpace&&(i=t.getPose(e.gripSpace,r),null!==i&&(s.matrix.fromArray(i.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale)));return null!==o&&(o.visible=null!==a),null!==s&&(s.visible=null!==i),null!==d&&(d.visible=null!==n),this}}),Object.assign(Ut.prototype,a.prototype),Ot.prototype=Object.assign(Object.create(Gt.prototype),{constructor:Ot,isWebGL1Renderer:!0});class Xp{constructor(e,t){Object.defineProperty(this,'isFogExp2',{value:!0}),this.name='',this.color=new Fl(e),this.density=t===void 0?25e-5:t}clone(){return new Xp(this.color,this.density)}toJSON(){return{type:'FogExp2',color:this.color.getHex(),density:this.density}}}class qp{constructor(e,t,r){Object.defineProperty(this,'isFog',{value:!0}),this.name='',this.color=new Fl(e),this.near=t===void 0?1:t,this.far=r===void 0?1e3:r}clone(){return new qp(this.color,this.near,this.far)}toJSON(){return{type:'Fog',color:this.color.getHex(),near:this.near,far:this.far}}}class Yp extends l{constructor(){super(),Object.defineProperty(this,'isScene',{value:!0}),this.type='Scene',this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,'undefined'!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe',{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.background&&(t.object.background=this.background.toJSON(e)),null!==this.environment&&(t.object.environment=this.environment.toJSON(e)),null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}Object.defineProperty(Vt.prototype,'needsUpdate',{set:function(e){!0===e&&this.version++}}),Object.assign(Vt.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this},copyAt:function(e,t,r){e*=this.stride,r*=t.stride;for(let a=0,i=this.stride;a<i;a++)this.array[e+a]=t.array[r+a];return this},set:function(e,t=0){return this.array.set(e,t),this},clone:function(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=gd.generateUUID()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),r=new Vt(t,this.stride);return r.setUsage(this.usage),r},onUpload:function(e){return this.onUploadCallback=e,this},toJSON:function(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=gd.generateUUID()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const Zp=new Sd;Object.defineProperties(kt.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(e){this.data.needsUpdate=e}}}),Object.assign(kt.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(e){for(let t=0,r=this.data.count;t<r;t++)Zp.x=this.getX(t),Zp.y=this.getY(t),Zp.z=this.getZ(t),Zp.applyMatrix4(e),this.setXYZ(t,Zp.x,Zp.y,Zp.z);return this},setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this},setXYZ:function(e,t,r,a){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this.data.array[e+2]=a,this},setXYZW:function(e,t,r,a,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this.data.array[e+2]=a,this.data.array[e+3]=i,this},clone:function(e){if(void 0===e){console.log('THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.');const e=[];for(let t=0;t<this.count;t++){const r=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[r+t])}return new g(new this.array.constructor(e),this.itemSize,this.normalized)}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new kt(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(e){if(void 0===e){console.log('THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.');const e=[];for(let t=0;t<this.count;t++){const r=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[r+t])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}),Wt.prototype=Object.create(m.prototype),Wt.prototype.constructor=Wt,Wt.prototype.isSpriteMaterial=!0,Wt.prototype.copy=function(e){return m.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this};let Jp;const Qp=new Sd,Kp=new Sd,$p=new Sd,ec=new hd,tc=new hd,rc=new Jd,ac=new Sd,ic=new Sd,nc=new Sd,oc=new hd,sc=new hd,dc=new hd;jt.prototype=Object.assign(Object.create(l.prototype),{constructor:jt,isSprite:!0,raycast:function(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Kp.setFromMatrixScale(this.matrixWorld),rc.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),$p.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&Kp.multiplyScalar(-$p.z);const r=this.material.rotation;let a,i;0!==r&&(i=pn(r),a=ln(r));const n=this.center;Xt(ac.set(-.5,-.5,0),$p,n,Kp,a,i),Xt(ic.set(.5,-.5,0),$p,n,Kp,a,i),Xt(nc.set(.5,.5,0),$p,n,Kp,a,i),oc.set(0,0),sc.set(1,0),dc.set(1,1);let o=e.ray.intersectTriangle(ac,ic,nc,!1,Qp);if(!(null===o&&(Xt(ic.set(-.5,.5,0),$p,n,Kp,a,i),sc.set(0,1),o=e.ray.intersectTriangle(ac,nc,ic,!1,Qp),null===o))){const r=e.ray.origin.distanceTo(Qp);r<e.near||r>e.far||t.push({distance:r,point:Qp.clone(),uv:zl.getUV(Qp,ac,ic,nc,oc,sc,dc,new hd),face:null,object:this})}},copy:function(e){return l.prototype.copy.call(this,e),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}});const lc=new Sd,pc=new Sd;qt.prototype=Object.assign(Object.create(l.prototype),{constructor:qt,isLOD:!0,copy:function(e){l.prototype.copy.call(this,e,!1);const t=e.levels;for(let r=0,a=t.length;r<a;r++){const e=t[r];this.addLevel(e.object.clone(),e.distance)}return this.autoUpdate=e.autoUpdate,this},addLevel:function(e,t=0){t=on(t);const r=this.levels;let a;for(a=0;a<r.length&&!(t<r[a].distance);a++);return r.splice(a,0,{distance:t,object:e}),this.add(e),this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(e){const t=this.levels;if(0<t.length){let r,a;for(r=1,a=t.length;r<a&&!(e<t[r].distance);r++);return t[r-1].object}return null},raycast:function(e,t){const r=this.levels;if(0<r.length){lc.setFromMatrixPosition(this.matrixWorld);const r=e.ray.origin.distanceTo(lc);this.getObjectForDistance(r).raycast(e,t)}},update:function(e){const t=this.levels;if(1<t.length){lc.setFromMatrixPosition(e.matrixWorld),pc.setFromMatrixPosition(this.matrixWorld);const r=lc.distanceTo(pc)/e.zoom;t[0].object.visible=!0;let a,i;for(a=1,i=t.length;a<i&&r>=t[a].distance;a++)t[a-1].object.visible=!1,t[a].object.visible=!0;for(this._currentLevel=a-1;a<i;a++)t[a].object.visible=!1}},toJSON:function(e){const t=l.prototype.toJSON.call(this,e);!1===this.autoUpdate&&(t.object.autoUpdate=!1),t.object.levels=[];const r=this.levels;for(let a=0,i=r.length;a<i;a++){const e=r[a];t.object.levels.push({object:e.object.uuid,distance:e.distance})}return t}});const cc=new Sd,uc=new bd,mc=new bd,fc=new Sd,gc=new Jd;Yt.prototype=Object.assign(Object.create(R.prototype),{constructor:Yt,isSkinnedMesh:!0,copy:function(e){return R.prototype.copy.call(this,e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this},bind:function(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const e=new bd,t=this.geometry.attributes.skinWeight;for(let r=0,a=t.count;r<a;r++){e.x=t.getX(r),e.y=t.getY(r),e.z=t.getZ(r),e.w=t.getW(r);const a=1/e.manhattanLength();a==Infinity?e.set(1,0,0,0):e.multiplyScalar(a),t.setXYZW(r,e.x,e.y,e.z,e.w)}},updateMatrixWorld:function(e){R.prototype.updateMatrixWorld.call(this,e),'attached'===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():'detached'===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn('THREE.SkinnedMesh: Unrecognized bindMode: '+this.bindMode)},boneTransform:function(e,t){const r=this.skeleton,a=this.geometry;uc.fromBufferAttribute(a.attributes.skinIndex,e),mc.fromBufferAttribute(a.attributes.skinWeight,e),cc.fromBufferAttribute(a.attributes.position,e).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let a=0;4>a;a++){const e=mc.getComponent(a);if(0!==e){const i=uc.getComponent(a);gc.multiplyMatrices(r.bones[i].matrixWorld,r.boneInverses[i]),t.addScaledVector(fc.copy(cc).applyMatrix4(gc),e)}}return t.applyMatrix4(this.bindMatrixInverse)}}),Zt.prototype=Object.assign(Object.create(l.prototype),{constructor:Zt,isBone:!0});const hc=new Jd,yc=new Jd;Object.assign(Jt.prototype,{init:function(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){console.warn('THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.'),this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++)this.boneInverses.push(new Jd)}},calculateInverses:function(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const t=new Jd;this.bones[e]&&t.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(t)}},pose:function(){for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&t.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&(t.parent&&t.parent.isBone?(t.matrix.copy(t.parent.matrixWorld).invert(),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))}},update:function(){const e=this.bones,t=this.boneInverses,r=this.boneMatrices,a=this.boneTexture;for(let a=0,i=e.length;a<i;a++){const i=e[a]?e[a].matrixWorld:yc;hc.multiplyMatrices(i,t[a]),hc.toArray(r,16*a)}null!==a&&(a.needsUpdate=!0)},clone:function(){return new Jt(this.bones,this.boneInverses)},getBoneByName:function(e){for(let t=0,r=this.bones.length;t<r;t++){const r=this.bones[t];if(r.name===e)return r}},dispose:function(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)},fromJSON:function(e,t){this.uuid=e.uuid;for(let r=0,a=e.bones.length;r<a;r++){const a=e.bones[r];let i=t[a];void 0===i&&(console.warn('THREE.Skeleton: No bone found with UUID:',a),i=new Zt),this.bones.push(i),this.boneInverses.push(new Jd().fromArray(e.boneInverses[r]))}return this.init(),this},toJSON:function(){const e={metadata:{version:4.5,type:'Skeleton',generator:'Skeleton.toJSON'},bones:[],boneInverses:[],uuid:this.uuid},t=this.bones,r=this.boneInverses;for(let a=0,i=t.length;a<i;a++){const i=t[a];e.bones.push(i.uuid);const n=r[a];e.boneInverses.push(n.toArray())}return e}});const vc=new Jd,xc=new Jd,_c=[],bc=new R;Qt.prototype=Object.assign(Object.create(R.prototype),{constructor:Qt,isInstancedMesh:!0,copy:function(e){return R.prototype.copy.call(this,e),this.instanceMatrix.copy(e.instanceMatrix),this.count=e.count,this},getColorAt:function(e,t){t.fromArray(this.instanceColor.array,3*e)},getMatrixAt:function(e,t){t.fromArray(this.instanceMatrix.array,16*e)},raycast:function(e,t){const r=this.matrixWorld,a=this.count;if(bc.geometry=this.geometry,bc.material=this.material,void 0!==bc.material)for(let n=0;n<a;n++){this.getMatrixAt(n,vc),xc.multiplyMatrices(r,vc),bc.matrixWorld=xc,bc.raycast(e,_c);for(let e=0,r=_c.length;e<r;e++){const r=_c[e];r.instanceId=n,r.object=this,t.push(r)}_c.length=0}},setColorAt:function(e,t){null===this.instanceColor&&(this.instanceColor=new g(new Float32Array(3*this.count),3)),t.toArray(this.instanceColor.array,3*e)},setMatrixAt:function(e,t){t.toArray(this.instanceMatrix.array,16*e)},updateMorphTargets:function(){},dispose:function(){this.dispatchEvent({type:'dispose'})}}),Kt.prototype=Object.create(m.prototype),Kt.prototype.constructor=Kt,Kt.prototype.isLineBasicMaterial=!0,Kt.prototype.copy=function(e){return m.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.morphTargets=e.morphTargets,this};const Mc=new Sd,Sc=new Sd,Tc=new Jd,Ec=new Zd,wc=new Od;$t.prototype=Object.assign(Object.create(l.prototype),{constructor:$t,isLine:!0,copy:function(e){return l.prototype.copy.call(this,e),this.material=e.material,this.geometry=e.geometry,this},computeLineDistances:function(){const e=this.geometry;if(e.isBufferGeometry){if(null===e.index){const t=e.attributes.position,r=[0];for(let e=1,a=t.count;e<a;e++)Mc.fromBufferAttribute(t,e-1),Sc.fromBufferAttribute(t,e),r[e]=r[e-1],r[e]+=Mc.distanceTo(Sc);e.setAttribute('lineDistance',new E(r,1))}else console.warn('THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');}else if(e.isGeometry){const t=e.vertices,r=e.lineDistances;r[0]=0;for(let e=1,a=t.length;e<a;e++)r[e]=r[e-1],r[e]+=t[e-1].distanceTo(t[e])}return this},raycast:function(e,t){const r=this.geometry,a=this.matrixWorld,i=e.params.Line.threshold;if(null===r.boundingSphere&&r.computeBoundingSphere(),wc.copy(r.boundingSphere),wc.applyMatrix4(a),wc.radius+=i,!1!==e.ray.intersectsSphere(wc)){Tc.copy(a).invert(),Ec.copy(e.ray).applyMatrix4(Tc);const n=i/((this.scale.x+this.scale.y+this.scale.z)/3),o=n*n,s=new Sd,d=new Sd,l=new Sd,p=new Sd,c=this.isLineSegments?2:1;if(r.isBufferGeometry){const a=r.index,i=r.attributes,n=i.position;if(null!==a){const r=a.array;for(let u=0,a=r.length-1;u<a;u+=c){const c=r[u],a=r[u+1];s.fromBufferAttribute(n,c),d.fromBufferAttribute(n,a);const m=Ec.distanceSqToSegment(s,d,p,l);if(m>o)continue;p.applyMatrix4(this.matrixWorld);const f=e.ray.origin.distanceTo(p);f<e.near||f>e.far||t.push({distance:f,point:l.clone().applyMatrix4(this.matrixWorld),index:u,face:null,faceIndex:null,object:this})}}else for(let r=0,a=n.count-1;r<a;r+=c){s.fromBufferAttribute(n,r),d.fromBufferAttribute(n,r+1);const a=Ec.distanceSqToSegment(s,d,p,l);if(a>o)continue;p.applyMatrix4(this.matrixWorld);const c=e.ray.origin.distanceTo(p);c<e.near||c>e.far||t.push({distance:c,point:l.clone().applyMatrix4(this.matrixWorld),index:r,face:null,faceIndex:null,object:this})}}else if(r.isGeometry){const a=r.vertices,n=a.length;for(let r=0;r<n-1;r+=c){const n=Ec.distanceSqToSegment(a[r],a[r+1],p,l);if(n>o)continue;p.applyMatrix4(this.matrixWorld);const s=e.ray.origin.distanceTo(p);s<e.near||s>e.far||t.push({distance:s,point:l.clone().applyMatrix4(this.matrixWorld),index:r,face:null,faceIndex:null,object:this})}}}},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,r=Object.keys(t);if(0<r.length){const e=t[r[0]];if(e!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,r=e.length;t<r;t++){const r=e[t].name||t+'';this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=t}}}}else{const t=e.morphTargets;t!==void 0&&0<t.length&&console.error('THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.')}}});const Lc=new Sd,Ac=new Sd;er.prototype=Object.assign(Object.create($t.prototype),{constructor:er,isLineSegments:!0,computeLineDistances:function(){const e=this.geometry;if(e.isBufferGeometry){if(null===e.index){const t=e.attributes.position,r=[];for(let e=0,a=t.count;e<a;e+=2)Lc.fromBufferAttribute(t,e),Ac.fromBufferAttribute(t,e+1),r[e]=0==e?0:r[e-1],r[e+1]=r[e]+Lc.distanceTo(Ac);e.setAttribute('lineDistance',new E(r,1))}else console.warn('THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');}else if(e.isGeometry){const t=e.vertices,r=e.lineDistances;for(let e=0,a=t.length;e<a;e+=2)Lc.copy(t[e]),Ac.copy(t[e+1]),r[e]=0==e?0:r[e-1],r[e+1]=r[e]+Lc.distanceTo(Ac)}return this}}),tr.prototype=Object.assign(Object.create($t.prototype),{constructor:tr,isLineLoop:!0}),rr.prototype=Object.create(m.prototype),rr.prototype.constructor=rr,rr.prototype.isPointsMaterial=!0,rr.prototype.copy=function(e){return m.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.morphTargets=e.morphTargets,this};const Rc=new Jd,Cc=new Zd,Pc=new Od,Ic=new Sd;ar.prototype=Object.assign(Object.create(l.prototype),{constructor:ar,isPoints:!0,copy:function(e){return l.prototype.copy.call(this,e),this.material=e.material,this.geometry=e.geometry,this},raycast:function(e,t){const r=this.geometry,n=this.matrixWorld,a=e.params.Points.threshold;if(null===r.boundingSphere&&r.computeBoundingSphere(),Pc.copy(r.boundingSphere),Pc.applyMatrix4(n),Pc.radius+=a,!1!==e.ray.intersectsSphere(Pc)){Rc.copy(n).invert(),Cc.copy(e.ray).applyMatrix4(Rc);const i=a/((this.scale.x+this.scale.y+this.scale.z)/3),o=i*i;if(r.isBufferGeometry){const a=r.index,i=r.attributes,s=i.position;if(null!==a){const r=a.array;for(let d=0,a=r.length;d<a;d++){const i=r[d];Ic.fromBufferAttribute(s,i),ir(Ic,i,o,n,e,t,this)}}else for(let r=0,a=s.count;r<a;r++)Ic.fromBufferAttribute(s,r),ir(Ic,r,o,n,e,t,this)}else{const a=r.vertices;for(let r=0,i=a.length;r<i;r++)ir(a[r],r,o,n,e,t,this)}}},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,r=Object.keys(t);if(0<r.length){const e=t[r[0]];if(e!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,r=e.length;t<r;t++){const r=e[t].name||t+'';this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=t}}}}else{const t=e.morphTargets;t!==void 0&&0<t.length&&console.error('THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.')}}}),nr.prototype=Object.assign(Object.create(i.prototype),{constructor:nr,clone:function(){return new this.constructor(this.image).copy(this)},isVideoTexture:!0,update:function(){const e=this.image,t='requestVideoFrameCallback'in e;!1==t&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}),or.prototype=Object.create(i.prototype),or.prototype.constructor=or,or.prototype.isCompressedTexture=!0,sr.prototype=Object.create(i.prototype),sr.prototype.constructor=sr,sr.prototype.isCanvasTexture=!0,dr.prototype=Object.create(i.prototype),dr.prototype.constructor=dr,dr.prototype.isDepthTexture=!0;let Nc=0;const Dc=new Jd,zc=new l,Bc=new Sd;lr.prototype=Object.assign(Object.create(a.prototype),{constructor:lr,isGeometry:!0,applyMatrix4:function(e){const t=new yd().getNormalMatrix(e);for(let t=0,r=this.vertices.length;t<r;t++){const r=this.vertices[t];r.applyMatrix4(e)}for(let r=0,a=this.faces.length;r<a;r++){const e=this.faces[r];e.normal.applyMatrix3(t).normalize();for(let r=0,a=e.vertexNormals.length;r<a;r++)e.vertexNormals[r].applyMatrix3(t).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(e){return Dc.makeRotationX(e),this.applyMatrix4(Dc),this},rotateY:function(e){return Dc.makeRotationY(e),this.applyMatrix4(Dc),this},rotateZ:function(e){return Dc.makeRotationZ(e),this.applyMatrix4(Dc),this},translate:function(e,t,r){return Dc.makeTranslation(e,t,r),this.applyMatrix4(Dc),this},scale:function(e,t,r){return Dc.makeScale(e,t,r),this.applyMatrix4(Dc),this},lookAt:function(e){return zc.lookAt(e),zc.updateMatrix(),this.applyMatrix4(zc.matrix),this},fromBufferGeometry:function(e){function t(e,t,a,i){const n=void 0===s?[]:[r.colors[e].clone(),r.colors[t].clone(),r.colors[a].clone()],p=void 0===o?[]:[new Sd().fromBufferAttribute(o,e),new Sd().fromBufferAttribute(o,t),new Sd().fromBufferAttribute(o,a)],c=new Gl(e,t,a,p,n,i);r.faces.push(c),void 0!==d&&r.faceVertexUvs[0].push([new hd().fromBufferAttribute(d,e),new hd().fromBufferAttribute(d,t),new hd().fromBufferAttribute(d,a)]),void 0!==l&&r.faceVertexUvs[1].push([new hd().fromBufferAttribute(l,e),new hd().fromBufferAttribute(l,t),new hd().fromBufferAttribute(l,a)])}const r=this,a=null===e.index?void 0:e.index,i=e.attributes;if(void 0===i.position)return console.error('THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion.'),this;const n=i.position,o=i.normal,s=i.color,d=i.uv,l=i.uv2;void 0!==l&&(this.faceVertexUvs[1]=[]);for(let t=0;t<n.count;t++)r.vertices.push(new Sd().fromBufferAttribute(n,t)),void 0!==s&&r.colors.push(new Fl().fromBufferAttribute(s,t));const p=e.groups;if(0<p.length)for(let e=0;e<p.length;e++){const r=p[e],i=r.start,n=r.count;for(let e=i;e<i+n;e+=3)void 0===a?t(e,e+1,e+2,r.materialIndex):t(a.getX(e),a.getX(e+1),a.getX(e+2),r.materialIndex)}else if(void 0!==a)for(let e=0;e<a.count;e+=3)t(a.getX(e),a.getX(e+1),a.getX(e+2));else for(let e=0;e<n.count;e+=3)t(e,e+1,e+2);return this.computeFaceNormals(),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Bc).negate(),this.translate(Bc.x,Bc.y,Bc.z),this},normalize:function(){this.computeBoundingSphere();const e=this.boundingSphere.center,t=this.boundingSphere.radius,r=0===t?1:1/t,a=new Jd;return a.set(r,0,0,-r*e.x,0,r,0,-r*e.y,0,0,r,-r*e.z,0,0,0,1),this.applyMatrix4(a),this},computeFaceNormals:function(){const e=new Sd,t=new Sd;for(let r=0,a=this.faces.length;r<a;r++){const a=this.faces[r],i=this.vertices[a.a],n=this.vertices[a.b],o=this.vertices[a.c];e.subVectors(o,n),t.subVectors(i,n),e.cross(t),e.normalize(),a.normal.copy(e)}},computeVertexNormals:function(e=!0){const t=Array(this.vertices.length);for(let r=0,a=this.vertices.length;r<a;r++)t[r]=new Sd;if(e){const e=new Sd,r=new Sd;for(let a=0,i=this.faces.length;a<i;a++){const i=this.faces[a],n=this.vertices[i.a],o=this.vertices[i.b],s=this.vertices[i.c];e.subVectors(s,o),r.subVectors(n,o),e.cross(r),t[i.a].add(e),t[i.b].add(e),t[i.c].add(e)}}else{this.computeFaceNormals();for(let e=0,r=this.faces.length;e<r;e++){const r=this.faces[e];t[r.a].add(r.normal),t[r.b].add(r.normal),t[r.c].add(r.normal)}}for(let r=0,a=this.vertices.length;r<a;r++)t[r].normalize();for(let r=0,a=this.faces.length;r<a;r++){const e=this.faces[r],a=e.vertexNormals;3===a.length?(a[0].copy(t[e.a]),a[1].copy(t[e.b]),a[2].copy(t[e.c])):(a[0]=t[e.a].clone(),a[1]=t[e.b].clone(),a[2]=t[e.c].clone())}0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){this.computeFaceNormals();for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e],r=t.vertexNormals;3===r.length?(r[0].copy(t.normal),r[1].copy(t.normal),r[2].copy(t.normal)):(r[0]=t.normal.clone(),r[1]=t.normal.clone(),r[2]=t.normal.clone())}0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e];t.__originalFaceNormal?t.__originalFaceNormal.copy(t.normal):t.__originalFaceNormal=t.normal.clone(),t.__originalVertexNormals||(t.__originalVertexNormals=[]);for(let e=0,r=t.vertexNormals.length;e<r;e++)t.__originalVertexNormals[e]?t.__originalVertexNormals[e].copy(t.vertexNormals[e]):t.__originalVertexNormals[e]=t.vertexNormals[e].clone()}const e=new lr;e.faces=this.faces;for(let t=0,r=this.morphTargets.length;t<r;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];const e=this.morphNormals[t].faceNormals,r=this.morphNormals[t].vertexNormals;for(let t=0,a=this.faces.length;t<a;t++){const t=new Sd,a={a:new Sd,b:new Sd,c:new Sd};e.push(t),r.push(a)}}const r=this.morphNormals[t];e.vertices=this.morphTargets[t].vertices,e.computeFaceNormals(),e.computeVertexNormals();for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e],a=r.faceNormals[e],i=r.vertexNormals[e];a.copy(t.normal),i.a.copy(t.vertexNormals[0]),i.b.copy(t.vertexNormals[1]),i.c.copy(t.vertexNormals[2])}}for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e];t.normal=t.__originalFaceNormal,t.vertexNormals=t.__originalVertexNormals}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new wd),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Od),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,r=0){if(!(e&&e.isGeometry))return void console.error('THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.',e);let a;const n=this.vertices.length,o=this.vertices,s=e.vertices,d=this.faces,l=e.faces,p=this.colors,c=e.colors;t!==void 0&&(a=new yd().getNormalMatrix(t));for(let a=0,i=s.length;a<i;a++){const e=s[a],r=e.clone();t!==void 0&&r.applyMatrix4(t),o.push(r)}for(let a=0,i=c.length;a<i;a++)p.push(c[a].clone());for(let o=0,i=l.length;o<i;o++){const e=l[o];let t,i;const s=e.vertexNormals,p=e.vertexColors,c=new Gl(e.a+n,e.b+n,e.c+n);c.normal.copy(e.normal),a!==void 0&&c.normal.applyMatrix3(a).normalize();for(let e=0,r=s.length;e<r;e++)t=s[e].clone(),void 0!==a&&t.applyMatrix3(a).normalize(),c.vertexNormals.push(t);c.color.copy(e.color);for(let e=0,t=p.length;e<t;e++)i=p[e],c.vertexColors.push(i.clone());c.materialIndex=e.materialIndex+r,d.push(c)}for(let a=0,i=e.faceVertexUvs.length;a<i;a++){const t=e.faceVertexUvs[a];this.faceVertexUvs[a]===void 0&&(this.faceVertexUvs[a]=[]);for(let e=0,r=t.length;e<r;e++){const r=t[e],i=[];for(let e=0,t=r.length;e<t;e++)i.push(r[e].clone());this.faceVertexUvs[a].push(i)}}},mergeMesh:function(e){return e&&e.isMesh?void(e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix)):void console.error('THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.',e)},mergeVertices:function(e=4){const t={},r=[],a=[],n=cn(10,e);for(let o=0,i=this.vertices.length;o<i;o++){const e=this.vertices[o],i=dn(e.x*n)+'_'+dn(e.y*n)+'_'+dn(e.z*n);void 0===t[i]?(t[i]=o,r.push(this.vertices[o]),a[o]=r.length-1):a[o]=a[t[i]]}const o=[];for(let t=0,r=this.faces.length;t<r;t++){const e=this.faces[t];e.a=a[e.a],e.b=a[e.b],e.c=a[e.c];const r=[e.a,e.b,e.c];for(let e=0;3>e;e++)if(r[e]===r[(e+1)%3]){o.push(t);break}}for(let t=o.length-1;0<=t;t--){const e=o[t];this.faces.splice(e,1);for(let t=0,r=this.faceVertexUvs.length;t<r;t++)this.faceVertexUvs[t].splice(e,1)}const i=this.vertices.length-r.length;return this.vertices=r,i},setFromPoints:function(e){this.vertices=[];for(let t=0,r=e.length;t<r;t++){const r=e[t];this.vertices.push(new Sd(r.x,r.y,r.z||0))}return this},sortFacesByMaterialIndex:function(){const e=this.faces,t=e.length;for(let r=0;r<t;r++)e[r]._id=r;e.sort(function(e,t){return e.materialIndex-t.materialIndex});const r=this.faceVertexUvs[0],a=this.faceVertexUvs[1];let n,o;r&&r.length===t&&(n=[]),a&&a.length===t&&(o=[]);for(let s=0;s<t;s++){const t=e[s]._id;n&&n.push(r[t]),o&&o.push(a[t])}n&&(this.faceVertexUvs[0]=n),o&&(this.faceVertexUvs[1]=o)},toJSON:function(){function e(e,t,r){return r?e|1<<t:e&~(1<<t)}function t(e){const t=e.x.toString()+e.y.toString()+e.z.toString();return void 0===d[t]?(d[t]=s.length/3,s.push(e.x,e.y,e.z),d[t]):d[t]}function r(e){const t=e.r.toString()+e.g.toString()+e.b.toString();return void 0===p[t]?(p[t]=l.length,l.push(e.getHex()),p[t]):p[t]}function a(e){const t=e.x.toString()+e.y.toString();return void 0===u[t]?(u[t]=c.length/2,c.push(e.x,e.y),u[t]):u[t]}const i={metadata:{version:4.5,type:'Geometry',generator:'Geometry.toJSON'}};if(i.uuid=this.uuid,i.type=this.type,''!==this.name&&(i.name=this.name),void 0!==this.parameters){const e=this.parameters;for(const t in e)void 0!==e[t]&&(i[t]=e[t]);return i}const n=[];for(let e=0;e<this.vertices.length;e++){const t=this.vertices[e];n.push(t.x,t.y,t.z)}const o=[],s=[],d={},l=[],p={},c=[],u={};for(let n=0;n<this.faces.length;n++){const i=this.faces[n],s=void 0!==this.faceVertexUvs[0][n],d=0<i.normal.length(),l=0<i.vertexNormals.length,p=1!==i.color.r||1!==i.color.g||1!==i.color.b,c=0<i.vertexColors.length;let u=0;if(u=e(u,0,0),u=e(u,1,!0),u=e(u,2,!1),u=e(u,3,s),u=e(u,4,d),u=e(u,5,l),u=e(u,6,p),u=e(u,7,c),o.push(u),o.push(i.a,i.b,i.c),o.push(i.materialIndex),s){const e=this.faceVertexUvs[0][n];o.push(a(e[0]),a(e[1]),a(e[2]))}if(d&&o.push(t(i.normal)),l){const e=i.vertexNormals;o.push(t(e[0]),t(e[1]),t(e[2]))}if(p&&o.push(r(i.color)),c){const e=i.vertexColors;o.push(r(e[0]),r(e[1]),r(e[2]))}}return i.data={},i.data.vertices=n,i.data.normals=s,0<l.length&&(i.data.colors=l),0<c.length&&(i.data.uvs=[c]),i.data.faces=o,i},clone:function(){return new lr().copy(this)},copy:function(e){this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;const t=e.vertices;for(let r=0,a=t.length;r<a;r++)this.vertices.push(t[r].clone());const r=e.colors;for(let t=0,a=r.length;t<a;t++)this.colors.push(r[t].clone());const a=e.faces;for(let t=0,r=a.length;t<r;t++)this.faces.push(a[t].clone());for(let t=0,r=e.faceVertexUvs.length;t<r;t++){const r=e.faceVertexUvs[t];void 0===this.faceVertexUvs[t]&&(this.faceVertexUvs[t]=[]);for(let e=0,a=r.length;e<a;e++){const a=r[e],i=[];for(let e=0,t=a.length;e<t;e++){const t=a[e];i.push(t.clone())}this.faceVertexUvs[t].push(i)}}const n=e.morphTargets;for(let t=0,r=n.length;t<r;t++){const e={name:n[t].name};if(void 0!==n[t].vertices){e.vertices=[];for(let r=0,a=n[t].vertices.length;r<a;r++)e.vertices.push(n[t].vertices[r].clone())}if(void 0!==n[t].normals){e.normals=[];for(let r=0,a=n[t].normals.length;r<a;r++)e.normals.push(n[t].normals[r].clone())}this.morphTargets.push(e)}const o=e.morphNormals;for(let t=0,r=o.length;t<r;t++){const e={};if(void 0!==o[t].vertexNormals){e.vertexNormals=[];for(let r=0,a=o[t].vertexNormals.length;r<a;r++){const a=o[t].vertexNormals[r],i={};i.a=a.a.clone(),i.b=a.b.clone(),i.c=a.c.clone(),e.vertexNormals.push(i)}}if(void 0!==o[t].faceNormals){e.faceNormals=[];for(let r=0,a=o[t].faceNormals.length;r<a;r++)e.faceNormals.push(o[t].faceNormals[r].clone())}this.morphNormals.push(e)}const s=e.skinWeights;for(let t=0,r=s.length;t<r;t++)this.skinWeights.push(s[t].clone());const d=e.skinIndices;for(let t=0,r=d.length;t<r;t++)this.skinIndices.push(d[t].clone());const l=e.lineDistances;for(let t=0,r=l.length;t<r;t++)this.lineDistances.push(l[t]);const i=e.boundingBox;null!==i&&(this.boundingBox=i.clone());const p=e.boundingSphere;return null!==p&&(this.boundingSphere=p.clone()),this.elementsNeedUpdate=e.elementsNeedUpdate,this.verticesNeedUpdate=e.verticesNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.lineDistancesNeedUpdate=e.lineDistancesNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:'dispose'})}});class Uc extends A{constructor(e=1,t=8,r=0,a=2*vn){super(),this.type='CircleBufferGeometry',this.parameters={radius:e,segments:t,thetaStart:r,thetaLength:a},t=hn(3,t);const n=[],o=[],d=[],l=[],p=new Sd,c=new hd;o.push(0,0,0),d.push(0,0,1),l.push(.5,.5);for(let n=0,s=3;n<=t;n++,s+=3){const i=r+n/t*a;p.x=e*pn(i),p.y=e*ln(i),o.push(p.x,p.y,p.z),d.push(0,0,1),c.x=(o[s]/e+1)/2,c.y=(o[s+1]/e+1)/2,l.push(c.x,c.y)}for(let o=1;o<=t;o++)n.push(o,o+1,0);this.setIndex(n),this.setAttribute('position',new E(o,3)),this.setAttribute('normal',new E(d,3)),this.setAttribute('uv',new E(l,2))}}class Hc extends A{constructor(e=1,t=1,r=1,a=8,i=1,n=!1,o=0,s=2*vn){function d(){const n=new Sd,d=new Sd;let l=0;for(let l=0;l<=i;l++){const p=[],_=l/i,b=_*(t-e)+e;for(let i=0;i<=a;i++){const l=i/a,u=l*s+o,h=ln(u),x=pn(u);d.x=b*h,d.y=-_*r+y,d.z=b*x,c.push(d.x,d.y,d.z),n.set(h,(t-e)/r,x).normalize(),m.push(n.x,n.y,n.z),f.push(l,1-_),p.push(g++)}h.push(p)}for(let e=0;e<a;e++)for(let t=0;t<i;t++){const r=h[t][e],a=h[t+1][e],i=h[t+1][e+1],n=h[t][e+1];u.push(r,a,n),u.push(a,i,n),l+=6}p.addGroup(v,l,0),v+=l}function l(r){const n=g,i=new hd,d=new Sd;let l=0;const h=!0===r?e:t,_=!0===r?1:-1;for(let e=1;e<=a;e++)c.push(0,y*_,0),m.push(0,_,0),f.push(.5,.5),g++;const b=g;for(let e=0;e<=a;e++){const t=e/a,r=t*s+o,n=pn(r),l=ln(r);d.x=h*l,d.y=y*_,d.z=h*n,c.push(d.x,d.y,d.z),m.push(0,_,0),i.x=.5*n+.5,i.y=.5*l*_+.5,f.push(i.x,i.y),g++}for(let e=0;e<a;e++){const t=n+e,a=b+e;!0===r?u.push(a,a+1,t):u.push(a+1,a,t),l+=3}p.addGroup(v,l,!0===r?1:2),v+=l}super(),this.type='CylinderBufferGeometry',this.parameters={radiusTop:e,radiusBottom:t,height:r,radialSegments:a,heightSegments:i,openEnded:n,thetaStart:o,thetaLength:s};const p=this;a=gn(a),i=gn(i);const u=[],c=[],m=[],f=[];let g=0;const h=[],y=r/2;let v=0;d(),!1===n&&(0<e&&l(!0),0<t&&l(!1)),this.setIndex(u),this.setAttribute('position',new E(c,3)),this.setAttribute('normal',new E(m,3)),this.setAttribute('uv',new E(f,2))}}class Fc extends lr{constructor(e,t,r,a,i,n,o,s){super(),this.type='CylinderGeometry',this.parameters={radiusTop:e,radiusBottom:t,height:r,radialSegments:a,heightSegments:i,openEnded:n,thetaStart:o,thetaLength:s},this.fromBufferGeometry(new Hc(e,t,r,a,i,n,o,s)),this.mergeVertices()}}class Gc extends A{constructor(e,t,r=1,a=0){function n(e,t,r,a){const n=a+1,s=[];for(let o=0;o<=n;o++){s[o]=[];const a=e.clone().lerp(r,o/n),i=t.clone().lerp(r,o/n),d=n-o;for(let e=0;e<=d;e++)s[o][e]=0===e&&o===n?a:a.clone().lerp(i,e/d)}for(let d=0;d<n;d++)for(let e=0;e<2*(n-d)-1;e++){const t=gn(e/2);0==e%2?(o(s[d][t+1]),o(s[d+1][t]),o(s[d][t])):(o(s[d][t+1]),o(s[d+1][t+1]),o(s[d+1][t]))}}function i(){for(let e=0;e<f.length;e+=6){const t=f[e+0],r=f[e+2],a=f[e+4],i=hn(t,r,a),n=yn(t,r,a);.9<i&&.1>n&&(.2>t&&(f[e+0]+=1),.2>r&&(f[e+2]+=1),.2>a&&(f[e+4]+=1))}}function o(e){m.push(e.x,e.y,e.z)}function s(t,r){const a=3*t;r.x=e[a+0],r.y=e[a+1],r.z=e[a+2]}function d(){const e=new Sd,t=new Sd,r=new Sd,a=new Sd,n=new hd,o=new hd,s=new hd;for(let d=0,i=0;d<m.length;d+=9,i+=6){e.set(m[d+0],m[d+1],m[d+2]),t.set(m[d+3],m[d+4],m[d+5]),r.set(m[d+6],m[d+7],m[d+8]),n.set(f[i+0],f[i+1]),o.set(f[i+2],f[i+3]),s.set(f[i+4],f[i+5]),a.copy(e).add(t).add(r).divideScalar(3);const c=p(a);l(n,i+0,e,c),l(o,i+2,t,c),l(s,i+4,r,c)}}function l(e,t,r,a){0>a&&1===e.x&&(f[t]=e.x-1),0===r.x&&0===r.z&&(f[t]=a/2/vn+.5)}function p(e){return nn(e.z,-e.x)}function c(e){return nn(-e.y,sn(e.x*e.x+e.z*e.z))}super(),this.type='PolyhedronBufferGeometry',this.parameters={vertices:e,indices:t,radius:r,detail:a};const m=[],f=[];(function(e){const r=new Sd,a=new Sd,o=new Sd;for(let d=0;d<t.length;d+=3)s(t[d+0],r),s(t[d+1],a),s(t[d+2],o),n(r,a,o,e)})(a),function(e){const t=new Sd;for(let r=0;r<m.length;r+=3)t.x=m[r+0],t.y=m[r+1],t.z=m[r+2],t.normalize().multiplyScalar(e),m[r+0]=t.x,m[r+1]=t.y,m[r+2]=t.z}(r),function(){const e=new Sd;for(let t=0;t<m.length;t+=3){e.x=m[t+0],e.y=m[t+1],e.z=m[t+2];const r=p(e)/2/vn+.5,a=c(e)/vn+.5;f.push(r,1-a)}d(),i()}(),this.setAttribute('position',new E(m,3)),this.setAttribute('normal',new E(m.slice(),3)),this.setAttribute('uv',new E(f,2)),0===a?this.computeVertexNormals():this.normalizeNormals()}}class Oc extends Gc{constructor(e=1,a=0){const i=(1+2.23606797749979)/2,n=1/i;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-i,0,-n,i,0,n,-i,0,n,i,-n,-i,0,-n,i,0,n,-i,0,n,i,0,-i,0,-n,i,0,-n,-i,0,n,i,0,n],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,a),this.type='DodecahedronBufferGeometry',this.parameters={radius:e,detail:a}}}const Vc=new Sd,kc=new Sd,Wc=new Sd,jc=new zl;class Xc extends A{constructor(e,t){super(),this.type='EdgesGeometry',this.parameters={thresholdAngle:t},t=t===void 0?1:t,e.isGeometry&&(e=new A().fromGeometry(e));const r=10000,a=pn(gd.DEG2RAD*t),n=e.getIndex(),o=e.getAttribute('position'),s=n?n.count:o.count,d=[0,0,0],i=['a','b','c'],l=[,,,],p={},c=[];for(let u=0;u<s;u+=3){n?(d[0]=n.getX(u),d[1]=n.getX(u+1),d[2]=n.getX(u+2)):(d[0]=u,d[1]=u+1,d[2]=u+2);const{a:e,b:t,c:s}=jc;if(e.fromBufferAttribute(o,d[0]),t.fromBufferAttribute(o,d[1]),s.fromBufferAttribute(o,d[2]),jc.getNormal(Wc),l[0]=`${dn(e.x*r)},${dn(e.y*r)},${dn(e.z*r)}`,l[1]=`${dn(t.x*r)},${dn(t.y*r)},${dn(t.z*r)}`,l[2]=`${dn(s.x*r)},${dn(s.y*r)},${dn(s.z*r)}`,l[0]!==l[1]&&l[1]!==l[2]&&l[2]!==l[0])for(let e=0;3>e;e++){const t=(e+1)%3,r=l[e],n=l[t],o=jc[i[e]],s=jc[i[t]],u=`${r}_${n}`,m=`${n}_${r}`;m in p&&p[m]?(Wc.dot(p[m].normal)<=a&&(c.push(o.x,o.y,o.z),c.push(s.x,s.y,s.z)),p[m]=null):!(u in p)&&(p[u]={index0:d[e],index1:d[t],normal:Wc.clone()})}}for(const r in p)if(p[r]){const{index0:e,index1:t}=p[r];Vc.fromBufferAttribute(o,e),kc.fromBufferAttribute(o,t),c.push(Vc.x,Vc.y,Vc.z),c.push(kc.x,kc.y,kc.z)}this.setAttribute('position',new E(c,3))}}const qc={triangulate:function(e,t,r){r=r||2;const a=t&&t.length,n=a?t[0]*r:e.length;let i=pr(e,0,n,r,!0);const o=[];if(!i||i.next===i.prev)return o;let s,d,l,p,c,u,m;if(a&&(i=yr(e,t,i,r)),e.length>80*r){s=l=e[0],d=p=e[1];for(let t=r;t<n;t+=r)c=e[t],u=e[t+1],c<s&&(s=c),u<d&&(d=u),c>l&&(l=c),u>p&&(p=u);m=hn(l-s,p-d),m=0===m?0:1/m}return ur(i,o,r,s,d,m),o}},Yc={area:function(e){const t=e.length;let r=0;for(let a=t-1,i=0;i<t;a=i++)r+=e[a].x*e[i].y-e[i].x*e[a].y;return .5*r},isClockWise:function(e){return 0>Yc.area(e)},triangulateShape:function(e,t){const r=[],a=[],n=[];Or(e),Vr(r,e);let o=e.length;t.forEach(Or);for(let n=0;n<t.length;n++)a.push(o),o+=t[n].length,Vr(r,t[n]);const s=qc.triangulate(r,a);for(let r=0;r<s.length;r+=3)n.push(s.slice(r,r+3));return n}};class Zc extends A{constructor(e,t){function r(e){function r(e,t,r){return t||console.error('THREE.ExtrudeGeometry: vec does not exist'),t.clone().multiplyScalar(r).add(e)}function o(e,t,r){let a,i,n;const o=e.x-t.x,s=e.y-t.y,d=r.x-e.x,l=r.y-e.y,p=o*o+s*s;if(on(o*l-s*d)>rn){const c=sn(p),u=sn(d*d+l*l),m=t.x-s/c,f=t.y+o/c,g=r.x-l/u,h=r.y+d/u,y=((g-m)*l-(h-f)*d)/(o*l-s*d);a=m+o*y-e.x,i=f+s*y-e.y;const v=a*a+i*i;if(2>=v)return new hd(a,i);n=sn(v/2)}else{let e=!1;o>rn?d>rn&&(e=!0):o<-rn?d<-rn&&(e=!0):Ki(s)===Ki(l)&&(e=!0),e?(a=-s,i=o,n=sn(p)):(a=o,i=s,n=sn(p/2))}return new hd(a/n,i/n)}function s(){const e=n.length/3;if(v){let e=0,t=U*e;for(let e=0;e<H;e++){const r=z[e];p(r[2]+t,r[1]+t,r[0]+t)}e=h+2*S,t=U*e;for(let e=0;e<H;e++){const r=z[e];p(r[0]+t,r[1]+t,r[2]+t)}}else{for(let e=0;e<H;e++){const t=z[e];p(t[2],t[1],t[0])}for(let e=0;e<H;e++){const t=z[e];p(t[0]+U*h,t[1]+U*h,t[2]+U*h)}}i.addGroup(e,n.length/3-e,0)}function d(e,t){for(let r=e.length;0<=--r;){const a=r;let i=r-1;0>i&&(i=e.length-1);for(let e=0,r=h+2*S;e<r;e++){const r=U*e,n=U*(e+1),o=t+i+r,s=t+i+n;u(t+a+r,o,s,t+a+n)}}}function l(e,t,r){c.push(e),c.push(t),c.push(r)}function p(e,t,r){m(e),m(t),m(r);const a=n.length/3,o=T.generateTopUV(i,n,a-3,a-2,a-1);f(o[0]),f(o[1]),f(o[2])}function u(e,t,r,a){m(e),m(t),m(a),m(t),m(r),m(a);const o=n.length/3,s=T.generateSideWallUV(i,n,o-6,o-3,o-2,o-1);f(s[0]),f(s[1]),f(s[3]),f(s[1]),f(s[2]),f(s[3])}function m(e){n.push(c[3*e+0]),n.push(c[3*e+1]),n.push(c[3*e+2])}function f(e){a.push(e.x),a.push(e.y)}const c=[],g=t.curveSegments===void 0?12:t.curveSegments,h=t.steps===void 0?1:t.steps;let y=t.depth===void 0?100:t.depth,v=!(t.bevelEnabled!==void 0)||t.bevelEnabled,x=t.bevelThickness===void 0?6:t.bevelThickness,_=t.bevelSize===void 0?x-2:t.bevelSize,M=t.bevelOffset===void 0?0:t.bevelOffset,S=t.bevelSegments===void 0?3:t.bevelSegments;const b=t.extrudePath,T=t.UVGenerator===void 0?Jc:t.UVGenerator;t.amount!==void 0&&(console.warn('THREE.ExtrudeBufferGeometry: amount has been renamed to depth.'),y=t.amount);let E=!1,w,L,A,R,C;b&&(w=b.getSpacedPoints(h),E=!0,v=!1,L=b.computeFrenetFrames(h,!1),A=new Sd,R=new Sd,C=new Sd),v||(S=0,x=0,_=0,M=0);const P=e.extractPoints(g);let I=P.shape;const N=P.holes,D=!Yc.isClockWise(I);if(D){I=I.reverse();for(let e=0,t=N.length;e<t;e++){const t=N[e];Yc.isClockWise(t)&&(N[e]=t.reverse())}}const z=Yc.triangulateShape(I,N),B=I;for(let t=0,r=N.length;t<r;t++){const e=N[t];I=I.concat(e)}const U=I.length,H=z.length,F=[];for(let t=0,r=B.length,a=r-1,i=t+1;t<r;t++,a++,i++)a===r&&(a=0),i===r&&(i=0),F[t]=o(B[t],B[a],B[i]);const G=[];let O=F.concat(),V;for(let t=0,r=N.length;t<r;t++){const e=N[t];V=[];for(let t=0,r=e.length,a=r-1,i=t+1;t<r;t++,a++,i++)a===r&&(a=0),i===r&&(i=0),V[t]=o(e[t],e[a],e[i]);G.push(V),O=O.concat(V)}for(let a=0;a<S;a++){const e=a/S,t=x*pn(e*vn/2),n=_*ln(e*vn/2)+M;for(let e=0,a=B.length;e<a;e++){const a=r(B[e],F[e],n);l(a.x,a.y,-t)}for(let e=0,a=N.length;e<a;e++){const a=N[e];V=G[e];for(let e=0,i=a.length;e<i;e++){const i=r(a[e],V[e],n);l(i.x,i.y,-t)}}}const k=_+M;for(let t=0;t<U;t++){const e=v?r(I[t],O[t],k):I[t];E?(R.copy(L.normals[0]).multiplyScalar(e.x),A.copy(L.binormals[0]).multiplyScalar(e.y),C.copy(w[0]).add(R).add(A),l(C.x,C.y,C.z)):l(e.x,e.y,0)}for(let t=1;t<=h;t++)for(let e=0;e<U;e++){const a=v?r(I[e],O[e],k):I[e];E?(R.copy(L.normals[t]).multiplyScalar(a.x),A.copy(L.binormals[t]).multiplyScalar(a.y),C.copy(w[t]).add(R).add(A),l(C.x,C.y,C.z)):l(a.x,a.y,y/h*t)}for(let a=S-1;0<=a;a--){const e=a/S,t=x*pn(e*vn/2),n=_*ln(e*vn/2)+M;for(let e=0,a=B.length;e<a;e++){const a=r(B[e],F[e],n);l(a.x,a.y,y+t)}for(let e=0,a=N.length;e<a;e++){const a=N[e];V=G[e];for(let e=0,i=a.length;e<i;e++){const i=r(a[e],V[e],n);E?l(i.x,i.y+w[h-1].y,w[h-1].x+t):l(i.x,i.y,y+t)}}}s(),function(){const e=n.length/3;let t=0;d(B,t),t+=B.length;for(let e=0,r=N.length;e<r;e++){const r=N[e];d(r,t),t+=r.length}i.addGroup(e,n.length/3-e,1)}()}super(),this.type='ExtrudeBufferGeometry',this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const i=this,n=[],a=[];for(let a=0,i=e.length;a<i;a++){const t=e[a];r(t)}this.setAttribute('position',new E(n,3)),this.setAttribute('uv',new E(a,2)),this.computeVertexNormals()}toJSON(){const e=A.prototype.toJSON.call(this),t=this.parameters.shapes,r=this.parameters.options;return kr(t,r,e)}}const Jc={generateTopUV:function(e,t,r,a,i){const n=t[3*r],o=t[3*r+1],s=t[3*a],d=t[3*a+1],l=t[3*i],p=t[3*i+1];return[new hd(n,o),new hd(s,d),new hd(l,p)]},generateSideWallUV:function(e,t,r,a,i,n){const o=t[3*r],s=t[3*r+1],d=t[3*r+2],l=t[3*a],p=t[3*a+1],c=t[3*a+2],u=t[3*i],m=t[3*i+1],f=t[3*i+2],g=t[3*n],h=t[3*n+1],y=t[3*n+2];return .01>on(s-p)?[new hd(o,1-d),new hd(l,1-c),new hd(u,1-f),new hd(g,1-y)]:[new hd(s,1-d),new hd(p,1-c),new hd(m,1-f),new hd(h,1-y)]}};class Qc extends lr{constructor(e,t){super(),this.type='ExtrudeGeometry',this.parameters={shapes:e,options:t},this.fromBufferGeometry(new Zc(e,t)),this.mergeVertices()}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,r=this.parameters.options;return Wr(t,r,e)}}class Kc extends Gc{constructor(e=1,r=0){const a=(1+2.23606797749979)/2;super([-1,a,0,1,a,0,-1,-a,0,1,-a,0,0,-1,a,0,1,a,0,-1,-a,0,1,-a,a,0,-1,a,0,1,-a,0,-1,-a,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,r),this.type='IcosahedronBufferGeometry',this.parameters={radius:e,detail:r}}}class $c extends A{constructor(e,t=12,r=0,a=2*vn){super(),this.type='LatheBufferGeometry',this.parameters={points:e,segments:t,phiStart:r,phiLength:a},t=gn(t),a=gd.clamp(a,0,2*vn);const n=[],o=[],s=[],d=1/t,l=new Sd,p=new hd;for(let n=0;n<=t;n++){const i=r+n*d*a,c=ln(i),u=pn(i);for(let r=0;r<=e.length-1;r++)l.x=e[r].x*c,l.y=e[r].y,l.z=e[r].x*u,o.push(l.x,l.y,l.z),p.x=n/t,p.y=r/(e.length-1),s.push(p.x,p.y)}for(let o=0;o<t;o++)for(let t=0;t<e.length-1;t++){const r=t+o*e.length,a=r+e.length,i=r+e.length+1,s=r+1;n.push(r,a,s),n.push(a,i,s)}if(this.setIndex(n),this.setAttribute('position',new E(o,3)),this.setAttribute('uv',new E(s,2)),this.computeVertexNormals(),a===2*vn){const r=this.attributes.normal.array,a=new Sd,o=new Sd,s=new Sd,n=3*(t*e.length);for(let t=0,i=0;t<e.length;t++,i+=3)a.x=r[i+0],a.y=r[i+1],a.z=r[i+2],o.x=r[n+i+0],o.y=r[n+i+1],o.z=r[n+i+2],s.addVectors(a,o).normalize(),r[i+0]=r[n+i+0]=s.x,r[i+1]=r[n+i+1]=s.y,r[i+2]=r[n+i+2]=s.z}}}class eu extends Gc{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type='OctahedronBufferGeometry',this.parameters={radius:e,detail:t}}}jr.prototype=Object.create(A.prototype),jr.prototype.constructor=jr,Xr.prototype=Object.create(lr.prototype),Xr.prototype.constructor=Xr;class tu extends A{constructor(e=.5,t=1,r=8,a=1,n=0,o=2*vn){super(),this.type='RingBufferGeometry',this.parameters={innerRadius:e,outerRadius:t,thetaSegments:r,phiSegments:a,thetaStart:n,thetaLength:o},r=hn(3,r),a=hn(1,a);const s=[],d=[],l=[],p=[];let c=e;const i=(t-e)/a,u=new Sd,m=new hd;for(let s=0;s<=a;s++){for(let e=0;e<=r;e++){const a=n+e/r*o;u.x=c*pn(a),u.y=c*ln(a),d.push(u.x,u.y,u.z),l.push(0,0,1),m.x=(u.x/t+1)/2,m.y=(u.y/t+1)/2,p.push(m.x,m.y)}c+=i}for(let i=0;i<a;i++){const e=i*(r+1);for(let t=0;t<r;t++){const a=t+e,i=a+r+1,n=a+r+2,o=a+1;s.push(a,i,o),s.push(i,n,o)}}this.setIndex(s),this.setAttribute('position',new E(d,3)),this.setAttribute('normal',new E(l,3)),this.setAttribute('uv',new E(p,2))}}class ru extends A{constructor(e,t=12){function r(e){const r=a.length/3,i=e.extractPoints(t);let d=i.shape;const p=i.holes;!1===Yc.isClockWise(d)&&(d=d.reverse());for(let t=0,r=p.length;t<r;t++){const e=p[t];!0===Yc.isClockWise(e)&&(p[t]=e.reverse())}const u=Yc.triangulateShape(d,p);for(let t=0,r=p.length;t<r;t++){const e=p[t];d=d.concat(e)}for(let t=0,r=d.length;t<r;t++){const e=d[t];a.push(e.x,e.y,0),o.push(0,0,1),s.push(e.x,e.y)}for(let t=0,a=u.length;t<a;t++){const e=u[t],i=e[0]+r,a=e[1]+r,o=e[2]+r;n.push(i,a,o),l+=3}}super(),this.type='ShapeBufferGeometry',this.parameters={shapes:e,curveSegments:t};const n=[],a=[],o=[],s=[];let d=0,l=0;if(!1===Array.isArray(e))r(e);else for(let t=0;t<e.length;t++)r(e[t]),this.addGroup(d,l,t),d+=l,l=0;this.setIndex(n),this.setAttribute('position',new E(a,3)),this.setAttribute('normal',new E(o,3)),this.setAttribute('uv',new E(s,2))}toJSON(){const e=A.prototype.toJSON.call(this),t=this.parameters.shapes;return qr(t,e)}}class au extends lr{constructor(e,t){super(),this.type='ShapeGeometry','object'==typeof t&&(console.warn('THREE.ShapeGeometry: Options parameter has been removed.'),t=t.curveSegments),this.parameters={shapes:e,curveSegments:t},this.fromBufferGeometry(new ru(e,t)),this.mergeVertices()}toJSON(){const e=lr.prototype.toJSON.call(this),t=this.parameters.shapes;return Yr(t,e)}}class iu extends A{constructor(e=1,t=8,r=6,a=0,i=2*vn,n=0,o=vn){super(),this.type='SphereBufferGeometry',this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:a,phiLength:i,thetaStart:n,thetaLength:o},t=hn(3,gn(t)),r=hn(2,gn(r));const s=yn(n+o,Math.PI);let d=0;const l=[],p=new Sd,c=new Sd,u=[],m=[],f=[],g=[];for(let u=0;u<=r;u++){const h=[],y=u/r;let v=0;0==u&&0==n?v=.5/t:u==r&&s==vn&&(v=-.5/t);for(let r=0;r<=t;r++){const s=r/t;p.x=-e*pn(a+s*i)*ln(n+y*o),p.y=e*pn(n+y*o),p.z=e*ln(a+s*i)*ln(n+y*o),m.push(p.x,p.y,p.z),c.copy(p).normalize(),f.push(c.x,c.y,c.z),g.push(s+v,1-y),h.push(d++)}l.push(h)}for(let p=0;p<r;p++)for(let e=0;e<t;e++){const t=l[p][e+1],a=l[p][e],i=l[p+1][e],o=l[p+1][e+1];(0!==p||0<n)&&u.push(t,a,o),(p!==r-1||s<vn)&&u.push(a,i,o)}this.setIndex(u),this.setAttribute('position',new E(m,3)),this.setAttribute('normal',new E(f,3)),this.setAttribute('uv',new E(g,2))}}class nu extends Gc{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type='TetrahedronBufferGeometry',this.parameters={radius:e,detail:t}}}class ou extends Zc{constructor(e,t={}){const r=t.font;if(!(r&&r.isFont))return console.error('THREE.TextGeometry: font parameter is not an instance of THREE.Font.'),new A;const a=r.generateShapes(e,t.size);t.depth=t.height===void 0?50:t.height,t.bevelThickness===void 0&&(t.bevelThickness=10),t.bevelSize===void 0&&(t.bevelSize=8),t.bevelEnabled===void 0&&(t.bevelEnabled=!1),super(a,t),this.type='TextBufferGeometry'}}class su extends A{constructor(e=1,t=.4,r=8,n=6,a=2*vn){super(),this.type='TorusBufferGeometry',this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:n,arc:a},r=gn(r),n=gn(n);const o=[],s=[],d=[],l=[],p=new Sd,c=new Sd,m=new Sd;for(let o=0;o<=r;o++)for(let f=0;f<=n;f++){const i=f/n*a,u=2*(o/r*vn);c.x=(e+t*pn(u))*pn(i),c.y=(e+t*pn(u))*ln(i),c.z=t*ln(u),s.push(c.x,c.y,c.z),p.x=e*pn(i),p.y=e*ln(i),m.subVectors(c,p).normalize(),d.push(m.x,m.y,m.z),l.push(f/n),l.push(o/r)}for(let s=1;s<=r;s++)for(let e=1;e<=n;e++){const t=(n+1)*s+e-1,r=(n+1)*(s-1)+e-1,a=(n+1)*(s-1)+e,i=(n+1)*s+e;o.push(t,r,i),o.push(r,a,i)}this.setIndex(o),this.setAttribute('position',new E(s,3)),this.setAttribute('normal',new E(d,3)),this.setAttribute('uv',new E(l,2))}}class du extends A{constructor(e=1,t=.4,r=64,n=8,a=2,o=3){function s(e,t,r,a,i){const n=pn(e),o=ln(e),s=r/t*e,d=pn(s);i.x=.5*(a*(2+d))*n,i.y=.5*(a*(2+d)*o),i.z=.5*(a*ln(s))}super(),this.type='TorusKnotBufferGeometry',this.parameters={radius:e,tube:t,tubularSegments:r,radialSegments:n,p:a,q:o},r=gn(r),n=gn(n);const l=[],d=[],c=[],u=[],m=new Sd,f=new Sd,g=new Sd,h=new Sd,y=new Sd,v=new Sd,x=new Sd;for(let l=0;l<=r;++l){const i=2*(l/r*a*vn);s(i,a,o,e,g),s(i+.01,a,o,e,h),v.subVectors(h,g),x.addVectors(h,g),y.crossVectors(v,x),x.crossVectors(y,v),y.normalize(),x.normalize();for(let e=0;e<=n;++e){const a=2*(e/n*vn),i=-t*pn(a),o=t*ln(a);m.x=g.x+(i*x.x+o*y.x),m.y=g.y+(i*x.y+o*y.y),m.z=g.z+(i*x.z+o*y.z),d.push(m.x,m.y,m.z),f.subVectors(m,g).normalize(),c.push(f.x,f.y,f.z),u.push(l/r),u.push(e/n)}}for(let s=1;s<=r;s++)for(let e=1;e<=n;e++){const t=(n+1)*(s-1)+(e-1),r=(n+1)*s+(e-1),a=(n+1)*s+e,i=(n+1)*(s-1)+e;l.push(t,r,i),l.push(r,a,i)}this.setIndex(l),this.setAttribute('position',new E(d,3)),this.setAttribute('normal',new E(c,3)),this.setAttribute('uv',new E(u,2))}}class lu extends A{constructor(e,t=64,r=1,n=8,a=!1){function o(a){u=e.getPointAt(a/t,u);const i=d.normals[a],o=d.binormals[a];for(let e=0;e<=n;e++){const t=2*(e/n*vn),a=ln(t),s=-pn(t);p.x=s*i.x+a*o.x,p.y=s*i.y+a*o.y,p.z=s*i.z+a*o.z,p.normalize(),f.push(p.x,p.y,p.z),l.x=u.x+r*p.x,l.y=u.y+r*p.y,l.z=u.z+r*p.z,m.push(l.x,l.y,l.z)}}function i(){for(let e=1;e<=t;e++)for(let t=1;t<=n;t++){const r=(n+1)*(e-1)+(t-1),a=(n+1)*e+(t-1),i=(n+1)*e+t,o=(n+1)*(e-1)+t;h.push(r,a,o),h.push(a,i,o)}}function s(){for(let e=0;e<=t;e++)for(let r=0;r<=n;r++)c.x=e/t,c.y=r/n,g.push(c.x,c.y)}super(),this.type='TubeBufferGeometry',this.parameters={path:e,tubularSegments:t,radius:r,radialSegments:n,closed:a};const d=e.computeFrenetFrames(t,a);this.tangents=d.tangents,this.normals=d.normals,this.binormals=d.binormals;const l=new Sd,p=new Sd,c=new hd;let u=new Sd;const m=[],f=[],g=[],h=[];(function(){for(let e=0;e<t;e++)o(e);o(!1===a?t:0),s(),i()})(),this.setIndex(h),this.setAttribute('position',new E(m,3)),this.setAttribute('normal',new E(f,3)),this.setAttribute('uv',new E(g,2))}toJSON(){const e=A.prototype.toJSON.call(this);return e.path=this.parameters.path.toJSON(),e}}class pu extends A{constructor(t){super(),this.type='WireframeGeometry';const r=[],e=[0,0],a={},i=['a','b','c'];if(t&&t.isGeometry){const n=t.faces;for(let t=0,r=n.length;t<r;t++){const r=n[t];for(let t=0;3>t;t++){const n=r[i[t]],o=r[i[(t+1)%3]];e[0]=yn(n,o),e[1]=hn(n,o);const s=e[0]+','+e[1];a[s]===void 0&&(a[s]={index1:e[0],index2:e[1]})}}for(const i in a){const n=a[i];let e=t.vertices[n.index1];r.push(e.x,e.y,e.z),e=t.vertices[n.index2],r.push(e.x,e.y,e.z)}}else if(t&&t.isBufferGeometry){const n=new Sd;if(null!==t.index){const i=t.attributes.position,o=t.index;let s=t.groups;0===s.length&&(s=[{start:0,count:o.count,materialIndex:0}]);for(let t=0,r=s.length;t<r;++t){const r=s[t],n=r.start,d=r.count;for(let t=n;t<n+d;t+=3)for(let r=0;3>r;r++){const i=o.getX(t+r),n=o.getX(t+(r+1)%3);e[0]=yn(i,n),e[1]=hn(i,n);const s=e[0]+','+e[1];a[s]===void 0&&(a[s]={index1:e[0],index2:e[1]})}}for(const t in a){const o=a[t];n.fromBufferAttribute(i,o.index1),r.push(n.x,n.y,n.z),n.fromBufferAttribute(i,o.index2),r.push(n.x,n.y,n.z)}}else{const e=t.attributes.position;for(let t=0,a=e.count/3;t<a;t++)for(let a=0;3>a;a++){const i=3*t+a;n.fromBufferAttribute(e,i),r.push(n.x,n.y,n.z);const o=3*t+(a+1)%3;n.fromBufferAttribute(e,o),r.push(n.x,n.y,n.z)}}}this.setAttribute('position',new E(r,3))}}var cu=Object.freeze({__proto__:null,BoxGeometry:class extends lr{constructor(e,t,r,a,i,n){super(),this.type='BoxGeometry',this.parameters={width:e,height:t,depth:r,widthSegments:a,heightSegments:i,depthSegments:n},this.fromBufferGeometry(new hp(e,t,r,a,i,n)),this.mergeVertices()}},BoxBufferGeometry:hp,CircleGeometry:class extends lr{constructor(e,t,r,a){super(),this.type='CircleGeometry',this.parameters={radius:e,segments:t,thetaStart:r,thetaLength:a},this.fromBufferGeometry(new Uc(e,t,r,a)),this.mergeVertices()}},CircleBufferGeometry:Uc,ConeGeometry:class extends Fc{constructor(e,t,r,a,i,n,o){super(0,e,t,r,a,i,n,o),this.type='ConeGeometry',this.parameters={radius:e,height:t,radialSegments:r,heightSegments:a,openEnded:i,thetaStart:n,thetaLength:o}}},ConeBufferGeometry:class extends Hc{constructor(e=1,t=1,r=8,a=1,i=!1,n=0,o=2*vn){super(0,e,t,r,a,i,n,o),this.type='ConeBufferGeometry',this.parameters={radius:e,height:t,radialSegments:r,heightSegments:a,openEnded:i,thetaStart:n,thetaLength:o}}},CylinderGeometry:Fc,CylinderBufferGeometry:Hc,DodecahedronGeometry:class extends lr{constructor(e,t){super(),this.type='DodecahedronGeometry',this.parameters={radius:e,detail:t},this.fromBufferGeometry(new Oc(e,t)),this.mergeVertices()}},DodecahedronBufferGeometry:Oc,EdgesGeometry:Xc,ExtrudeGeometry:Qc,ExtrudeBufferGeometry:Zc,IcosahedronGeometry:class extends lr{constructor(e,t){super(),this.type='IcosahedronGeometry',this.parameters={radius:e,detail:t},this.fromBufferGeometry(new Kc(e,t)),this.mergeVertices()}},IcosahedronBufferGeometry:Kc,LatheGeometry:class extends lr{constructor(e,t,r,a){super(),this.type='LatheGeometry',this.parameters={points:e,segments:t,phiStart:r,phiLength:a},this.fromBufferGeometry(new $c(e,t,r,a)),this.mergeVertices()}},LatheBufferGeometry:$c,OctahedronGeometry:class extends lr{constructor(e,t){super(),this.type='OctahedronGeometry',this.parameters={radius:e,detail:t},this.fromBufferGeometry(new eu(e,t)),this.mergeVertices()}},OctahedronBufferGeometry:eu,ParametricGeometry:Xr,ParametricBufferGeometry:jr,PlaneGeometry:class extends lr{constructor(e,t,r,a){super(),this.type='PlaneGeometry',this.parameters={width:e,height:t,widthSegments:r,heightSegments:a},this.fromBufferGeometry(new Ep(e,t,r,a)),this.mergeVertices()}},PlaneBufferGeometry:Ep,PolyhedronGeometry:class extends lr{constructor(e,t,r,a){super(),this.type='PolyhedronGeometry',this.parameters={vertices:e,indices:t,radius:r,detail:a},this.fromBufferGeometry(new Gc(e,t,r,a)),this.mergeVertices()}},PolyhedronBufferGeometry:Gc,RingGeometry:class extends lr{constructor(e,t,r,a,i,n){super(),this.type='RingGeometry',this.parameters={innerRadius:e,outerRadius:t,thetaSegments:r,phiSegments:a,thetaStart:i,thetaLength:n},this.fromBufferGeometry(new tu(e,t,r,a,i,n)),this.mergeVertices()}},RingBufferGeometry:tu,ShapeGeometry:au,ShapeBufferGeometry:ru,SphereGeometry:class extends lr{constructor(e,t,r,a,i,n,o){super(),this.type='SphereGeometry',this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:a,phiLength:i,thetaStart:n,thetaLength:o},this.fromBufferGeometry(new iu(e,t,r,a,i,n,o)),this.mergeVertices()}},SphereBufferGeometry:iu,TetrahedronGeometry:class extends lr{constructor(e,t){super(),this.type='TetrahedronGeometry',this.parameters={radius:e,detail:t},this.fromBufferGeometry(new nu(e,t)),this.mergeVertices()}},TetrahedronBufferGeometry:nu,TextGeometry:class extends lr{constructor(e,t){super(),this.type='TextGeometry',this.parameters={text:e,parameters:t},this.fromBufferGeometry(new ou(e,t)),this.mergeVertices()}},TextBufferGeometry:ou,TorusGeometry:class extends lr{constructor(e,t,r,a,i){super(),this.type='TorusGeometry',this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:a,arc:i},this.fromBufferGeometry(new su(e,t,r,a,i)),this.mergeVertices()}},TorusBufferGeometry:su,TorusKnotGeometry:class extends lr{constructor(e,t,r,a,i,n,o){super(),this.type='TorusKnotGeometry',this.parameters={radius:e,tube:t,tubularSegments:r,radialSegments:a,p:i,q:n},o!==void 0&&console.warn('THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.'),this.fromBufferGeometry(new du(e,t,r,a,i,n)),this.mergeVertices()}},TorusKnotBufferGeometry:du,TubeGeometry:class extends lr{constructor(e,t,r,a,i,n){super(),this.type='TubeGeometry',this.parameters={path:e,tubularSegments:t,radius:r,radialSegments:a,closed:i},n!==void 0&&console.warn('THREE.TubeGeometry: taper has been removed.');const o=new lu(e,t,r,a,i);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals,this.fromBufferGeometry(o),this.mergeVertices()}},TubeBufferGeometry:lu,WireframeGeometry:pu});Zr.prototype=Object.create(m.prototype),Zr.prototype.constructor=Zr,Zr.prototype.isShadowMaterial=!0,Zr.prototype.copy=function(e){return m.prototype.copy.call(this,e),this.color.copy(e.color),this},Jr.prototype=Object.create(D.prototype),Jr.prototype.constructor=Jr,Jr.prototype.isRawShaderMaterial=!0,Qr.prototype=Object.create(m.prototype),Qr.prototype.constructor=Qr,Qr.prototype.isMeshStandardMaterial=!0,Qr.prototype.copy=function(e){return m.prototype.copy.call(this,e),this.defines={STANDARD:''},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.vertexTangents=e.vertexTangents,this},Kr.prototype=Object.create(Qr.prototype),Kr.prototype.constructor=Kr,Kr.prototype.isMeshPhysicalMaterial=!0,Kr.prototype.copy=function(e){return Qr.prototype.copy.call(this,e),this.defines={STANDARD:'',PHYSICAL:''},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.reflectivity=e.reflectivity,this.sheen=e.sheen?(this.sheen||new Fl).copy(e.sheen):null,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this},$r.prototype=Object.create(m.prototype),$r.prototype.constructor=$r,$r.prototype.isMeshPhongMaterial=!0,$r.prototype.copy=function(e){return m.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},ea.prototype=Object.create(m.prototype),ea.prototype.constructor=ea,ea.prototype.isMeshToonMaterial=!0,ea.prototype.copy=function(e){return m.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},ta.prototype=Object.create(m.prototype),ta.prototype.constructor=ta,ta.prototype.isMeshNormalMaterial=!0,ta.prototype.copy=function(e){return m.prototype.copy.call(this,e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},ra.prototype=Object.create(m.prototype),ra.prototype.constructor=ra,ra.prototype.isMeshLambertMaterial=!0,ra.prototype.copy=function(e){return m.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},aa.prototype=Object.create(m.prototype),aa.prototype.constructor=aa,aa.prototype.isMeshMatcapMaterial=!0,aa.prototype.copy=function(e){return m.prototype.copy.call(this,e),this.defines={MATCAP:''},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},ia.prototype=Object.create(Kt.prototype),ia.prototype.constructor=ia,ia.prototype.isLineDashedMaterial=!0,ia.prototype.copy=function(e){return Kt.prototype.copy.call(this,e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this};var uu=Object.freeze({__proto__:null,ShadowMaterial:Zr,SpriteMaterial:Wt,RawShaderMaterial:Jr,ShaderMaterial:D,PointsMaterial:rr,MeshPhysicalMaterial:Kr,MeshStandardMaterial:Qr,MeshPhongMaterial:$r,MeshToonMaterial:ea,MeshNormalMaterial:ta,MeshLambertMaterial:ra,MeshDepthMaterial:At,MeshDistanceMaterial:Rt,MeshBasicMaterial:f,MeshMatcapMaterial:aa,LineDashedMaterial:ia,LineBasicMaterial:Kt,Material:m});const mu={arraySlice:function(e,t,r){return mu.isTypedArray(e)?new e.constructor(e.subarray(t,void 0===r?e.length:r)):e.slice(t,r)},convertArray:function(e,t,r){return e&&(r||e.constructor!==t)?'number'==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e):e},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){const t=e.length,r=Array(t);for(let a=0;a!==t;++a)r[a]=a;return r.sort(function(t,r){return e[t]-e[r]}),r},sortedArray:function(e,t,r){const a=e.length,i=new e.constructor(a);for(let n=0,o=0;o!==a;++n){const a=r[n]*t;for(let r=0;r!==t;++r)i[o++]=e[a+r]}return i},flattenJSON:function(e,t,r,a){let n=1,i=e[0];for(;i!==void 0&&i[a]===void 0;)i=e[n++];if(void 0===i)return;let o=i[a];if(void 0!==o)if(Array.isArray(o))do o=i[a],void 0!==o&&(t.push(i.time),r.push.apply(r,o)),i=e[n++];while(void 0!==i);else if(void 0!==o.toArray)do o=i[a],void 0!==o&&(t.push(i.time),o.toArray(r,r.length)),i=e[n++];while(void 0!==i);else do o=i[a],void 0!==o&&(t.push(i.time),r.push(o)),i=e[n++];while(void 0!==i)},subclip:function(e,t,r,a,i=30){const n=e.clone();n.name=t;const o=[];for(let s=0;s<n.tracks.length;++s){const e=n.tracks[s],t=e.getValueSize(),d=[],l=[];for(let n=0;n<e.times.length;++n){const o=e.times[n]*i;if(!(o<r||o>=a)){d.push(e.times[n]);for(let r=0;r<t;++r)l.push(e.values[n*t+r])}}0===d.length||(e.times=mu.convertArray(d,e.times.constructor),e.values=mu.convertArray(l,e.values.constructor),o.push(e))}n.tracks=o;let s=Infinity;for(let o=0;o<n.tracks.length;++o)s>n.tracks[o].times[0]&&(s=n.tracks[o].times[0]);for(let o=0;o<n.tracks.length;++o)n.tracks[o].shift(-1*s);return n.resetDuration(),n},makeClipAdditive:function(e,t=0,r=e,a=30){0>=a&&(a=30);const n=r.tracks.length,o=t/a;for(let s=0;s<n;++s){const t=r.tracks[s],a=t.ValueTypeName;if('bool'===a||'string'===a)continue;const i=e.tracks.find(function(e){return e.name===t.name&&e.ValueTypeName===a});if(void 0===i)continue;let n=0;const d=t.getValueSize();t.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(n=d/3);let l=0;const p=i.getValueSize();i.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(l=p/3);const c=t.times.length-1;let u;if(o<=t.times[0]){const e=n,r=d-n;u=mu.arraySlice(t.values,e,r)}else if(o>=t.times[c]){const e=c*d+n,r=e+d-n;u=mu.arraySlice(t.values,e,r)}else{const e=t.createInterpolant(),r=n,a=d-n;e.evaluate(o),u=mu.arraySlice(e.resultBuffer,r,a)}if('quaternion'===a){const e=new Md().fromArray(u).normalize().conjugate();e.toArray(u)}const m=i.times.length;for(let e=0;e<m;++e){const t=e*p+l;if('quaternion'===a)Md.multiplyQuaternionsFlat(i.values,t,u,0,i.values,t);else{const e=p-2*l;for(let r=0;r<e;++r)i.values[t+r]-=u[r]}}}return e.blendMode=Zs,e}};Object.assign(na.prototype,{evaluate:function(e){const t=this.parameterPositions;let r=this._cachedIndex,a=t[r],i=t[r-1];validate_interval:{seek:{let n;linear_scan:{forward_scan:if(!(e<a)){for(let n=r+2;;){if(void 0===a){if(e<i)break forward_scan;return r=t.length,this._cachedIndex=r,this.afterEnd_(r-1,e,i)}if(r===n)break;if(i=a,a=t[++r],e<a)break seek}n=t.length;break linear_scan}if(!(e>=i)){const o=t[1];e<o&&(r=2,i=o);for(let n=r-2;;){if(void 0===i)return this._cachedIndex=0,this.beforeStart_(0,e,a);if(r===n)break;if(a=i,i=t[--r-1],e>=i)break seek}n=r,r=0;break linear_scan}break validate_interval}for(;r<n;){const a=r+n>>>1;e<t[a]?n=a:r=a+1}if(a=t[r],i=t[r-1],void 0===i)return this._cachedIndex=0,this.beforeStart_(0,e,a);if(void 0===a)return r=t.length,this._cachedIndex=r,this.afterEnd_(r-1,i,e)}this._cachedIndex=r,this.intervalChanged_(r,i,a)}return this.interpolate_(r,i,e,a)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){const t=this.resultBuffer,r=this.sampleValues,a=this.valueSize;for(let n=0;n!==a;++n)t[n]=r[e*a+n];return t},interpolate_:function(){throw new Error('call to abstract method')},intervalChanged_:function(){}}),Object.assign(na.prototype,{beforeStart_:na.prototype.copySampleValue_,afterEnd_:na.prototype.copySampleValue_}),oa.prototype=Object.assign(Object.create(na.prototype),{constructor:oa,DefaultSettings_:{endingStart:js,endingEnd:js},intervalChanged_:function(e,t,r){const a=this.parameterPositions;let i=e-2,n=e+1,o=a[i],s=a[n];if(o===void 0)switch(this.getSettings_().endingStart){case Xs:i=e,o=2*t-r;break;case qs:i=a.length-2,o=t+a[i]-a[i+1];break;default:i=e,o=r;}if(void 0===s)switch(this.getSettings_().endingEnd){case Xs:n=e,s=2*r-t;break;case qs:n=1,s=r+a[1]-a[0];break;default:n=e-1,s=t;}const d=.5*(r-t),l=this.valueSize;this._weightPrev=d/(t-o),this._weightNext=d/(s-r),this._offsetPrev=i*l,this._offsetNext=n*l},interpolate_:function(e,r,a,t){const n=this.resultBuffer,o=this.sampleValues,s=this.valueSize,d=e*s,l=this._offsetPrev,c=this._offsetNext,u=this._weightPrev,m=this._weightNext,f=(a-r)/(t-r),p=f*f,g=p*f;for(let h=0;h!==s;++h)n[h]=(-u*g+2*u*p-u*f)*o[l+h]+((1+u)*g+(-1.5-2*u)*p+(-.5+u)*f+1)*o[d-s+h]+((-1-m)*g+(1.5+m)*p+.5*f)*o[d+h]+(m*g-m*p)*o[c+h];return n}}),sa.prototype=Object.assign(Object.create(na.prototype),{constructor:sa,interpolate_:function(e,r,a,t){const n=this.resultBuffer,o=this.sampleValues,s=this.valueSize,d=e*s,l=(a-r)/(t-r);for(let p=0;p!==s;++p)n[p]=o[d-s+p]*(1-l)+o[d+p]*l;return n}}),da.prototype=Object.assign(Object.create(na.prototype),{constructor:da,interpolate_:function(e){return this.copySampleValue_(e-1)}}),Object.assign(la,{toJSON:function(e){const t=e.constructor;let r;if(void 0!==t.toJSON)r=t.toJSON(e);else{r={name:e.name,times:mu.convertArray(e.times,Array),values:mu.convertArray(e.values,Array)};const t=e.getInterpolation();t!==e.DefaultInterpolation&&(r.interpolation=t)}return r.type=e.ValueTypeName,r}}),Object.assign(la.prototype,{constructor:la,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:ks,InterpolantFactoryMethodDiscrete:function(e){return new da(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodLinear:function(e){return new sa(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:function(e){return new oa(this.times,this.values,this.getValueSize(),e)},setInterpolation:function(e){let t;if(e===Vs?t=this.InterpolantFactoryMethodDiscrete:e===ks?t=this.InterpolantFactoryMethodLinear:e===Ws?t=this.InterpolantFactoryMethodSmooth:void 0,void 0===t){const t='unsupported interpolation for '+this.ValueTypeName+' keyframe track named '+this.name;if(void 0===this.createInterpolant)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(t);return console.warn('THREE.KeyframeTrack:',t),this}return this.createInterpolant=t,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Vs;case this.InterpolantFactoryMethodLinear:return ks;case this.InterpolantFactoryMethodSmooth:return Ws;}},getValueSize:function(){return this.values.length/this.times.length},shift:function(e){if(0!==e){const t=this.times;for(let r=0,a=t.length;r!==a;++r)t[r]+=e}return this},scale:function(e){if(1!==e){const t=this.times;for(let r=0,a=t.length;r!==a;++r)t[r]*=e}return this},trim:function(e,t){const r=this.times,a=r.length;let i=0,n=a-1;for(;i!==a&&r[i]<e;)++i;for(;-1!==n&&r[n]>t;)--n;if(++n,0!=i||n!==a){i>=n&&(n=hn(n,1),i=n-1);const e=this.getValueSize();this.times=mu.arraySlice(r,i,n),this.values=mu.arraySlice(this.values,i*e,n*e)}return this},validate:function(){let e=!0;const t=this.getValueSize();0!=t-gn(t)&&(console.error('THREE.KeyframeTrack: Invalid value size in track.',this),e=!1);const r=this.times,a=this.values,n=r.length;0===n&&(console.error('THREE.KeyframeTrack: Track is empty.',this),e=!1);let o=null;for(let t=0;t!==n;t++){const a=r[t];if('number'==typeof a&&isNaN(a)){console.error('THREE.KeyframeTrack: Time is not a valid number.',this,t,a),e=!1;break}if(null!==o&&o>a){console.error('THREE.KeyframeTrack: Out of order keys.',this,t,a,o),e=!1;break}o=a}if(a!==void 0&&mu.isTypedArray(a))for(let t=0,r=a.length;t!==r;++t){const r=a[t];if(isNaN(r)){console.error('THREE.KeyframeTrack: Value is not a valid number.',this,t,r),e=!1;break}}return e},optimize:function(){const e=mu.arraySlice(this.times),t=mu.arraySlice(this.values),r=this.getValueSize(),a=this.getInterpolation()===Ws,n=e.length-1;let o=1;for(let s=1,i;s<n;++s){i=!1;const n=e[s],d=e[s+1];if(n!==d&&(1!==s||n!==n[0]))if(!a){const e=s*r;for(let a=0;a!==r;++a){const n=t[e+a];if(n!==t[e-r+a]||n!==t[e+r+a]){i=!0;break}}}else i=!0;if(i){if(s!==o){e[o]=e[s];const a=s*r,i=o*r;for(let e=0;e!==r;++e)t[i+e]=t[a+e]}++o}}if(0<n){e[o]=e[n];for(let e=o*r,a=0;a!==r;++a)t[e+a]=t[n*r+a];++o}return o===e.length?(this.times=e,this.values=t):(this.times=mu.arraySlice(e,0,o),this.values=mu.arraySlice(t,0,o*r)),this},clone:function(){const e=mu.arraySlice(this.times,0),t=mu.arraySlice(this.values,0),r=this.constructor,a=new r(this.name,e,t);return a.createInterpolant=this.createInterpolant,a}}),pa.prototype=Object.assign(Object.create(la.prototype),{constructor:pa,ValueTypeName:'bool',ValueBufferType:Array,DefaultInterpolation:Vs,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),ca.prototype=Object.assign(Object.create(la.prototype),{constructor:ca,ValueTypeName:'color'}),ua.prototype=Object.assign(Object.create(la.prototype),{constructor:ua,ValueTypeName:'number'}),ma.prototype=Object.assign(Object.create(na.prototype),{constructor:ma,interpolate_:function(e,r,a,t){const i=this.resultBuffer,n=this.sampleValues,o=this.valueSize;let s=e*o;for(let d=s+o;s!==d;s+=4)Md.slerpFlat(i,0,n,s-o,n,s,(a-r)/(t-r));return i}}),fa.prototype=Object.assign(Object.create(la.prototype),{constructor:fa,ValueTypeName:'quaternion',DefaultInterpolation:ks,InterpolantFactoryMethodLinear:function(e){return new ma(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:void 0}),ga.prototype=Object.assign(Object.create(la.prototype),{constructor:ga,ValueTypeName:'string',ValueBufferType:Array,DefaultInterpolation:Vs,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),ha.prototype=Object.assign(Object.create(la.prototype),{constructor:ha,ValueTypeName:'vector'}),Object.assign(ya,{parse:function(e){const t=[],r=e.tracks,a=1/(e.fps||1);for(let o=0,i=r.length;o!==i;++o)t.push(xa(r[o]).scale(a));const i=new ya(e.name,e.duration,t,e.blendMode);return i.uuid=e.uuid,i},toJSON:function(e){const t=[],r=e.tracks,a={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let a=0,i=r.length;a!==i;++a)t.push(la.toJSON(r[a]));return a},CreateFromMorphTargetSequence:function(e,t,r,a){const n=t.length,o=[];for(let s=0;s<n;s++){let e=[],i=[];e.push((s+n-1)%n,s,(s+1)%n),i.push(0,1,0);const d=mu.getKeyframeOrder(e);e=mu.sortedArray(e,1,d),i=mu.sortedArray(i,1,d),a||0!==e[0]||(e.push(n),i.push(i[0])),o.push(new ua('.morphTargetInfluences['+t[s].name+']',e,i).scale(1/r))}return new ya(e,-1,o)},findByName:function(e,t){let r=e;if(!Array.isArray(e)){const t=e;r=t.geometry&&t.geometry.animations||t.animations}for(let a=0;a<r.length;a++)if(r[a].name===t)return r[a];return null},CreateClipsFromMorphTargetSequences:function(e,t,r){const a={},n=/^([\w-]*?)([\d]+)$/;for(let o=0,i=e.length;o<i;o++){const t=e[o],r=t.name.match(n);if(r&&1<r.length){const e=r[1];let i=a[e];i||(a[e]=i=[]),i.push(t)}}const i=[];for(const n in a)i.push(ya.CreateFromMorphTargetSequence(n,a[n],t,r));return i},parseAnimation:function(e,t){if(!e)return console.error('THREE.AnimationClip: No animation in JSONLoader data.'),null;const r=function(e,t,r,a,i){if(0!==r.length){const n=[],o=[];mu.flattenJSON(r,n,o,a),0!==n.length&&i.push(new e(t,n,o))}},a=[],i=e.name||'default',n=e.fps||30,o=e.blendMode;let s=e.length||-1;const d=e.hierarchy||[];for(let i=0;i<d.length;i++){const e=d[i].keys;if(e&&0!==e.length)if(e[0].morphTargets){const t={};let r;for(r=0;r<e.length;r++)if(e[r].morphTargets)for(let a=0;a<e[r].morphTargets.length;a++)t[e[r].morphTargets[a]]=-1;for(const i in t){const t=[],n=[];for(let a=0;a!==e[r].morphTargets.length;++a){const a=e[r];t.push(a.time),n.push(a.morphTarget===i?1:0)}a.push(new ua('.morphTargetInfluence['+i+']',t,n))}s=t.length*(n||1)}else{const n='.bones['+t[i].name+']';r(ha,n+'.position',e,'pos',a),r(fa,n+'.quaternion',e,'rot',a),r(ha,n+'.scale',e,'scl',a)}}if(0===a.length)return null;const l=new ya(i,s,a,o);return l}}),Object.assign(ya.prototype,{resetDuration:function(){const e=this.tracks;let t=0;for(let r=0,a=e.length;r!==a;++r){const e=this.tracks[r];t=hn(t,e.times[e.times.length-1])}return this.duration=t,this},trim:function(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this},validate:function(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e},optimize:function(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this},clone:function(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new ya(this.name,this.duration,e,this.blendMode)},toJSON:function(){return ya.toJSON(this)}});const fu={enabled:!1,files:{},add:function(e,t){!1===this.enabled||(this.files[e]=t)},get:function(e){return!1===this.enabled?void 0:this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}},gu=new _a;Object.assign(ba.prototype,{load:function(){},loadAsync:function(e,t){const r=this;return new Promise(function(a,i){r.load(e,a,t,i)})},parse:function(){},setCrossOrigin:function(e){return this.crossOrigin=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setPath:function(e){return this.path=e,this},setResourcePath:function(e){return this.resourcePath=e,this},setRequestHeader:function(e){return this.requestHeader=e,this}});const hu={};Ma.prototype=Object.assign(Object.create(ba.prototype),{constructor:Ma,load:function(e,t,r,a){void 0===e&&(e=''),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const i=this,n=fu.get(e);if(void 0!==n)return i.manager.itemStart(e),setTimeout(function(){t&&t(n),i.manager.itemEnd(e)},0),n;if(void 0!==hu[e])return void hu[e].push({onLoad:t,onProgress:r,onError:a});const o=/^data:(.*?)(;base64)?,(.*)$/,s=e.match(o);let d;if(s){const r=s[1],n=!!s[2];let o=s[3];o=decodeURIComponent(o),n&&(o=atob(o));try{let a;const n=(this.responseType||'').toLowerCase();switch(n){case'arraybuffer':case'blob':const e=new Uint8Array(o.length);for(let t=0;t<o.length;t++)e[t]=o.charCodeAt(t);a='blob'===n?new Blob([e.buffer],{type:r}):e.buffer;break;case'document':const t=new DOMParser;a=t.parseFromString(o,r);break;case'json':a=JSON.parse(o);break;default:a=o;}setTimeout(function(){t&&t(a),i.manager.itemEnd(e)},0)}catch(t){setTimeout(function(){a&&a(t),i.manager.itemError(e),i.manager.itemEnd(e)},0)}}else{for(const n in hu[e]=[],hu[e].push({onLoad:t,onProgress:r,onError:a}),d=new XMLHttpRequest,d.open('GET',e,!0),d.addEventListener('load',function(t){const r=this.response,a=hu[e];if(delete hu[e],200===this.status||0===this.status){0===this.status&&console.warn('THREE.FileLoader: HTTP Status 0 received.'),fu.add(e,r);for(let e=0,t=a.length;e<t;e++){const t=a[e];t.onLoad&&t.onLoad(r)}i.manager.itemEnd(e)}else{for(let e=0,r=a.length;e<r;e++){const r=a[e];r.onError&&r.onError(t)}i.manager.itemError(e),i.manager.itemEnd(e)}},!1),d.addEventListener('progress',function(t){const r=hu[e];for(let e=0,a=r.length;e<a;e++){const a=r[e];a.onProgress&&a.onProgress(t)}},!1),d.addEventListener('error',function(t){const r=hu[e];delete hu[e];for(let e=0,a=r.length;e<a;e++){const a=r[e];a.onError&&a.onError(t)}i.manager.itemError(e),i.manager.itemEnd(e)},!1),d.addEventListener('abort',function(t){const r=hu[e];delete hu[e];for(let e=0,a=r.length;e<a;e++){const a=r[e];a.onError&&a.onError(t)}i.manager.itemError(e),i.manager.itemEnd(e)},!1),void 0!==this.responseType&&(d.responseType=this.responseType),void 0!==this.withCredentials&&(d.withCredentials=this.withCredentials),d.overrideMimeType&&d.overrideMimeType(void 0===this.mimeType?'text/plain':this.mimeType),this.requestHeader)d.setRequestHeader(n,this.requestHeader[n]);d.send(null)}return i.manager.itemStart(e),d},setResponseType:function(e){return this.responseType=e,this},setMimeType:function(e){return this.mimeType=e,this}}),Sa.prototype=Object.assign(Object.create(ba.prototype),{constructor:Sa,load:function(t,e,r,a){const i=this,n=new Ma(i.manager);n.setPath(i.path),n.setRequestHeader(i.requestHeader),n.setWithCredentials(i.withCredentials),n.load(t,function(r){try{e(i.parse(JSON.parse(r)))}catch(r){a?a(r):console.error(r),i.manager.itemError(t)}},r,a)},parse:function(e){const t=[];for(let r=0;r<e.length;r++){const a=ya.parse(e[r]);t.push(a)}return t}}),Ta.prototype=Object.assign(Object.create(ba.prototype),{constructor:Ta,load:function(e,t,r,a){function n(n){l.load(e[n],function(e){const r=o.parse(e,!0);s[n]={width:r.width,height:r.height,format:r.format,mipmaps:r.mipmaps},p+=1,6===p&&(1===r.mipmapCount&&(d.minFilter=Ao),d.image=s,d.format=r.format,d.needsUpdate=!0,t&&t(d))},r,a)}const o=this,s=[],d=new or,l=new Ma(this.manager);l.setPath(this.path),l.setResponseType('arraybuffer'),l.setRequestHeader(this.requestHeader),l.setWithCredentials(o.withCredentials);let p=0;if(Array.isArray(e))for(let t=0,r=e.length;t<r;++t)n(t);else l.load(e,function(e){const r=o.parse(e,!0);if(r.isCubemap){const e=r.mipmaps.length/r.mipmapCount;for(let t=0;t<e;t++){s[t]={mipmaps:[]};for(let e=0;e<r.mipmapCount;e++)s[t].mipmaps.push(r.mipmaps[t*r.mipmapCount+e]),s[t].format=r.format,s[t].width=r.width,s[t].height=r.height}d.image=s}else d.image.width=r.width,d.image.height=r.height,d.mipmaps=r.mipmaps;1===r.mipmapCount&&(d.minFilter=Ao),d.format=r.format,d.needsUpdate=!0,t&&t(d)},r,a);return d}}),Ea.prototype=Object.assign(Object.create(ba.prototype),{constructor:Ea,load:function(e,t,r,a){function i(){d.removeEventListener('load',i,!1),d.removeEventListener('error',n,!1),fu.add(e,this),t&&t(this),o.manager.itemEnd(e)}function n(t){d.removeEventListener('load',i,!1),d.removeEventListener('error',n,!1),a&&a(t),o.manager.itemError(e),o.manager.itemEnd(e)}void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const o=this,s=fu.get(e);if(void 0!==s)return o.manager.itemStart(e),setTimeout(function(){t&&t(s),o.manager.itemEnd(e)},0),s;const d=document.createElementNS('http://www.w3.org/1999/xhtml','img');return d.addEventListener('load',i,!1),d.addEventListener('error',n,!1),'data:'!==e.substr(0,5)&&void 0!==this.crossOrigin&&(d.crossOrigin=this.crossOrigin),o.manager.itemStart(e),d.src=e,d}}),wa.prototype=Object.assign(Object.create(ba.prototype),{constructor:wa,load:function(e,t,r,a){function n(r){s.load(e[r],function(e){o.images[r]=e,d++,6===d&&(o.needsUpdate=!0,t&&t(o))},void 0,a)}const o=new H,s=new Ea(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let d=0;for(let o=0;o<e.length;++o)n(o);return o}}),La.prototype=Object.assign(Object.create(ba.prototype),{constructor:La,load:function(e,t,r,a){const i=this,n=new G,o=new Ma(this.manager);return o.setResponseType('arraybuffer'),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.setWithCredentials(i.withCredentials),o.load(e,function(e){const r=i.parse(e);r&&(void 0===r.image?void 0!==r.data&&(n.image.width=r.width,n.image.height=r.height,n.image.data=r.data):n.image=r.image,n.wrapS=void 0===r.wrapS?So:r.wrapS,n.wrapT=void 0===r.wrapT?So:r.wrapT,n.magFilter=void 0===r.magFilter?Ao:r.magFilter,n.minFilter=void 0===r.minFilter?Ao:r.minFilter,n.anisotropy=void 0===r.anisotropy?1:r.anisotropy,void 0!==r.format&&(n.format=r.format),void 0!==r.type&&(n.type=r.type),void 0!==r.mipmaps&&(n.mipmaps=r.mipmaps,n.minFilter=Co),1===r.mipmapCount&&(n.minFilter=Ao),n.needsUpdate=!0,t&&t(n,r))},r,a),n}}),Aa.prototype=Object.assign(Object.create(ba.prototype),{constructor:Aa,load:function(e,t,r,a){const n=new i,o=new Ea(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(r){n.image=r;const a=0<e.search(/\.jpe?g($|\?)/i)||0===e.search(/^data\:image\/jpeg/);n.format=a?Wo:jo,n.needsUpdate=!0,void 0!==t&&t(n)},r,a),n}}),Object.assign(Ra.prototype,{getPoint:function(){return console.warn('THREE.Curve: .getPoint() not implemented.'),null},getPointAt:function(e,r){const a=this.getUtoTmapping(e);return this.getPoint(a,r)},getPoints:function(e=5){const t=[];for(let r=0;r<=e;r++)t.push(this.getPoint(r/e));return t},getSpacedPoints:function(e=5){const t=[];for(let r=0;r<=e;r++)t.push(this.getPointAt(r/e));return t},getLength:function(){const e=this.getLengths();return e[e.length-1]},getLengths:function(e){if(void 0===e&&(e=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let r=this.getPoint(0),a=0,i;t.push(0);for(let n=1;n<=e;n++)i=this.getPoint(n/e),a+=i.distanceTo(r),t.push(a),r=i;return this.cacheArcLengths=t,t},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(e,r){const a=this.getLengths();let n=0;const i=a.length;let o=r?r:e*a[i-1];let s=0,d=i-1,l;for(;s<=d;)if(n=gn(s+(d-s)/2),l=a[n]-o,0>l)s=n+1;else if(0<l)d=n-1;else{d=n;break}if(n=d,a[n]===o)return n/(i-1);const p=a[n],c=a[n+1],u=(o-p)/(c-p),m=(n+u)/(i-1);return m},getTangent:function(e,t){const r=1e-4;let a=e-r,i=e+r;0>a&&(a=0),1<i&&(i=1);const n=this.getPoint(a),o=this.getPoint(i),s=t||(n.isVector2?new hd:new Sd);return s.copy(o).sub(n).normalize(),s},getTangentAt:function(e,r){const a=this.getUtoTmapping(e);return this.getTangent(a,r)},computeFrenetFrames:function(e,t){const r=new Sd,a=[],n=[],o=[],s=new Sd,d=new Jd;for(let r=0;r<=e;r++){const t=r/e;a[r]=this.getTangentAt(t,new Sd),a[r].normalize()}n[0]=new Sd,o[0]=new Sd;let i=Number.MAX_VALUE;const l=on(a[0].x),p=on(a[0].y),c=on(a[0].z);l<=i&&(i=l,r.set(1,0,0)),p<=i&&(i=p,r.set(0,1,0)),c<=i&&r.set(0,0,1),s.crossVectors(a[0],r).normalize(),n[0].crossVectors(a[0],s),o[0].crossVectors(a[0],n[0]);for(let r=1;r<=e;r++){if(n[r]=n[r-1].clone(),o[r]=o[r-1].clone(),s.crossVectors(a[r-1],a[r]),s.length()>rn){s.normalize();const e=an(gd.clamp(a[r-1].dot(a[r]),-1,1));n[r].applyMatrix4(d.makeRotationAxis(s,e))}o[r].crossVectors(a[r],n[r])}if(!0===t){let t=an(gd.clamp(n[0].dot(n[e]),-1,1));t/=e,0<a[0].dot(s.crossVectors(n[0],n[e]))&&(t=-t);for(let r=1;r<=e;r++)n[r].applyMatrix4(d.makeRotationAxis(a[r],t*r)),o[r].crossVectors(a[r],n[r])}return{tangents:a,normals:n,binormals:o}},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this},toJSON:function(){const e={metadata:{version:4.5,type:'Curve',generator:'Curve.toJSON'},arcLengthDivisions:this.arcLengthDivisions,type:this.type};return e},fromJSON:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}),Ca.prototype=Object.create(Ra.prototype),Ca.prototype.constructor=Ca,Ca.prototype.isEllipseCurve=!0,Ca.prototype.getPoint=function(e,t){const r=t||new hd,a=2*vn;let i=this.aEndAngle-this.aStartAngle;const n=on(i)<rn;for(;0>i;)i+=a;for(;i>a;)i-=a;i<rn&&(n?i=0:i=a),!0!==this.aClockwise||n||(i===a?i=-a:i-=a);const o=this.aStartAngle+e*i;let s=this.aX+this.xRadius*pn(o),d=this.aY+this.yRadius*ln(o);if(0!==this.aRotation){const e=pn(this.aRotation),t=ln(this.aRotation),r=s-this.aX,a=d-this.aY;s=r*e-a*t+this.aX,d=r*t+a*e+this.aY}return r.set(s,d)},Ca.prototype.copy=function(e){return Ra.prototype.copy.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this},Ca.prototype.toJSON=function(){const e=Ra.prototype.toJSON.call(this);return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e},Ca.prototype.fromJSON=function(e){return Ra.prototype.fromJSON.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this},Pa.prototype=Object.create(Ca.prototype),Pa.prototype.constructor=Pa,Pa.prototype.isArcCurve=!0;const yu=new Sd,vu=new Ia,xu=new Ia,_u=new Ia;Na.prototype=Object.create(Ra.prototype),Na.prototype.constructor=Na,Na.prototype.isCatmullRomCurve3=!0,Na.prototype.getPoint=function(e,t=new Sd){const r=t,a=this.points,i=a.length,n=(i-(this.closed?0:1))*e;let o=gn(n),s=n-o;this.closed?o+=0<o?0:(gn(on(o)/i)+1)*i:0==s&&o===i-1&&(o=i-2,s=1);let d,l;this.closed||0<o?d=a[(o-1)%i]:(yu.subVectors(a[0],a[1]).add(a[0]),d=yu);const p=a[o%i],c=a[(o+1)%i];if(this.closed||o+2<i?l=a[(o+2)%i]:(yu.subVectors(a[i-1],a[i-2]).add(a[i-1]),l=yu),'centripetal'===this.curveType||'chordal'===this.curveType){const e='chordal'===this.curveType?.5:.25;let t=cn(d.distanceToSquared(p),e),r=cn(p.distanceToSquared(c),e),a=cn(c.distanceToSquared(l),e);1e-4>r&&(r=1),1e-4>t&&(t=r),1e-4>a&&(a=r),vu.initNonuniformCatmullRom(d.x,p.x,c.x,l.x,t,r,a),xu.initNonuniformCatmullRom(d.y,p.y,c.y,l.y,t,r,a),_u.initNonuniformCatmullRom(d.z,p.z,c.z,l.z,t,r,a)}else'catmullrom'===this.curveType&&(vu.initCatmullRom(d.x,p.x,c.x,l.x,this.tension),xu.initCatmullRom(d.y,p.y,c.y,l.y,this.tension),_u.initCatmullRom(d.z,p.z,c.z,l.z,this.tension));return r.set(vu.calc(s),xu.calc(s),_u.calc(s)),r},Na.prototype.copy=function(e){Ra.prototype.copy.call(this,e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){const r=e.points[t];this.points.push(r.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this},Na.prototype.toJSON=function(){const e=Ra.prototype.toJSON.call(this);e.points=[];for(let t=0,r=this.points.length;t<r;t++){const r=this.points[t];e.points.push(r.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e},Na.prototype.fromJSON=function(e){Ra.prototype.fromJSON.call(this,e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){const r=e.points[t];this.points.push(new Sd().fromArray(r))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this},Wa.prototype=Object.create(Ra.prototype),Wa.prototype.constructor=Wa,Wa.prototype.isCubicBezierCurve=!0,Wa.prototype.getPoint=function(e,t=new hd){const r=t,a=this.v0,i=this.v1,n=this.v2,o=this.v3;return r.set(ka(e,a.x,i.x,n.x,o.x),ka(e,a.y,i.y,n.y,o.y)),r},Wa.prototype.copy=function(e){return Ra.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this},Wa.prototype.toJSON=function(){const e=Ra.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e},Wa.prototype.fromJSON=function(e){return Ra.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this},ja.prototype=Object.create(Ra.prototype),ja.prototype.constructor=ja,ja.prototype.isCubicBezierCurve3=!0,ja.prototype.getPoint=function(e,t=new Sd){const r=t,a=this.v0,i=this.v1,n=this.v2,o=this.v3;return r.set(ka(e,a.x,i.x,n.x,o.x),ka(e,a.y,i.y,n.y,o.y),ka(e,a.z,i.z,n.z,o.z)),r},ja.prototype.copy=function(e){return Ra.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this},ja.prototype.toJSON=function(){const e=Ra.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e},ja.prototype.fromJSON=function(e){return Ra.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this},Xa.prototype=Object.create(Ra.prototype),Xa.prototype.constructor=Xa,Xa.prototype.isLineCurve=!0,Xa.prototype.getPoint=function(e,t=new hd){const r=t;return 1===e?r.copy(this.v2):(r.copy(this.v2).sub(this.v1),r.multiplyScalar(e).add(this.v1)),r},Xa.prototype.getPointAt=function(e,t){return this.getPoint(e,t)},Xa.prototype.getTangent=function(e,t){const r=t||new hd;return r.copy(this.v2).sub(this.v1).normalize(),r},Xa.prototype.copy=function(e){return Ra.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this},Xa.prototype.toJSON=function(){const e=Ra.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},Xa.prototype.fromJSON=function(e){return Ra.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},qa.prototype=Object.create(Ra.prototype),qa.prototype.constructor=qa,qa.prototype.isLineCurve3=!0,qa.prototype.getPoint=function(e,t=new Sd){const r=t;return 1===e?r.copy(this.v2):(r.copy(this.v2).sub(this.v1),r.multiplyScalar(e).add(this.v1)),r},qa.prototype.getPointAt=function(e,t){return this.getPoint(e,t)},qa.prototype.copy=function(e){return Ra.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this},qa.prototype.toJSON=function(){const e=Ra.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},qa.prototype.fromJSON=function(e){return Ra.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},Ya.prototype=Object.create(Ra.prototype),Ya.prototype.constructor=Ya,Ya.prototype.isQuadraticBezierCurve=!0,Ya.prototype.getPoint=function(e,t=new hd){const r=t,a=this.v0,i=this.v1,n=this.v2;return r.set(Ha(e,a.x,i.x,n.x),Ha(e,a.y,i.y,n.y)),r},Ya.prototype.copy=function(e){return Ra.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this},Ya.prototype.toJSON=function(){const e=Ra.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},Ya.prototype.fromJSON=function(e){return Ra.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},Za.prototype=Object.create(Ra.prototype),Za.prototype.constructor=Za,Za.prototype.isQuadraticBezierCurve3=!0,Za.prototype.getPoint=function(e,t=new Sd){const r=t,a=this.v0,i=this.v1,n=this.v2;return r.set(Ha(e,a.x,i.x,n.x),Ha(e,a.y,i.y,n.y),Ha(e,a.z,i.z,n.z)),r},Za.prototype.copy=function(e){return Ra.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this},Za.prototype.toJSON=function(){const e=Ra.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},Za.prototype.fromJSON=function(e){return Ra.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},Ja.prototype=Object.create(Ra.prototype),Ja.prototype.constructor=Ja,Ja.prototype.isSplineCurve=!0,Ja.prototype.getPoint=function(e,t=new hd){const r=t,a=this.points,i=(a.length-1)*e,n=gn(i),o=i-n,s=a[0===n?n:n-1],d=a[n],l=a[n>a.length-2?a.length-1:n+1],p=a[n>a.length-3?a.length-1:n+2];return r.set(Da(o,s.x,d.x,l.x,p.x),Da(o,s.y,d.y,l.y,p.y)),r},Ja.prototype.copy=function(e){Ra.prototype.copy.call(this,e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){const r=e.points[t];this.points.push(r.clone())}return this},Ja.prototype.toJSON=function(){const e=Ra.prototype.toJSON.call(this);e.points=[];for(let t=0,r=this.points.length;t<r;t++){const r=this.points[t];e.points.push(r.toArray())}return e},Ja.prototype.fromJSON=function(e){Ra.prototype.fromJSON.call(this,e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){const r=e.points[t];this.points.push(new hd().fromArray(r))}return this};var bu=Object.freeze({__proto__:null,ArcCurve:Pa,CatmullRomCurve3:Na,CubicBezierCurve:Wa,CubicBezierCurve3:ja,EllipseCurve:Ca,LineCurve:Xa,LineCurve3:qa,QuadraticBezierCurve:Ya,QuadraticBezierCurve3:Za,SplineCurve:Ja});Qa.prototype=Object.assign(Object.create(Ra.prototype),{constructor:Qa,add:function(e){this.curves.push(e)},closePath:function(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Xa(t,e))},getPoint:function(e){const t=e*this.getLength(),r=this.getCurveLengths();for(let a=0;a<r.length;){if(r[a]>=t){const e=r[a]-t,i=this.curves[a],n=i.getLength(),o=0===n?0:1-e/n;return i.getPointAt(o)}a++}return null},getLength:function(){const e=this.getCurveLengths();return e[e.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let r=0,a=this.curves.length;r<a;r++)t+=this.curves[r].getLength(),e.push(t);return this.cacheLengths=e,e},getSpacedPoints:function(e=40){const t=[];for(let r=0;r<=e;r++)t.push(this.getPoint(r/e));return this.autoClose&&t.push(t[0]),t},getPoints:function(e=12){const t=[];let r;for(let a=0,i=this.curves;a<i.length;a++){const n=i[a],o=n&&n.isEllipseCurve?2*e:n&&(n.isLineCurve||n.isLineCurve3)?1:n&&n.isSplineCurve?e*n.points.length:e,s=n.getPoints(o);for(let e=0;e<s.length;e++){const a=s[e];r&&r.equals(a)||(t.push(a),r=a)}}return this.autoClose&&1<t.length&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t},copy:function(e){Ra.prototype.copy.call(this,e),this.curves=[];for(let t=0,r=e.curves.length;t<r;t++){const r=e.curves[t];this.curves.push(r.clone())}return this.autoClose=e.autoClose,this},toJSON:function(){const e=Ra.prototype.toJSON.call(this);e.autoClose=this.autoClose,e.curves=[];for(let t=0,r=this.curves.length;t<r;t++){const r=this.curves[t];e.curves.push(r.toJSON())}return e},fromJSON:function(e){Ra.prototype.fromJSON.call(this,e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,r=e.curves.length;t<r;t++){const r=e.curves[t];this.curves.push(new bu[r.type]().fromJSON(r))}return this}}),Ka.prototype=Object.assign(Object.create(Qa.prototype),{constructor:Ka,setFromPoints:function(e){this.moveTo(e[0].x,e[0].y);for(let t=1,r=e.length;t<r;t++)this.lineTo(e[t].x,e[t].y);return this},moveTo:function(e,t){return this.currentPoint.set(e,t),this},lineTo:function(e,t){const r=new Xa(this.currentPoint.clone(),new hd(e,t));return this.curves.push(r),this.currentPoint.set(e,t),this},quadraticCurveTo:function(e,t,r,a){const i=new Ya(this.currentPoint.clone(),new hd(e,t),new hd(r,a));return this.curves.push(i),this.currentPoint.set(r,a),this},bezierCurveTo:function(e,t,r,a,i,n){const o=new Wa(this.currentPoint.clone(),new hd(e,t),new hd(r,a),new hd(i,n));return this.curves.push(o),this.currentPoint.set(i,n),this},splineThru:function(e){const t=[this.currentPoint.clone()].concat(e),r=new Ja(t);return this.curves.push(r),this.currentPoint.copy(e[e.length-1]),this},arc:function(e,t,r,a,i,n){const o=this.currentPoint.x,s=this.currentPoint.y;return this.absarc(e+o,t+s,r,a,i,n),this},absarc:function(e,t,r,a,i,n){return this.absellipse(e,t,r,r,a,i,n),this},ellipse:function(e,t,r,a,i,n,o,s){const d=this.currentPoint.x,l=this.currentPoint.y;return this.absellipse(e+d,t+l,r,a,i,n,o,s),this},absellipse:function(e,t,r,a,i,n,o,s){const d=new Ca(e,t,r,a,i,n,o,s);if(0<this.curves.length){const e=d.getPoint(0);e.equals(this.currentPoint)||this.lineTo(e.x,e.y)}this.curves.push(d);const l=d.getPoint(1);return this.currentPoint.copy(l),this},copy:function(e){return Qa.prototype.copy.call(this,e),this.currentPoint.copy(e.currentPoint),this},toJSON:function(){const e=Qa.prototype.toJSON.call(this);return e.currentPoint=this.currentPoint.toArray(),e},fromJSON:function(e){return Qa.prototype.fromJSON.call(this,e),this.currentPoint.fromArray(e.currentPoint),this}}),$a.prototype=Object.assign(Object.create(Ka.prototype),{constructor:$a,getPointsHoles:function(e){const t=[];for(let r=0,a=this.holes.length;r<a;r++)t[r]=this.holes[r].getPoints(e);return t},extractPoints:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},copy:function(e){Ka.prototype.copy.call(this,e),this.holes=[];for(let t=0,r=e.holes.length;t<r;t++){const r=e.holes[t];this.holes.push(r.clone())}return this},toJSON:function(){const e=Ka.prototype.toJSON.call(this);e.uuid=this.uuid,e.holes=[];for(let t=0,r=this.holes.length;t<r;t++){const r=this.holes[t];e.holes.push(r.toJSON())}return e},fromJSON:function(e){Ka.prototype.fromJSON.call(this,e),this.uuid=e.uuid,this.holes=[];for(let t=0,r=e.holes.length;t<r;t++){const r=e.holes[t];this.holes.push(new Ka().fromJSON(r))}return this}}),ei.prototype=Object.assign(Object.create(l.prototype),{constructor:ei,isLight:!0,copy:function(e){return l.prototype.copy.call(this,e),this.color.copy(e.color),this.intensity=e.intensity,this},toJSON:function(e){const t=l.prototype.toJSON.call(this,e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}),ti.prototype=Object.assign(Object.create(ei.prototype),{constructor:ti,isHemisphereLight:!0,copy:function(e){return ei.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}),Object.assign(ri.prototype,{_projScreenMatrix:new Jd,_lightPositionWorld:new Sd,_lookTarget:new Sd,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(e){const t=this.camera,r=this.matrix,a=this._projScreenMatrix,i=this._lookTarget,n=this._lightPositionWorld;n.setFromMatrixPosition(e.matrixWorld),t.position.copy(n),i.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(i),t.updateMatrixWorld(),a.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(a),r.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),r.multiply(t.projectionMatrix),r.multiply(t.matrixWorldInverse)},getViewport:function(e){return this._viewports[e]},getFrameExtents:function(){return this._frameExtents},copy:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){const e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),(512!==this.mapSize.x||512!==this.mapSize.y)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}),ai.prototype=Object.assign(Object.create(ri.prototype),{constructor:ai,isSpotLightShadow:!0,updateMatrices:function(e){const t=this.camera,r=2*gd.RAD2DEG*e.angle*this.focus,a=this.mapSize.width/this.mapSize.height,i=e.distance||t.far;(r!==t.fov||a!==t.aspect||i!==t.far)&&(t.fov=r,t.aspect=a,t.far=i,t.updateProjectionMatrix()),ri.prototype.updateMatrices.call(this,e)}}),ii.prototype=Object.assign(Object.create(ei.prototype),{constructor:ii,isSpotLight:!0,copy:function(e){return ei.prototype.copy.call(this,e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),ni.prototype=Object.assign(Object.create(ri.prototype),{constructor:ni,isPointLightShadow:!0,updateMatrices:function(e,t=0){const r=this.camera,a=this.matrix,i=this._lightPositionWorld,n=this._lookTarget,o=this._projScreenMatrix;i.setFromMatrixPosition(e.matrixWorld),r.position.copy(i),n.copy(r.position),n.add(this._cubeDirections[t]),r.up.copy(this._cubeUps[t]),r.lookAt(n),r.updateMatrixWorld(),a.makeTranslation(-i.x,-i.y,-i.z),o.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),this._frustum.setFromProjectionMatrix(o)}}),oi.prototype=Object.assign(Object.create(ei.prototype),{constructor:oi,isPointLight:!0,copy:function(e){return ei.prototype.copy.call(this,e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}),si.prototype=Object.assign(Object.create(z.prototype),{constructor:si,isOrthographicCamera:!0,copy:function(e,t){return z.prototype.copy.call(this,e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this},setViewOffset:function(e,t,r,a,i,n){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=a,this.view.width=i,this.view.height=n,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),r=(this.right+this.left)/2,a=(this.top+this.bottom)/2;let i=r-e,n=r+e,o=a+t,s=a-t;if(null!==this.view&&this.view.enabled){const e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=e*this.view.offsetX,n=i+e*this.view.width,o-=t*this.view.offsetY,s=o-t*this.view.height}this.projectionMatrix.makeOrthographic(i,n,o,s,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(e){const t=l.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}),di.prototype=Object.assign(Object.create(ri.prototype),{constructor:di,isDirectionalLightShadow:!0,updateMatrices:function(e){ri.prototype.updateMatrices.call(this,e)}}),li.prototype=Object.assign(Object.create(ei.prototype),{constructor:li,isDirectionalLight:!0,copy:function(e){return ei.prototype.copy.call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),pi.prototype=Object.assign(Object.create(ei.prototype),{constructor:pi,isAmbientLight:!0}),ci.prototype=Object.assign(Object.create(ei.prototype),{constructor:ci,isRectAreaLight:!0,copy:function(e){return ei.prototype.copy.call(this,e),this.width=e.width,this.height=e.height,this},toJSON:function(e){const t=ei.prototype.toJSON.call(this,e);return t.object.width=this.width,t.object.height=this.height,t}});class Mu{constructor(){Object.defineProperty(this,'isSphericalHarmonics3',{value:!0}),this.coefficients=[];for(let e=0;9>e;e++)this.coefficients.push(new Sd)}set(e){for(let t=0;9>t;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;9>e;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const r=e.x,a=e.y,i=e.z,n=this.coefficients;return t.copy(n[0]).multiplyScalar(.282095),t.addScaledVector(n[1],.488603*a),t.addScaledVector(n[2],.488603*i),t.addScaledVector(n[3],.488603*r),t.addScaledVector(n[4],1.092548*(r*a)),t.addScaledVector(n[5],1.092548*(a*i)),t.addScaledVector(n[6],.315392*(3*i*i-1)),t.addScaledVector(n[7],1.092548*(r*i)),t.addScaledVector(n[8],.546274*(r*r-a*a)),t}getIrradianceAt(e,t){const r=e.x,a=e.y,i=e.z,n=this.coefficients;return t.copy(n[0]).multiplyScalar(.886227),t.addScaledVector(n[1],.511664*2*a),t.addScaledVector(n[2],.511664*2*i),t.addScaledVector(n[3],.511664*2*r),t.addScaledVector(n[4],.429043*2*r*a),t.addScaledVector(n[5],.429043*2*a*i),t.addScaledVector(n[6],.743125*i*i-.247708),t.addScaledVector(n[7],.429043*2*r*i),t.addScaledVector(n[8],.429043*(r*r-a*a)),t}add(e){for(let t=0;9>t;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let r=0;9>r;r++)this.coefficients[r].addScaledVector(e.coefficients[r],t);return this}scale(e){for(let t=0;9>t;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let r=0;9>r;r++)this.coefficients[r].lerp(e.coefficients[r],t);return this}equals(e){for(let t=0;9>t;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const r=this.coefficients;for(let a=0;9>a;a++)r[a].fromArray(e,t+3*a);return this}toArray(e=[],t=0){const r=this.coefficients;for(let a=0;9>a;a++)r[a].toArray(e,t+3*a);return e}static getBasisAt(e,t){const r=e.x,a=e.y,i=e.z;t[0]=.282095,t[1]=.488603*a,t[2]=.488603*i,t[3]=.488603*r,t[4]=1.092548*r*a,t[5]=1.092548*a*i,t[6]=.315392*(3*i*i-1),t[7]=1.092548*r*i,t[8]=.546274*(r*r-a*a)}}ui.prototype=Object.assign(Object.create(ei.prototype),{constructor:ui,isLightProbe:!0,copy:function(e){return ei.prototype.copy.call(this,e),this.sh.copy(e.sh),this},fromJSON:function(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this},toJSON:function(e){const t=ei.prototype.toJSON.call(this,e);return t.object.sh=this.sh.toArray(),t}}),mi.prototype=Object.assign(Object.create(ba.prototype),{constructor:mi,load:function(t,e,r,a){const i=this,n=new Ma(i.manager);n.setPath(i.path),n.setRequestHeader(i.requestHeader),n.setWithCredentials(i.withCredentials),n.load(t,function(r){try{e(i.parse(JSON.parse(r)))}catch(r){a?a(r):console.error(r),i.manager.itemError(t)}},r,a)},parse:function(e){function t(e){return void 0===r[e]&&console.warn('THREE.MaterialLoader: Undefined texture',e),r[e]}const r=this.textures,a=new uu[e.type];if(void 0!==e.uuid&&(a.uuid=e.uuid),void 0!==e.name&&(a.name=e.name),void 0!==e.color&&void 0!==a.color&&a.color.setHex(e.color),void 0!==e.roughness&&(a.roughness=e.roughness),void 0!==e.metalness&&(a.metalness=e.metalness),void 0!==e.sheen&&(a.sheen=new Fl().setHex(e.sheen)),void 0!==e.emissive&&void 0!==a.emissive&&a.emissive.setHex(e.emissive),void 0!==e.specular&&void 0!==a.specular&&a.specular.setHex(e.specular),void 0!==e.shininess&&(a.shininess=e.shininess),void 0!==e.clearcoat&&(a.clearcoat=e.clearcoat),void 0!==e.clearcoatRoughness&&(a.clearcoatRoughness=e.clearcoatRoughness),void 0!==e.fog&&(a.fog=e.fog),void 0!==e.flatShading&&(a.flatShading=e.flatShading),void 0!==e.blending&&(a.blending=e.blending),void 0!==e.combine&&(a.combine=e.combine),void 0!==e.side&&(a.side=e.side),void 0!==e.opacity&&(a.opacity=e.opacity),void 0!==e.transparent&&(a.transparent=e.transparent),void 0!==e.alphaTest&&(a.alphaTest=e.alphaTest),void 0!==e.depthTest&&(a.depthTest=e.depthTest),void 0!==e.depthWrite&&(a.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(a.colorWrite=e.colorWrite),void 0!==e.stencilWrite&&(a.stencilWrite=e.stencilWrite),void 0!==e.stencilWriteMask&&(a.stencilWriteMask=e.stencilWriteMask),void 0!==e.stencilFunc&&(a.stencilFunc=e.stencilFunc),void 0!==e.stencilRef&&(a.stencilRef=e.stencilRef),void 0!==e.stencilFuncMask&&(a.stencilFuncMask=e.stencilFuncMask),void 0!==e.stencilFail&&(a.stencilFail=e.stencilFail),void 0!==e.stencilZFail&&(a.stencilZFail=e.stencilZFail),void 0!==e.stencilZPass&&(a.stencilZPass=e.stencilZPass),void 0!==e.wireframe&&(a.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(a.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(a.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(a.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(a.rotation=e.rotation),1!==e.linewidth&&(a.linewidth=e.linewidth),void 0!==e.dashSize&&(a.dashSize=e.dashSize),void 0!==e.gapSize&&(a.gapSize=e.gapSize),void 0!==e.scale&&(a.scale=e.scale),void 0!==e.polygonOffset&&(a.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(a.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(a.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.skinning&&(a.skinning=e.skinning),void 0!==e.morphTargets&&(a.morphTargets=e.morphTargets),void 0!==e.morphNormals&&(a.morphNormals=e.morphNormals),void 0!==e.dithering&&(a.dithering=e.dithering),void 0!==e.vertexTangents&&(a.vertexTangents=e.vertexTangents),void 0!==e.visible&&(a.visible=e.visible),void 0!==e.toneMapped&&(a.toneMapped=e.toneMapped),void 0!==e.userData&&(a.userData=e.userData),void 0!==e.vertexColors&&('number'==typeof e.vertexColors?a.vertexColors=!!(0<e.vertexColors):a.vertexColors=e.vertexColors),void 0!==e.uniforms)for(const r in e.uniforms){const i=e.uniforms[r];switch(a.uniforms[r]={},i.type){case't':a.uniforms[r].value=t(i.value);break;case'c':a.uniforms[r].value=new Fl().setHex(i.value);break;case'v2':a.uniforms[r].value=new hd().fromArray(i.value);break;case'v3':a.uniforms[r].value=new Sd().fromArray(i.value);break;case'v4':a.uniforms[r].value=new bd().fromArray(i.value);break;case'm3':a.uniforms[r].value=new yd().fromArray(i.value);break;case'm4':a.uniforms[r].value=new Jd().fromArray(i.value);break;default:a.uniforms[r].value=i.value;}}if(void 0!==e.defines&&(a.defines=e.defines),void 0!==e.vertexShader&&(a.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(a.fragmentShader=e.fragmentShader),void 0!==e.extensions)for(const t in e.extensions)a.extensions[t]=e.extensions[t];if(void 0!==e.shading&&(a.flatShading=1===e.shading),void 0!==e.size&&(a.size=e.size),void 0!==e.sizeAttenuation&&(a.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(a.map=t(e.map)),void 0!==e.matcap&&(a.matcap=t(e.matcap)),void 0!==e.alphaMap&&(a.alphaMap=t(e.alphaMap)),void 0!==e.bumpMap&&(a.bumpMap=t(e.bumpMap)),void 0!==e.bumpScale&&(a.bumpScale=e.bumpScale),void 0!==e.normalMap&&(a.normalMap=t(e.normalMap)),void 0!==e.normalMapType&&(a.normalMapType=e.normalMapType),void 0!==e.normalScale){let t=e.normalScale;!1===Array.isArray(t)&&(t=[t,t]),a.normalScale=new hd().fromArray(t)}return void 0!==e.displacementMap&&(a.displacementMap=t(e.displacementMap)),void 0!==e.displacementScale&&(a.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(a.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(a.roughnessMap=t(e.roughnessMap)),void 0!==e.metalnessMap&&(a.metalnessMap=t(e.metalnessMap)),void 0!==e.emissiveMap&&(a.emissiveMap=t(e.emissiveMap)),void 0!==e.emissiveIntensity&&(a.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(a.specularMap=t(e.specularMap)),void 0!==e.envMap&&(a.envMap=t(e.envMap)),void 0!==e.envMapIntensity&&(a.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(a.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(a.refractionRatio=e.refractionRatio),void 0!==e.lightMap&&(a.lightMap=t(e.lightMap)),void 0!==e.lightMapIntensity&&(a.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(a.aoMap=t(e.aoMap)),void 0!==e.aoMapIntensity&&(a.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(a.gradientMap=t(e.gradientMap)),void 0!==e.clearcoatMap&&(a.clearcoatMap=t(e.clearcoatMap)),void 0!==e.clearcoatRoughnessMap&&(a.clearcoatRoughnessMap=t(e.clearcoatRoughnessMap)),void 0!==e.clearcoatNormalMap&&(a.clearcoatNormalMap=t(e.clearcoatNormalMap)),void 0!==e.clearcoatNormalScale&&(a.clearcoatNormalScale=new hd().fromArray(e.clearcoatNormalScale)),void 0!==e.transmission&&(a.transmission=e.transmission),void 0!==e.transmissionMap&&(a.transmissionMap=t(e.transmissionMap)),a},setTextures:function(e){return this.textures=e,this}});const Su={decodeText:function(e){if('undefined'!=typeof TextDecoder)return new TextDecoder().decode(e);let t='';for(let r=0,a=e.length;r<a;r++)t+=String.fromCharCode(e[r]);try{return decodeURIComponent(escape(t))}catch(r){return t}},extractUrlBase:function(e){const t=e.lastIndexOf('/');return-1===t?'./':e.substr(0,t+1)}};fi.prototype=Object.assign(Object.create(A.prototype),{constructor:fi,isInstancedBufferGeometry:!0,copy:function(e){return A.prototype.copy.call(this,e),this.instanceCount=e.instanceCount,this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){const e=A.prototype.toJSON.call(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}),gi.prototype=Object.assign(Object.create(g.prototype),{constructor:gi,isInstancedBufferAttribute:!0,copy:function(e){return g.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},toJSON:function(){const e=g.prototype.toJSON.call(this);return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}),hi.prototype=Object.assign(Object.create(ba.prototype),{constructor:hi,load:function(t,e,r,a){const i=this,n=new Ma(i.manager);n.setPath(i.path),n.setRequestHeader(i.requestHeader),n.setWithCredentials(i.withCredentials),n.load(t,function(r){try{e(i.parse(JSON.parse(r)))}catch(r){a?a(r):console.error(r),i.manager.itemError(t)}},r,a)},parse:function(e){function t(e,t){if(void 0!==a[t])return a[t];const i=e.interleavedBuffers,n=i[t],o=r(e,n.buffer),s=L(n.type,o),d=new Vt(s,n.stride);return d.uuid=n.uuid,a[t]=d,d}function r(e,t){if(void 0!==i[t])return i[t];const r=e.arrayBuffers,a=r[t],n=new Uint32Array(a).buffer;return i[t]=n,n}const a={},i={},n=e.isInstancedBufferGeometry?new fi:new A,o=e.data.index;if(void 0!==o){const e=L(o.type,o.array);n.setIndex(new g(e,1))}const s=e.data.attributes;for(const r in s){const a=s[r];let i;if(a.isInterleavedBufferAttribute){const r=t(e.data,a.data);i=new kt(r,a.itemSize,a.offset,a.normalized)}else{const e=L(a.type,a.array),t=a.isInstancedBufferAttribute?gi:g;i=new t(e,a.itemSize,a.normalized)}void 0!==a.name&&(i.name=a.name),n.setAttribute(r,i)}const d=e.data.morphAttributes;if(d)for(const r in d){const a=d[r],o=[];for(let r=0,i=a.length;r<i;r++){const i=a[r];let n;if(i.isInterleavedBufferAttribute){const r=t(e.data,i.data);n=new kt(r,i.itemSize,i.offset,i.normalized)}else{const e=L(i.type,i.array);n=new g(e,i.itemSize,i.normalized)}void 0!==i.name&&(n.name=i.name),o.push(n)}n.morphAttributes[r]=o}const l=e.data.morphTargetsRelative;l&&(n.morphTargetsRelative=!0);const p=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==p)for(let e=0,t=p.length;e!==t;++e){const t=p[e];n.addGroup(t.start,t.count,t.materialIndex)}const c=e.data.boundingSphere;if(void 0!==c){const e=new Sd;void 0!==c.center&&e.fromArray(c.center),n.boundingSphere=new Od(e,c.radius)}return e.name&&(n.name=e.name),e.userData&&(n.userData=e.userData),n}});const Tu={UVMapping:go,CubeReflectionMapping:ho,CubeRefractionMapping:yo,EquirectangularReflectionMapping:vo,EquirectangularRefractionMapping:xo,CubeUVReflectionMapping:_o,CubeUVRefractionMapping:bo},Eu={RepeatWrapping:Mo,ClampToEdgeWrapping:So,MirroredRepeatWrapping:To},wu={NearestFilter:Eo,NearestMipmapNearestFilter:wo,NearestMipmapLinearFilter:Lo,LinearFilter:Ao,LinearMipmapNearestFilter:Ro,LinearMipmapLinearFilter:Co};yi.prototype=Object.assign(Object.create(ba.prototype),{constructor:yi,isImageBitmapLoader:!0,setOptions:function(e){return this.options=e,this},load:function(t,e,r,a){t===void 0&&(t=''),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,n=fu.get(t);if(void 0!==n)return i.manager.itemStart(t),setTimeout(function(){e&&e(n),i.manager.itemEnd(t)},0),n;const o={};o.credentials='anonymous'===this.crossOrigin?'same-origin':'include',fetch(t,o).then(function(e){return e.blob()}).then(function(e){return createImageBitmap(e,i.options)}).then(function(r){fu.add(t,r),e&&e(r),i.manager.itemEnd(t)}).catch(function(r){a&&a(r),i.manager.itemError(t),i.manager.itemEnd(t)}),i.manager.itemStart(t)}}),Object.assign(vi.prototype,{moveTo:function(e,t){return this.currentPath=new Ka,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this},lineTo:function(e,t){return this.currentPath.lineTo(e,t),this},quadraticCurveTo:function(e,t,r,a){return this.currentPath.quadraticCurveTo(e,t,r,a),this},bezierCurveTo:function(e,t,r,a,i,n){return this.currentPath.bezierCurveTo(e,t,r,a,i,n),this},splineThru:function(e){return this.currentPath.splineThru(e),this},toShapes:function(e,t){function r(e){const t=[];for(let r=0,a=e.length;r<a;r++){const a=e[r],i=new $a;i.curves=a.curves,t.push(i)}return t}function a(e,t){const r=t.length;let a=!1;for(let i=r-1,n=0;n<r;i=n++){let r=t[i],o=t[n],s=o.x-r.x,d=o.y-r.y;if(on(d)>rn){if(0>d&&(r=t[n],s=-s,o=t[i],d=-d),e.y<r.y||e.y>o.y)continue;if(e.y!==r.y){const t=d*(e.x-r.x)-s*(e.y-r.y);if(0==t)return!0;if(0>t)continue;a=!a}else if(e.x===r.x)return!0}else{if(e.y!==r.y)continue;if(o.x<=e.x&&e.x<=r.x||r.x<=e.x&&e.x<=o.x)return!0}}return a}const n=Yc.isClockWise,o=this.subPaths;if(0===o.length)return[];if(!0===t)return r(o);let s,d,l;const p=[];if(1===o.length)return d=o[0],l=new $a,l.curves=d.curves,p.push(l),p;let c=!n(o[0].getPoints());c=e?!c:c;const i=[],u=[];let m=[],f=0,g;u[f]=void 0,m[f]=[];for(let r=0,a=o.length;r<a;r++)d=o[r],g=d.getPoints(),s=n(g),s=e?!s:s,s?(!c&&u[f]&&f++,u[f]={s:new $a,p:g},u[f].s.curves=d.curves,c&&f++,m[f]=[]):m[f].push({h:d,p:g[0]});if(!u[0])return r(o);if(1<u.length){let e=!1;const t=[];for(let e=0,t=u.length;e<t;e++)i[e]=[];for(let r=0,n=u.length;r<n;r++){const n=m[r];for(let o=0;o<n.length;o++){const s=n[o];let d=!0;for(let n=0;n<u.length;n++)a(s.p,u[n].p)&&(r!==n&&t.push({froms:r,tos:n,hole:o}),d?(d=!1,i[n].push(s)):e=!0);d&&i[r].push(s)}}0<t.length&&!e&&(m=i)}let h;for(let r=0,a=u.length;r<a;r++){l=u[r].s,p.push(l),h=m[r];for(let e=0,t=h.length;e<t;e++)l.holes.push(h[e].h)}return p}}),Object.assign(xi.prototype,{isFont:!0,generateShapes:function(e,t=100){const r=[],a=_i(e,t,this.data);for(let i=0,n=a.length;i<n;i++)Array.prototype.push.apply(r,a[i].toShapes());return r}}),Mi.prototype=Object.assign(Object.create(ba.prototype),{constructor:Mi,load:function(e,t,r,a){const i=this,n=new Ma(this.manager);n.setPath(this.path),n.setRequestHeader(this.requestHeader),n.setWithCredentials(i.withCredentials),n.load(e,function(e){let r;try{r=JSON.parse(e)}catch(t){console.warn('THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.'),r=JSON.parse(e.substring(65,e.length-2))}const a=i.parse(r);t&&t(a)},r,a)},parse:function(e){return new xi(e)}});let Lu;const Au={getContext:function(){return void 0===Lu&&(Lu=new(window.AudioContext||window.webkitAudioContext)),Lu},setContext:function(e){Lu=e}};Si.prototype=Object.assign(Object.create(ba.prototype),{constructor:Si,load:function(t,e,r,a){const i=this,n=new Ma(i.manager);n.setResponseType('arraybuffer'),n.setPath(i.path),n.setRequestHeader(i.requestHeader),n.setWithCredentials(i.withCredentials),n.load(t,function(r){try{const t=r.slice(0),a=Au.getContext();a.decodeAudioData(t,function(t){e(t)})}catch(r){a?a(r):console.error(r),i.manager.itemError(t)}},r,a)}}),Ti.prototype=Object.assign(Object.create(ui.prototype),{constructor:Ti,isHemisphereLightProbe:!0,copy:function(e){return ui.prototype.copy.call(this,e),this},toJSON:function(e){const t=ui.prototype.toJSON.call(this,e);return t}}),Ei.prototype=Object.assign(Object.create(ui.prototype),{constructor:Ei,isAmbientLightProbe:!0,copy:function(e){return ui.prototype.copy.call(this,e),this},toJSON:function(e){const t=ui.prototype.toJSON.call(this,e);return t}});const Ru=new Jd,Cu=new Jd;Object.assign(function(){this.type='StereoCamera',this.aspect=1,this.eyeSep=.064,this.cameraL=new B,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new B,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}.prototype,{update:function(e){const t=this._cache,r=t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep;if(r){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep;const r=e.projectionMatrix.clone(),a=t.eyeSep/2,i=a*t.near/t.focus,n=t.near*en(.5*(gd.DEG2RAD*t.fov))/t.zoom;let o,s;Cu.elements[12]=-a,Ru.elements[12]=a,o=-n*t.aspect+i,s=n*t.aspect+i,r.elements[0]=2*t.near/(s-o),r.elements[8]=(s+o)/(s-o),this.cameraL.projectionMatrix.copy(r),o=-n*t.aspect-i,s=n*t.aspect-i,r.elements[0]=2*t.near/(s-o),r.elements[8]=(s+o)/(s-o),this.cameraR.projectionMatrix.copy(r)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Cu),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Ru)}});class Pu{constructor(e){this.autoStart=!(e!==void 0)||e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=wi(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=wi();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}const Iu=new Sd,Nu=new Md,Du=new Sd,zu=new Sd;class Bu extends l{constructor(e){super(),this.type='Audio',this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType='empty',this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType='audioNode',this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType='mediaNode',this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType='mediaStreamNode',this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType='buffer',this.autoplay&&this.play(),this}play(e=0){if(!0===this.isPlaying)return void console.warn('THREE.Audio: Audio is already playing.');if(!1===this.hasPlaybackControl)return void console.warn('THREE.Audio: this Audio has no playback control.');this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){return!1===this.hasPlaybackControl?void console.warn('THREE.Audio: this Audio has no playback control.'):(!0===this.isPlaying&&(this._progress+=hn(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress%=this.duration||this.buffer.duration),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this)}stop(){return!1===this.hasPlaybackControl?void console.warn('THREE.Audio: this Audio has no playback control.'):(this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this)}connect(){if(0<this.filters.length){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(0<this.filters.length){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){return!1===this.hasPlaybackControl?void console.warn('THREE.Audio: this Audio has no playback control.'):(this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this)}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn('THREE.Audio: this Audio has no playback control.'),!1):this.loop}setLoop(e){return!1===this.hasPlaybackControl?void console.warn('THREE.Audio: this Audio has no playback control.'):(this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this)}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const Uu=new Sd,Hu=new Md,Fu=new Sd,Gu=new Sd;Object.assign(Li.prototype,{accumulate:function(e,t){const r=this.buffer,a=this.valueSize,n=e*a+a;let i=this.cumulativeWeight;if(0===i){for(let e=0;e!==a;++e)r[n+e]=r[e];i=t}else{i+=t;const e=t/i;this._mixBufferRegion(r,n,0,e,a)}this.cumulativeWeight=i},accumulateAdditive:function(e){const t=this.buffer,r=this.valueSize,a=r*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,a,0,e,r),this.cumulativeWeightAdditive+=e},apply:function(e){const t=this.valueSize,r=this.buffer,a=e*t+t,i=this.cumulativeWeight,n=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,1>i){const e=t*this._origIndex;this._mixBufferRegion(r,a,e,1-i,t)}0<n&&this._mixBufferRegionAdditive(r,a,this._addIndex*t,1,t);for(let n=t;n!==t+t;++n)if(r[n]!==r[n+t]){o.setValue(r,a);break}},saveOriginalState:function(){const e=this.binding,t=this.buffer,r=this.valueSize,a=r*this._origIndex;e.getValue(t,a);for(let e=r;e!==a;++e)t[e]=t[a+e%r];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0},restoreOriginalState:function(){const e=3*this.valueSize;this.binding.setValue(this.buffer,e)},_setAdditiveIdentityNumeric:function(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let r=e;r<t;r++)this.buffer[r]=0},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1},_setAdditiveIdentityOther:function(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let r=0;r<this.valueSize;r++)this.buffer[t+r]=this.buffer[e+r]},_select:function(e,r,a,i,t){if(.5<=i)for(let n=0;n!==t;++n)e[r+n]=e[a+n]},_slerp:function(e,r,a,i){Md.slerpFlat(e,r,e,r,e,a,i)},_slerpAdditive:function(e,r,a,i,t){const n=this._workIndex*t;Md.multiplyQuaternionsFlat(e,n,e,r,e,a),Md.slerpFlat(e,r,e,r,e,n,i)},_lerp:function(e,r,a,n,t){for(let o=0;o!==t;++o){const t=r+o;e[t]=e[t]*(1-n)+e[a+o]*n}},_lerpAdditive:function(e,r,a,n,t){for(let o=0;o!==t;++o){const t=r+o;e[t]+=e[a+o]*n}}});const Ou='\\[\\]\\.:\\/',Vu=/[\[\]\.:\/]/g,ku='[^'+Ou+']',Wu='[^'+Ou.replace('\\.','')+']',ju=/((?:WC+[\/:])*)/.source.replace('WC',ku),Xu=/(WCOD+)?/.source.replace('WCOD',Wu),qu=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace('WC',ku),Yu=/\.(WC+)(?:\[(.+)\])?/.source.replace('WC',ku),Zu=new RegExp('^'+ju+Xu+qu+Yu+'$'),Ju=['material','materials','bones'];Object.assign(Ai.prototype,{getValue:function(e,t){this.bind();const r=this._targetGroup.nCachedObjects_,a=this._bindings[r];a!==void 0&&a.getValue(e,t)},setValue:function(e,t){const r=this._bindings;for(let a=this._targetGroup.nCachedObjects_,i=r.length;a!==i;++a)r[a].setValue(e,t)},bind:function(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,r=e.length;t!==r;++t)e[t].bind()},unbind:function(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,r=e.length;t!==r;++t)e[t].unbind()}}),Object.assign(Ri,{Composite:Ai,create:function(e,t,r){return e&&e.isAnimationObjectGroup?new Ri.Composite(e,t,r):new Ri(e,t,r)},sanitizeNodeName:function(e){return e.replace(/\s/g,'_').replace(Vu,'')},parseTrackName:function(e){const t=Zu.exec(e);if(!t)throw new Error('PropertyBinding: Cannot parse trackName: '+e);const r={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},a=r.nodeName&&r.nodeName.lastIndexOf('.');if(a!==void 0&&-1!==a){const e=r.nodeName.substring(a+1);-1!==Ju.indexOf(e)&&(r.nodeName=r.nodeName.substring(0,a),r.objectName=e)}if(null===r.propertyName||0===r.propertyName.length)throw new Error('PropertyBinding: can not parse propertyName from trackName: '+e);return r},findNode:function(e,t){if(!t||''===t||'.'===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){const r=e.skeleton.getBoneByName(t);if(void 0!==r)return r}if(e.children){const r=function(e){for(let a=0;a<e.length;a++){const i=e[a];if(i.name===t||i.uuid===t)return i;const n=r(i.children);if(n)return n}return null},a=r(e.children);if(a)return a}return null}}),Object.assign(Ri.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(e,t){e[t]=this.node[this.propertyName]},function(e,t){const r=this.resolvedProperty;for(let a=0,i=r.length;a!==i;++a)e[t++]=r[a]},function(e,t){e[t]=this.resolvedProperty[this.propertyIndex]},function(e,t){this.resolvedProperty.toArray(e,t)}],SetterByBindingTypeAndVersioning:[[function(e,t){this.targetObject[this.propertyName]=e[t]},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){const r=this.resolvedProperty;for(let a=0,i=r.length;a!==i;++a)r[a]=e[t++]},function(e,t){const r=this.resolvedProperty;for(let a=0,i=r.length;a!==i;++a)r[a]=e[t++];this.targetObject.needsUpdate=!0},function(e,t){const r=this.resolvedProperty;for(let a=0,i=r.length;a!==i;++a)r[a]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty[this.propertyIndex]=e[t]},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty.fromArray(e,t)},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(e,t){this.bind(),this.getValue(e,t)},setValue:function(e,t){this.bind(),this.setValue(e,t)},bind:function(){let e=this.node;const t=this.parsedPath,r=t.objectName,a=t.propertyName;let i=t.propertyIndex;if(e||(e=Ri.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return void console.error('THREE.PropertyBinding: Trying to update node for track: '+this.path+' but it wasn\'t found.');if(r){let a=t.objectIndex;switch(r){case'materials':if(!e.material)return void console.error('THREE.PropertyBinding: Can not bind to material as node does not have a material.',this);if(!e.material.materials)return void console.error('THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.',this);e=e.material.materials;break;case'bones':if(!e.skeleton)return void console.error('THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.',this);e=e.skeleton.bones;for(let t=0;t<e.length;t++)if(e[t].name===a){a=t;break}break;default:if(void 0===e[r])return void console.error('THREE.PropertyBinding: Can not bind to objectName of node undefined.',this);e=e[r];}if(void 0!==a){if(void 0===e[a])return void console.error('THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.',this,e);e=e[a]}}const n=e[a];if(void 0===n){const r=t.nodeName;return void console.error('THREE.PropertyBinding: Trying to update property for track: '+r+'.'+a+' but it wasn\'t found.',e)}let o=this.Versioning.None;this.targetObject=e,void 0===e.needsUpdate?void 0!==e.matrixWorldNeedsUpdate&&(o=this.Versioning.MatrixWorldNeedsUpdate):o=this.Versioning.NeedsUpdate;let s=this.BindingType.Direct;if(void 0!==i){if('morphTargetInfluences'===a){if(!e.geometry)return void console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.',this);if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes)return void console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.',this);void 0!==e.morphTargetDictionary[i]&&(i=e.morphTargetDictionary[i])}else return void console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.',this)}s=this.BindingType.ArrayElement,this.resolvedProperty=n,this.propertyIndex=i}else void 0!==n.fromArray&&void 0!==n.toArray?(s=this.BindingType.HasFromToArray,this.resolvedProperty=n):Array.isArray(n)?(s=this.BindingType.EntireArray,this.resolvedProperty=n):this.propertyName=a;this.getValue=this.GetterByBindingType[s],this.setValue=this.SetterByBindingTypeAndVersioning[s][o]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(Ri.prototype,{_getValue_unbound:Ri.prototype.getValue,_setValue_unbound:Ri.prototype.setValue}),Object.assign(function(){this.uuid=gd.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let t=0,r=arguments.length;t!==r;++t)e[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}.prototype,{isAnimationObjectGroup:!0,add:function(){const e=this._objects,t=this._indicesByUUID,r=this._paths,a=this._parsedPaths,i=this._bindings,n=i.length;let o=e.length,s=this.nCachedObjects_,d;for(let l=0,p=arguments.length;l!==p;++l){const p=arguments[l],c=p.uuid;let u=t[c];if(u===void 0){u=o++,t[c]=u,e.push(p);for(let e=0;e!==n;++e)i[e].push(new Ri(p,r[e],a[e]))}else if(u<s){d=e[u];const o=--s,l=e[o];t[l.uuid]=u,e[u]=l,t[c]=o,e[o]=p;for(let e=0;e!==n;++e){const t=i[e],n=t[o];let s=t[u];t[u]=n,s===void 0&&(s=new Ri(p,r[e],a[e])),t[o]=s}}else e[u]!==d&&console.error('THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.')}this.nCachedObjects_=s},remove:function(){const e=this._objects,t=this._indicesByUUID,r=this._bindings,a=r.length;let n=this.nCachedObjects_;for(let o=0,i=arguments.length;o!==i;++o){const i=arguments[o],s=i.uuid,d=t[s];if(d!==void 0&&d>=n){const o=n++,l=e[o];t[l.uuid]=d,e[d]=l,t[s]=o,e[o]=i;for(let e=0;e!==a;++e){const t=r[e],a=t[o],i=t[d];t[d]=a,t[o]=i}}}this.nCachedObjects_=n},uncache:function(){const e=this._objects,t=this._indicesByUUID,r=this._bindings,a=r.length;let n=this.nCachedObjects_,i=e.length;for(let o=0,s=arguments.length;o!==s;++o){const s=arguments[o],d=s.uuid,l=t[d];if(void 0!==l)if(delete t[d],l<n){const o=--n,s=e[o],d=--i,p=e[d];t[s.uuid]=l,e[l]=s,t[p.uuid]=o,e[o]=p,e.pop();for(let e=0;e!==a;++e){const t=r[e],a=t[o],i=t[d];t[l]=a,t[o]=i,t.pop()}}else{const n=--i,o=e[n];0<n&&(t[o.uuid]=l),e[l]=o,e.pop();for(let e=0;e!==a;++e){const t=r[e];t[l]=t[n],t.pop()}}}this.nCachedObjects_=n},subscribe_:function(e,t){const r=this._bindingsIndicesByPath;let a=r[e];const i=this._bindings;if(a!==void 0)return i[a];const n=this._paths,o=this._parsedPaths,s=this._objects,d=s.length,l=this.nCachedObjects_,p=Array(d);a=i.length,r[e]=a,n.push(e),o.push(t),i.push(p);for(let r=l,a=s.length;r!==a;++r){const a=s[r];p[r]=new Ri(a,e,t)}return p},unsubscribe_:function(e){const t=this._bindingsIndicesByPath,r=t[e];if(r!==void 0){const a=this._paths,i=this._parsedPaths,n=this._bindings,o=n.length-1,s=n[o],d=e[o];t[d]=r,n[r]=s,n.pop(),i[r]=i[o],i.pop(),a[r]=a[o],a.pop()}}});class Qu{constructor(e,t,r=null,a=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=r,this.blendMode=a;const n=t.tracks,o=n.length,s=Array(o),d={endingStart:js,endingEnd:js};for(let l=0;l!==o;++l){const e=n[l].createInterpolant(null);s[l]=e,e.settings=d}this._interpolantSettings=d,this._interpolants=s,this._propertyBindings=Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=Infinity,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,r){if(e.fadeOut(t),this.fadeIn(t),r){const r=this._clip.duration,a=e._clip.duration;e.warp(1,a/r,t),this.warp(r/a,1,t)}return this}crossFadeTo(e,t,r){return e.crossFadeFrom(this,t,r)}stopFading(){const e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,r){const a=this._mixer,i=a.time,n=this.timeScale;let o=this._timeScaleInterpolant;null===o&&(o=a._lendControlInterpolant(),this._timeScaleInterpolant=o);const s=o.parameterPositions,d=o.sampleValues;return s[0]=i,s[1]=i+r,d[0]=e/n,d[1]=t/n,this}stopWarping(){const e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,r,a){if(!this.enabled)return void this._updateWeight(e);const i=this._startTime;if(null!==i){const a=(e-i)*r;if(0>a||0===r)return;this._startTime=null,t=r*a}t*=this._updateTimeScale(e);const n=this._updateTime(t),o=this._updateWeight(e);if(0<o){const e=this._interpolants,t=this._propertyBindings;switch(this.blendMode){case Zs:for(let r=0,a=e.length;r!==a;++r)e[r].evaluate(n),t[r].accumulateAdditive(o);break;case Ys:default:for(let r=0,i=e.length;r!==i;++r)e[r].evaluate(n),t[r].accumulate(a,o);}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const r=this._weightInterpolant;if(null!==r){const a=r.evaluate(e)[0];t*=a,e>r.parameterPositions[1]&&(this.stopFading(),0===a&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const r=this._timeScaleInterpolant;if(null!==r){const a=r.evaluate(e)[0];t*=a,e>r.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,r=this.loop;let a=this.time+e,i=this._loopCount;const n=r===2202;if(0===e)return-1===i?a:n&&1==(1&i)?t-a:a;if(r===2200){-1===i&&(this._loopCount=0,this._setEndings(!0,!0,!1));handle_stop:{if(a>=t)a=t;else if(0>a)a=0;else{this.time=a;break handle_stop}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=a,this._mixer.dispatchEvent({type:'finished',action:this,direction:0>e?-1:1})}}else{if(-1===i&&(0<=e?(i=0,this._setEndings(!0,0===this.repetitions,n)):this._setEndings(0===this.repetitions,!0,n)),a>=t||0>a){const r=gn(a/t);a-=t*r,i+=on(r);const o=this.repetitions-i;if(0>=o)this.clampWhenFinished?this.paused=!0:this.enabled=!1,a=0<e?t:0,this.time=a,this._mixer.dispatchEvent({type:'finished',action:this,direction:0<e?1:-1});else{if(1==o){const t=0>e;this._setEndings(t,!t,n)}else this._setEndings(!1,!1,n);this._loopCount=i,this.time=a,this._mixer.dispatchEvent({type:'loop',action:this,loopDelta:r})}}else this.time=a;if(n&&1==(1&i))return t-a}return a}_setEndings(e,t,r){const a=this._interpolantSettings;r?(a.endingStart=Xs,a.endingEnd=Xs):(a.endingStart=e?this.zeroSlopeAtStart?Xs:js:qs,a.endingEnd=t?this.zeroSlopeAtEnd?Xs:js:qs)}_scheduleFading(e,t,r){const a=this._mixer,i=a.time;let n=this._weightInterpolant;null===n&&(n=a._lendControlInterpolant(),this._weightInterpolant=n);const o=n.parameterPositions,s=n.sampleValues;return o[0]=i,s[0]=t,o[1]=i+e,s[1]=r,this}}Ci.prototype=Object.assign(Object.create(a.prototype),{constructor:Ci,_bindAction:function(e,t){const r=e._localRoot||this._root,a=e._clip.tracks,n=a.length,o=e._propertyBindings,s=e._interpolants,d=r.uuid,i=this._bindingsByRootAndName;let l=i[d];l===void 0&&(l={},i[d]=l);for(let p=0;p!==n;++p){const e=a[p],i=e.name;let n=l[i];if(void 0!==n)o[p]=n;else{if(n=o[p],void 0!==n){null===n._cacheIndex&&(++n.referenceCount,this._addInactiveBinding(n,d,i));continue}const a=t&&t._propertyBindings[p].binding.parsedPath;n=new Li(Ri.create(r,i,a),e.ValueTypeName,e.getValueSize()),++n.referenceCount,this._addInactiveBinding(n,d,i),o[p]=n}s[p].resultBuffer=n.buffer}},_activateAction:function(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){const t=(e._localRoot||this._root).uuid,r=e._clip.uuid,a=this._actionsByClip[r];this._bindAction(e,a&&a.knownActions[0]),this._addInactiveAction(e,r,t)}const t=e._propertyBindings;for(let e=0,r=t.length;e!==r;++e){const r=t[e];0==r.useCount++&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}},_deactivateAction:function(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let e=0,r=t.length;e!==r;++e){const r=t[e];0==--r.useCount&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}},_isActiveAction:function(e){const t=e._cacheIndex;return null!==t&&t<this._nActiveActions},_addInactiveAction:function(e,t,r){const a=this._actions,i=this._actionsByClip;let n=i[t];if(n===void 0)n={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,i[t]=n;else{const t=n.knownActions;e._byClipCacheIndex=t.length,t.push(e)}e._cacheIndex=a.length,a.push(e),n.actionByRoot[r]=e},_removeInactiveAction:function(e){const t=this._actions,r=t[t.length-1],a=e._cacheIndex;r._cacheIndex=a,t[a]=r,t.pop(),e._cacheIndex=null;const i=e._clip.uuid,n=this._actionsByClip,o=n[i],s=o.knownActions,d=s[s.length-1],l=e._byClipCacheIndex;d._byClipCacheIndex=l,s[l]=d,s.pop(),e._byClipCacheIndex=null;const p=o.actionByRoot,c=(e._localRoot||this._root).uuid;delete p[c],0===s.length&&delete n[i],this._removeInactiveBindingsForAction(e)},_removeInactiveBindingsForAction:function(e){const t=e._propertyBindings;for(let r=0,a=t.length;r!==a;++r){const e=t[r];0==--e.referenceCount&&this._removeInactiveBinding(e)}},_lendAction:function(e){const t=this._actions,r=e._cacheIndex,a=this._nActiveActions++,i=t[a];e._cacheIndex=a,t[a]=e,i._cacheIndex=r,t[r]=i},_takeBackAction:function(e){const t=this._actions,r=e._cacheIndex,a=--this._nActiveActions,i=t[a];e._cacheIndex=a,t[a]=e,i._cacheIndex=r,t[r]=i},_addInactiveBinding:function(e,t,r){const a=this._bindingsByRootAndName,i=this._bindings;let n=a[t];n===void 0&&(n={},a[t]=n),n[r]=e,e._cacheIndex=i.length,i.push(e)},_removeInactiveBinding:function(e){const t=this._bindings,r=e.binding,a=r.rootNode.uuid,i=r.path,n=this._bindingsByRootAndName,o=n[a],s=t[t.length-1],d=e._cacheIndex;s._cacheIndex=d,t[d]=s,t.pop(),delete o[i],0===Object.keys(o).length&&delete n[a]},_lendBinding:function(e){const t=this._bindings,r=e._cacheIndex,a=this._nActiveBindings++,i=t[a];e._cacheIndex=a,t[a]=e,i._cacheIndex=r,t[r]=i},_takeBackBinding:function(e){const t=this._bindings,r=e._cacheIndex,a=--this._nActiveBindings,i=t[a];e._cacheIndex=a,t[a]=e,i._cacheIndex=r,t[r]=i},_lendControlInterpolant:function(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let r=e[t];return void 0===r&&(r=new sa(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),r.__cacheIndex=t,e[t]=r),r},_takeBackControlInterpolant:function(e){const t=this._controlInterpolants,r=e.__cacheIndex,a=--this._nActiveControlInterpolants,i=t[a];e.__cacheIndex=a,t[a]=e,i.__cacheIndex=r,t[r]=i},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(e,t,r){const a=t||this._root,i=a.uuid;let n='string'==typeof e?ya.findByName(a,e):e;const o=null===n?e:n.uuid,s=this._actionsByClip[o];let d=null;if(void 0===r&&(null===n?r=Ys:r=n.blendMode),void 0!==s){const e=s.actionByRoot[i];if(void 0!==e&&e.blendMode===r)return e;d=s.knownActions[0],null===n&&(n=d._clip)}if(null===n)return null;const l=new Qu(this,n,t,r);return this._bindAction(l,d),this._addInactiveAction(l,o,i),l},existingAction:function(e,t){const r=t||this._root,a=r.uuid,i='string'==typeof e?ya.findByName(r,e):e,n=i?i.uuid:e,o=this._actionsByClip[n];return void 0===o?null:o.actionByRoot[a]||null},stopAllAction:function(){const e=this._actions,t=this._nActiveActions;for(let r=t-1;0<=r;--r)e[r].stop();return this},update:function(e){e*=this.timeScale;const t=this._actions,r=this._nActiveActions,a=this.time+=e,n=Ki(e),o=this._accuIndex^=1;for(let s=0;s!==r;++s){const r=t[s];r._update(a,e,n,o)}const s=this._bindings,d=this._nActiveBindings;for(let t=0;t!==d;++t)s[t].apply(o);return this},setTime:function(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)},getRoot:function(){return this._root},uncacheClip:function(e){const t=this._actions,r=e.uuid,a=this._actionsByClip,i=a[r];if(i!==void 0){const e=i.knownActions;for(let r=0,a=e.length;r!==a;++r){const a=e[r];this._deactivateAction(a);const i=a._cacheIndex,n=t[t.length-1];a._cacheIndex=null,a._byClipCacheIndex=null,n._cacheIndex=i,t[i]=n,t.pop(),this._removeInactiveBindingsForAction(a)}delete a[r]}},uncacheRoot:function(e){const t=e.uuid,r=this._actionsByClip;for(const a in r){const e=r[a].actionByRoot,i=e[t];i!==void 0&&(this._deactivateAction(i),this._removeInactiveAction(i))}const a=this._bindingsByRootAndName,i=a[t];if(i!==void 0)for(const e in i){const t=i[e];t.restoreOriginalState(),this._removeInactiveBinding(t)}},uncacheAction:function(e,t){const r=this.existingAction(e,t);null!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}});class Ku{constructor(e){'string'==typeof e&&(console.warn('THREE.Uniform: Type parameter is no longer needed.'),e=arguments[1]),this.value=e}clone(){return new Ku(this.value.clone===void 0?this.value:this.value.clone())}}Pi.prototype=Object.assign(Object.create(Vt.prototype),{constructor:Pi,isInstancedInterleavedBuffer:!0,copy:function(e){return Vt.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},clone:function(e){const t=Vt.prototype.clone.call(this,e);return t.meshPerAttribute=this.meshPerAttribute,t},toJSON:function(e){const t=Vt.prototype.toJSON.call(this,e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}),Object.defineProperty(Ii.prototype,'needsUpdate',{set:function(e){!0===e&&this.version++}}),Object.assign(Ii.prototype,{isGLBufferAttribute:!0,setBuffer:function(e){return this.buffer=e,this},setType:function(e,t){return this.type=e,this.elementSize=t,this},setItemSize:function(e){return this.itemSize=e,this},setCount:function(e){return this.count=e,this}}),Object.assign(Ni.prototype,{set:function(e,t){this.ray.set(e,t)},setFromCamera:function(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error('THREE.Raycaster: Unsupported camera type: '+t.type)},intersectObject:function(e,t,r){const a=r||[];return zi(e,this,a,t),a.sort(Di),a},intersectObjects:function(e,t,r){const a=r||[];if(!1===Array.isArray(e))return console.warn('THREE.Raycaster.intersectObjects: objects is not an Array.'),a;for(let n=0,i=e.length;n<i;n++)zi(e[n],this,a,t);return a.sort(Di),a}});const $u=new hd;const em=new Sd,tm=new Sd;Bi.prototype=Object.create(l.prototype),Bi.prototype.constructor=Bi,Bi.prototype.isImmediateRenderObject=!0;const rm=new Sd;const am=new Sd,im=new Jd,nm=new Jd;const om=new Sd,sm=new Fl,dm=new Fl;const lm=new Sd,pm=new Sd,cm=new Sd;const um=new Sd,mm=new z;const fm=new wd;class gm extends er{constructor(e,t=16776960){const r=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),a=new Float32Array(24),i=new A;i.setIndex(new g(r,1)),i.setAttribute('position',new g(a,3)),super(i,new Kt({color:t,toneMapped:!1})),this.object=e,this.type='BoxHelper',this.matrixAutoUpdate=!1,this.update()}update(e){if(void 0!==e&&console.warn('THREE.BoxHelper: .update() has no longer arguments.'),void 0!==this.object&&fm.setFromObject(this.object),!fm.isEmpty()){const e=fm.min,t=fm.max,r=this.geometry.attributes.position,a=r.array;a[0]=t.x,a[1]=t.y,a[2]=t.z,a[3]=e.x,a[4]=t.y,a[5]=t.z,a[6]=e.x,a[7]=e.y,a[8]=t.z,a[9]=t.x,a[10]=e.y,a[11]=t.z,a[12]=t.x,a[13]=t.y,a[14]=e.z,a[15]=e.x,a[16]=t.y,a[17]=e.z,a[18]=e.x,a[19]=e.y,a[20]=e.z,a[21]=t.x,a[22]=e.y,a[23]=e.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}}setFromObject(e){return this.object=e,this.update(),this}copy(e){return er.prototype.copy.call(this,e),this.object=e.object,this}}const hm=new Sd;let ym,vm;class xm extends er{constructor(e=1){const t=new A;t.setAttribute('position',new E([0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],3)),t.setAttribute('color',new E([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));const r=new Kt({vertexColors:!0,toneMapped:!1});super(t,r),this.type='AxesHelper'}}const _m=new Float32Array(1),bm=new Int32Array(_m.buffer),Mm=4,Sm=8,Tm=256,Em=[.125,.215,.35,.446,.526,.582],wm=Sm-Mm+1+Em.length,Lm=20,Am={[Js]:0,[Qs]:1,[$s]:2,[td]:3,[rd]:4,[ad]:5,[Ks]:6},Rm=new si,{_lodPlanes:Cm,_sizeLods:Pm,_sigmas:Im}=function(){const e=[],t=[],r=[];let a=Sm;for(let n=0;n<wm;n++){const i=cn(2,a);t.push(i);let o=1/i;n>Sm-Mm?o=Em[n-Sm+Mm-1]:0==n&&(o=0),r.push(o);const s=1/(i-1),d=-s/2,l=1+s/2,p=[d,d,l,d,l,l,d,d,l,l,d,l],c=6,u=6,m=3,f=2,h=1,v=new Float32Array(m*u*c),_=new Float32Array(f*u*c),b=new Float32Array(h*u*c);for(let e=0;e<c;e++){const t=2*(e%3)/3-1,r=2<e?0:-1;v.set([t,r,0,t+2/3,r,0,t+2/3,r+1,0,t,r,0,t+2/3,r+1,0,t,r+1,0],m*u*e),_.set(p,f*u*e);const a=[e,e,e,e,e,e];b.set(a,h*u*e)}const y=new A;y.setAttribute('position',new g(v,m)),y.setAttribute('uv',new g(_,f)),y.setAttribute('faceIndex',new g(b,h)),e.push(y),a>Mm&&a--}return{_lodPlanes:e,_sizeLods:t,_sigmas:r}}(),Nm=new Fl;let Dm=null;const zm=(1+2.23606797749979)/2,Bm=1/zm,Um=[new Sd(1,1,1),new Sd(-1,1,1),new Sd(1,1,-1),new Sd(-1,1,-1),new Sd(0,zm,Bm),new Sd(0,zm,-Bm),new Sd(Bm,0,zm),new Sd(-Bm,0,zm),new Sd(zm,Bm,0),new Sd(-zm,Bm,0)];Ra.create=function(e,t){return console.log('THREE.Curve.create() has been deprecated'),e.prototype=Object.create(Ra.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},Object.assign(Qa.prototype,{createPointsGeometry:function(e){console.warn('THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.');const t=this.getPoints(e);return this.createGeometry(t)},createSpacedPointsGeometry:function(e){console.warn('THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.');const t=this.getSpacedPoints(e);return this.createGeometry(t)},createGeometry:function(e){console.warn('THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.');const t=new lr;for(let r=0,a=e.length;r<a;r++){const a=e[r];t.vertices.push(new Sd(a.x,a.y,a.z||0))}return t}}),Object.assign(Ka.prototype,{fromPoints:function(e){return console.warn('THREE.Path: .fromPoints() has been renamed to .setFromPoints().'),this.setFromPoints(e)}}),function(e){console.warn('THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.'),Na.call(this,e),this.type='catmullrom',this.closed=!0}.prototype=Object.create(Na.prototype),function(e){console.warn('THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.'),Na.call(this,e),this.type='catmullrom'}.prototype=Object.create(Na.prototype),qi.prototype=Object.create(Na.prototype),Object.assign(qi.prototype,{initFromArray:function(){console.error('THREE.Spline: .initFromArray() has been removed.')},getControlPointsArray:function(){console.error('THREE.Spline: .getControlPointsArray() has been removed.')},reparametrizeByArcLength:function(){console.error('THREE.Spline: .reparametrizeByArcLength() has been removed.')}}),class extends er{constructor(e=10,t=10,r=4473924,a=8947848){r=new Fl(r),a=new Fl(a);const n=e/2,o=[],s=[];for(let d=0,i=0,l=-n;d<=t;d++,l+=e/t){o.push(-n,0,l,n,0,l),o.push(l,0,-n,l,0,n);const e=d===t/2?r:a;e.toArray(s,i),i+=3,e.toArray(s,i),i+=3,e.toArray(s,i),i+=3,e.toArray(s,i),i+=3}const i=new A;i.setAttribute('position',new E(o,3)),i.setAttribute('color',new E(s,3));const d=new Kt({vertexColors:!0,toneMapped:!1});super(i,d),this.type='GridHelper'}}.prototype.setColors=function(){console.error('THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.')},class extends er{constructor(e){const t=Ui(e),r=new A,a=[],n=[],o=new Fl(0,0,1),s=new Fl(0,1,0);for(let r=0;r<t.length;r++){const e=t[r];e.parent&&e.parent.isBone&&(a.push(0,0,0),a.push(0,0,0),n.push(o.r,o.g,o.b),n.push(s.r,s.g,s.b))}r.setAttribute('position',new E(a,3)),r.setAttribute('color',new E(n,3));const i=new Kt({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(r,i),this.type='SkeletonHelper',this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,r=this.geometry,a=r.getAttribute('position');nm.copy(this.root.matrixWorld).invert();for(let r=0,i=0;r<t.length;r++){const e=t[r];e.parent&&e.parent.isBone&&(im.multiplyMatrices(nm,e.matrixWorld),am.setFromMatrixPosition(im),a.setXYZ(i,am.x,am.y,am.z),im.multiplyMatrices(nm,e.parent.matrixWorld),am.setFromMatrixPosition(im),a.setXYZ(i+1,am.x,am.y,am.z),i+=2)}r.getAttribute('position').needsUpdate=!0,super.updateMatrixWorld(e)}}.prototype.update=function(){console.error('THREE.SkeletonHelper: update() no longer needs to be called.')},Object.assign(ba.prototype,{extractUrlBase:function(e){return console.warn('THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.'),Su.extractUrlBase(e)}}),ba.Handlers={add:function(){console.error('THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.')},get:function(){console.error('THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.')}},Object.assign(class{constructor(e,t){Object.defineProperty(this,'isBox2',{value:!0}),this.min=e===void 0?new hd(+Infinity,+Infinity):e,this.max=t===void 0?new hd(-Infinity,-Infinity):t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const r=$u.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=+Infinity,this.max.x=this.max.y=-Infinity,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return void 0===e&&(console.warn('THREE.Box2: .getCenter() target is now required'),e=new hd),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return void 0===e&&(console.warn('THREE.Box2: .getSize() target is now required'),e=new hd),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return void 0===t&&(console.warn('THREE.Box2: .getParameter() target is now required'),t=new hd),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return void 0===t&&(console.warn('THREE.Box2: .clampPoint() target is now required'),t=new hd),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){const t=$u.copy(e).clamp(this.min,this.max);return t.sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}.prototype,{center:function(e){return console.warn('THREE.Box2: .center() has been renamed to .getCenter().'),this.getCenter(e)},empty:function(){return console.warn('THREE.Box2: .empty() has been renamed to .isEmpty().'),this.isEmpty()},isIntersectionBox:function(e){return console.warn('THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().'),this.intersectsBox(e)},size:function(e){return console.warn('THREE.Box2: .size() has been renamed to .getSize().'),this.getSize(e)}}),Object.assign(wd.prototype,{center:function(e){return console.warn('THREE.Box3: .center() has been renamed to .getCenter().'),this.getCenter(e)},empty:function(){return console.warn('THREE.Box3: .empty() has been renamed to .isEmpty().'),this.isEmpty()},isIntersectionBox:function(e){return console.warn('THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().'),this.intersectsBox(e)},isIntersectionSphere:function(e){return console.warn('THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().'),this.intersectsSphere(e)},size:function(e){return console.warn('THREE.Box3: .size() has been renamed to .getSize().'),this.getSize(e)}}),Object.assign(Od.prototype,{empty:function(){return console.warn('THREE.Sphere: .empty() has been renamed to .isEmpty().'),this.isEmpty()}}),Tp.prototype.setFromMatrix=function(e){return console.warn('THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().'),this.setFromProjectionMatrix(e)},class{constructor(e,t){this.start=e===void 0?new Sd:e,this.end=t===void 0?new Sd:t}set(e,t){return this.start.copy(e),this.end.copy(t),this}clone(){return new this.constructor().copy(this)}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return void 0===e&&(console.warn('THREE.Line3: .getCenter() target is now required'),e=new Sd),e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return void 0===e&&(console.warn('THREE.Line3: .delta() target is now required'),e=new Sd),e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return void 0===t&&(console.warn('THREE.Line3: .at() target is now required'),t=new Sd),this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,r){em.subVectors(e,this.start),tm.subVectors(this.end,this.start);const a=tm.dot(tm),i=tm.dot(em);let n=i/a;return r&&(n=gd.clamp(n,0,1)),n}closestPointToPoint(e,r,a){const i=this.closestPointToPointParameter(e,r);return void 0===a&&(console.warn('THREE.Line3: .closestPointToPoint() target is now required'),a=new Sd),this.delta(a).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}}.prototype.center=function(e){return console.warn('THREE.Line3: .center() has been renamed to .getCenter().'),this.getCenter(e)},Object.assign(gd,{random16:function(){return console.warn('THREE.Math: .random16() has been deprecated. Use Math.random() instead.'),Math.random()},nearestPowerOfTwo:function(e){return console.warn('THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().'),gd.floorPowerOfTwo(e)},nextPowerOfTwo:function(e){return console.warn('THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().'),gd.ceilPowerOfTwo(e)}}),Object.assign(yd.prototype,{flattenToArrayOffset:function(e,t){return console.warn('THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.'),this.toArray(e,t)},multiplyVector3:function(e){return console.warn('THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.'),e.applyMatrix3(this)},multiplyVector3Array:function(){console.error('THREE.Matrix3: .multiplyVector3Array() has been removed.')},applyToBufferAttribute:function(e){return console.warn('THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.'),e.applyMatrix3(this)},applyToVector3Array:function(){console.error('THREE.Matrix3: .applyToVector3Array() has been removed.')},getInverse:function(e){return console.warn('THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.'),this.copy(e).invert()}}),Object.assign(Jd.prototype,{extractPosition:function(e){return console.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().'),this.copyPosition(e)},flattenToArrayOffset:function(e,t){return console.warn('THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.'),this.toArray(e,t)},getPosition:function(){return console.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.'),new Sd().setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(e){return console.warn('THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().'),this.makeRotationFromQuaternion(e)},multiplyToArray:function(){console.warn('THREE.Matrix4: .multiplyToArray() has been removed.')},multiplyVector3:function(e){return console.warn('THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.'),e.applyMatrix4(this)},multiplyVector4:function(e){return console.warn('THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.'),e.applyMatrix4(this)},multiplyVector3Array:function(){console.error('THREE.Matrix4: .multiplyVector3Array() has been removed.')},rotateAxis:function(e){console.warn('THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.'),e.transformDirection(this)},crossVector:function(e){return console.warn('THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.'),e.applyMatrix4(this)},translate:function(){console.error('THREE.Matrix4: .translate() has been removed.')},rotateX:function(){console.error('THREE.Matrix4: .rotateX() has been removed.')},rotateY:function(){console.error('THREE.Matrix4: .rotateY() has been removed.')},rotateZ:function(){console.error('THREE.Matrix4: .rotateZ() has been removed.')},rotateByAxis:function(){console.error('THREE.Matrix4: .rotateByAxis() has been removed.')},applyToBufferAttribute:function(e){return console.warn('THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.'),e.applyMatrix4(this)},applyToVector3Array:function(){console.error('THREE.Matrix4: .applyToVector3Array() has been removed.')},makeFrustum:function(e,t,r,a,i,n){return console.warn('THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.'),this.makePerspective(e,t,a,r,i,n)},getInverse:function(e){return console.warn('THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.'),this.copy(e).invert()}}),Tl.prototype.isIntersectionLine=function(e){return console.warn('THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().'),this.intersectsLine(e)},Object.assign(Md.prototype,{multiplyVector3:function(e){return console.warn('THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.'),e.applyQuaternion(this)},inverse:function(){return console.warn('THREE.Quaternion: .inverse() has been renamed to invert().'),this.invert()}}),Object.assign(Zd.prototype,{isIntersectionBox:function(e){return console.warn('THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().'),this.intersectsBox(e)},isIntersectionPlane:function(e){return console.warn('THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().'),this.intersectsPlane(e)},isIntersectionSphere:function(e){return console.warn('THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().'),this.intersectsSphere(e)}}),Object.assign(zl.prototype,{area:function(){return console.warn('THREE.Triangle: .area() has been renamed to .getArea().'),this.getArea()},barycoordFromPoint:function(e,t){return console.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().'),this.getBarycoord(e,t)},midpoint:function(e){return console.warn('THREE.Triangle: .midpoint() has been renamed to .getMidpoint().'),this.getMidpoint(e)},normal:function(e){return console.warn('THREE.Triangle: .normal() has been renamed to .getNormal().'),this.getNormal(e)},plane:function(e){return console.warn('THREE.Triangle: .plane() has been renamed to .getPlane().'),this.getPlane(e)}}),Object.assign(zl,{barycoordFromPoint:function(e,t,r,a,i){return console.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().'),zl.getBarycoord(e,t,r,a,i)},normal:function(e,t,r,a){return console.warn('THREE.Triangle: .normal() has been renamed to .getNormal().'),zl.getNormal(e,t,r,a)}}),Object.assign($a.prototype,{extractAllPoints:function(e){return console.warn('THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.'),this.extractPoints(e)},extrude:function(e){return console.warn('THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.'),new Qc(this,e)},makeGeometry:function(e){return console.warn('THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.'),new au(this,e)}}),Object.assign(hd.prototype,{fromAttribute:function(e,t,r){return console.warn('THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().'),this.fromBufferAttribute(e,t,r)},distanceToManhattan:function(e){return console.warn('THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().'),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn('THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().'),this.manhattanLength()}}),Object.assign(Sd.prototype,{setEulerFromRotationMatrix:function(){console.error('THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.')},setEulerFromQuaternion:function(){console.error('THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.')},getPositionFromMatrix:function(e){return console.warn('THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().'),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().'),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn('THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().'),this.setFromMatrixColumn(t,e)},applyProjection:function(e){return console.warn('THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.'),this.applyMatrix4(e)},fromAttribute:function(e,t,r){return console.warn('THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().'),this.fromBufferAttribute(e,t,r)},distanceToManhattan:function(e){return console.warn('THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().'),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn('THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().'),this.manhattanLength()}}),Object.assign(bd.prototype,{fromAttribute:function(e,t,r){return console.warn('THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().'),this.fromBufferAttribute(e,t,r)},lengthManhattan:function(){return console.warn('THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().'),this.manhattanLength()}}),Object.assign(lr.prototype,{computeTangents:function(){console.error('THREE.Geometry: .computeTangents() has been removed.')},computeLineDistances:function(){console.error('THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.')},applyMatrix:function(e){return console.warn('THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4().'),this.applyMatrix4(e)}}),Object.assign(l.prototype,{getChildByName:function(e){return console.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().'),this.getObjectByName(e)},renderDepth:function(){console.warn('THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.')},translate:function(e,t){return console.warn('THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.'),this.translateOnAxis(t,e)},getWorldRotation:function(){console.error('THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.')},applyMatrix:function(e){return console.warn('THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().'),this.applyMatrix4(e)}}),Object.defineProperties(l.prototype,{eulerOrder:{get:function(){return console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.'),this.rotation.order},set:function(e){console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.'),this.rotation.order=e}},useQuaternion:{get:function(){console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.')},set:function(){console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.')}}}),Object.assign(R.prototype,{setDrawMode:function(){console.error('THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.')}}),Object.defineProperties(R.prototype,{drawMode:{get:function(){return console.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.'),0},set:function(){console.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.')}}}),Object.defineProperties(qt.prototype,{objects:{get:function(){return console.warn('THREE.LOD: .objects has been renamed to .levels.'),this.levels}}}),Object.defineProperty(Jt.prototype,'useVertexTexture',{get:function(){console.warn('THREE.Skeleton: useVertexTexture has been removed.')},set:function(){console.warn('THREE.Skeleton: useVertexTexture has been removed.')}}),Yt.prototype.initBones=function(){console.error('THREE.SkinnedMesh: initBones() has been removed.')},Object.defineProperty(Ra.prototype,'__arcLengthDivisions',{get:function(){return console.warn('THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.'),this.arcLengthDivisions},set:function(e){console.warn('THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.'),this.arcLengthDivisions=e}}),B.prototype.setLens=function(e,t){console.warn('THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup.'),t!==void 0&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(ei.prototype,{onlyShadow:{set:function(){console.warn('THREE.Light: .onlyShadow has been removed.')}},shadowCameraFov:{set:function(e){console.warn('THREE.Light: .shadowCameraFov is now .shadow.camera.fov.'),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn('THREE.Light: .shadowCameraLeft is now .shadow.camera.left.'),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn('THREE.Light: .shadowCameraRight is now .shadow.camera.right.'),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn('THREE.Light: .shadowCameraTop is now .shadow.camera.top.'),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn('THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.'),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn('THREE.Light: .shadowCameraNear is now .shadow.camera.near.'),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn('THREE.Light: .shadowCameraFar is now .shadow.camera.far.'),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn('THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.')}},shadowBias:{set:function(e){console.warn('THREE.Light: .shadowBias is now .shadow.bias.'),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn('THREE.Light: .shadowDarkness has been removed.')}},shadowMapWidth:{set:function(e){console.warn('THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.'),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn('THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.'),this.shadow.mapSize.height=e}}}),Object.defineProperties(g.prototype,{length:{get:function(){return console.warn('THREE.BufferAttribute: .length has been deprecated. Use .count instead.'),this.array.length}},dynamic:{get:function(){return console.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.'),this.usage===cd},set:function(){console.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.'),this.setUsage(cd)}}}),Object.assign(g.prototype,{setDynamic:function(e){return console.warn('THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.'),this.setUsage(!0===e?cd:pd),this},copyIndicesArray:function(){console.error('THREE.BufferAttribute: .copyIndicesArray() has been removed.')},setArray:function(){console.error('THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers')}}),Object.assign(A.prototype,{addIndex:function(e){console.warn('THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().'),this.setIndex(e)},addAttribute:function(e,t){return console.warn('THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().'),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?'index'===e?(console.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.'),this.setIndex(t),this):this.setAttribute(e,t):(console.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).'),this.setAttribute(e,new g(arguments[1],arguments[2])))},addDrawCall:function(e,t,r){r!==void 0&&console.warn('THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.'),console.warn('THREE.BufferGeometry: .addDrawCall() is now .addGroup().'),this.addGroup(e,t)},clearDrawCalls:function(){console.warn('THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().'),this.clearGroups()},computeTangents:function(){console.warn('THREE.BufferGeometry: .computeTangents() has been removed.')},computeOffsets:function(){console.warn('THREE.BufferGeometry: .computeOffsets() has been removed.')},removeAttribute:function(e){return console.warn('THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().'),this.deleteAttribute(e)},applyMatrix:function(e){return console.warn('THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().'),this.applyMatrix4(e)}}),Object.defineProperties(A.prototype,{drawcalls:{get:function(){return console.error('THREE.BufferGeometry: .drawcalls has been renamed to .groups.'),this.groups}},offsets:{get:function(){return console.warn('THREE.BufferGeometry: .offsets has been renamed to .groups.'),this.groups}}}),Object.defineProperties(fi.prototype,{maxInstancedCount:{get:function(){return console.warn('THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.'),this.instanceCount},set:function(e){console.warn('THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.'),this.instanceCount=e}}}),Object.defineProperties(Ni.prototype,{linePrecision:{get:function(){return console.warn('THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.'),this.params.Line.threshold},set:function(e){console.warn('THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.'),this.params.Line.threshold=e}}}),Object.defineProperties(Vt.prototype,{dynamic:{get:function(){return console.warn('THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.'),this.usage===cd},set:function(e){console.warn('THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.'),this.setUsage(e)}}}),Object.assign(Vt.prototype,{setDynamic:function(e){return console.warn('THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.'),this.setUsage(!0===e?cd:pd),this},setArray:function(){console.error('THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers')}}),Object.assign(Zc.prototype,{getArrays:function(){console.error('THREE.ExtrudeBufferGeometry: .getArrays() has been removed.')},addShapeList:function(){console.error('THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.')},addShape:function(){console.error('THREE.ExtrudeBufferGeometry: .addShape() has been removed.')}}),Object.assign(Yp.prototype,{dispose:function(){console.error('THREE.Scene: .dispose() has been removed.')}}),Object.defineProperties(Ku.prototype,{dynamic:{set:function(){console.warn('THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.')}},onUpdate:{value:function(){return console.warn('THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.'),this}}}),Object.defineProperties(m.prototype,{wrapAround:{get:function(){console.warn('THREE.Material: .wrapAround has been removed.')},set:function(){console.warn('THREE.Material: .wrapAround has been removed.')}},overdraw:{get:function(){console.warn('THREE.Material: .overdraw has been removed.')},set:function(){console.warn('THREE.Material: .overdraw has been removed.')}},wrapRGB:{get:function(){return console.warn('THREE.Material: .wrapRGB has been removed.'),new Fl}},shading:{get:function(){console.error('THREE.'+this.type+': .shading has been removed. Use the boolean .flatShading instead.')},set:function(e){console.warn('THREE.'+this.type+': .shading has been removed. Use the boolean .flatShading instead.'),this.flatShading=e===An}},stencilMask:{get:function(){return console.warn('THREE.'+this.type+': .stencilMask has been removed. Use .stencilFuncMask instead.'),this.stencilFuncMask},set:function(e){console.warn('THREE.'+this.type+': .stencilMask has been removed. Use .stencilFuncMask instead.'),this.stencilFuncMask=e}}}),Object.defineProperties($r.prototype,{metal:{get:function(){return console.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.'),!1},set:function(){console.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead')}}}),Object.defineProperties(Kr.prototype,{transparency:{get:function(){return console.warn('THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission.'),this.transmission},set:function(e){console.warn('THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission.'),this.transmission=e}}}),Object.defineProperties(D.prototype,{derivatives:{get:function(){return console.warn('THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.'),this.extensions.derivatives},set:function(e){console.warn('THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.'),this.extensions.derivatives=e}}}),Object.assign(Gt.prototype,{clearTarget:function(e,t,r,a){console.warn('THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.'),this.setRenderTarget(e),this.clear(t,r,a)},animate:function(e){console.warn('THREE.WebGLRenderer: .animate() is now .setAnimationLoop().'),this.setAnimationLoop(e)},getCurrentRenderTarget:function(){return console.warn('THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().'),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn('THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().'),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn('THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.'),this.capabilities.precision},resetGLState:function(){return console.warn('THREE.WebGLRenderer: .resetGLState() is now .state.reset().'),this.state.reset()},supportsFloatTextures:function(){return console.warn('THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \'OES_texture_float\' ).'),this.extensions.get('OES_texture_float')},supportsHalfFloatTextures:function(){return console.warn('THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \'OES_texture_half_float\' ).'),this.extensions.get('OES_texture_half_float')},supportsStandardDerivatives:function(){return console.warn('THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \'OES_standard_derivatives\' ).'),this.extensions.get('OES_standard_derivatives')},supportsCompressedTextureS3TC:function(){return console.warn('THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \'WEBGL_compressed_texture_s3tc\' ).'),this.extensions.get('WEBGL_compressed_texture_s3tc')},supportsCompressedTexturePVRTC:function(){return console.warn('THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \'WEBGL_compressed_texture_pvrtc\' ).'),this.extensions.get('WEBGL_compressed_texture_pvrtc')},supportsBlendMinMax:function(){return console.warn('THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \'EXT_blend_minmax\' ).'),this.extensions.get('EXT_blend_minmax')},supportsVertexTextures:function(){return console.warn('THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.'),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn('THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \'ANGLE_instanced_arrays\' ).'),this.extensions.get('ANGLE_instanced_arrays')},enableScissorTest:function(e){console.warn('THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().'),this.setScissorTest(e)},initMaterial:function(){console.warn('THREE.WebGLRenderer: .initMaterial() has been removed.')},addPrePlugin:function(){console.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.')},addPostPlugin:function(){console.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.')},updateShadowMap:function(){console.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.')},setFaceCulling:function(){console.warn('THREE.WebGLRenderer: .setFaceCulling() has been removed.')},allocTextureUnit:function(){console.warn('THREE.WebGLRenderer: .allocTextureUnit() has been removed.')},setTexture:function(){console.warn('THREE.WebGLRenderer: .setTexture() has been removed.')},setTexture2D:function(){console.warn('THREE.WebGLRenderer: .setTexture2D() has been removed.')},setTextureCube:function(){console.warn('THREE.WebGLRenderer: .setTextureCube() has been removed.')},getActiveMipMapLevel:function(){return console.warn('THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().'),this.getActiveMipmapLevel()}}),Object.defineProperties(Gt.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn('THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.'),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn('THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.'),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.')},set:function(){console.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.')}},context:{get:function(){return console.warn('THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.'),this.getContext()}},vr:{get:function(){return console.warn('THREE.WebGLRenderer: .vr has been renamed to .xr'),this.xr}},gammaInput:{get:function(){return console.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.'),!1},set:function(){console.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.')}},gammaOutput:{get:function(){return console.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.'),!1},set:function(e){console.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.'),this.outputEncoding=!0===e?Qs:Js}},toneMappingWhitePoint:{get:function(){return console.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.'),1},set:function(){console.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.')}}}),Object.defineProperties(Ct.prototype,{cullFace:{get:function(){console.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.')},set:function(){console.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.')}},renderReverseSided:{get:function(){console.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.')},set:function(){console.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.')}},renderSingleSided:{get:function(){console.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.')},set:function(){console.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.')}}}),Object.defineProperties(o.prototype,{wrapS:{get:function(){return console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.'),this.texture.wrapS},set:function(e){console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.'),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.'),this.texture.wrapT},set:function(e){console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.'),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.'),this.texture.magFilter},set:function(e){console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.'),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.'),this.texture.minFilter},set:function(e){console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.'),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.'),this.texture.anisotropy},set:function(e){console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.'),this.texture.anisotropy=e}},offset:{get:function(){return console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.'),this.texture.offset},set:function(e){console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.'),this.texture.offset=e}},repeat:{get:function(){return console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.'),this.texture.repeat},set:function(e){console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.'),this.texture.repeat=e}},format:{get:function(){return console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.'),this.texture.format},set:function(e){console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.'),this.texture.format=e}},type:{get:function(){return console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.'),this.texture.type},set:function(e){console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.'),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.'),this.texture.generateMipmaps},set:function(e){console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.'),this.texture.generateMipmaps=e}}}),Object.defineProperties(Bu.prototype,{load:{value:function(e){console.warn('THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.');const t=this,r=new Si;return r.load(e,function(e){t.setBuffer(e)}),this}},startTime:{set:function(){console.warn('THREE.Audio: .startTime is now .play( delay ).')}}}),class{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let r=0;r<t.length;r++)e+=t[r];return e/t.length}}.prototype.getData=function(){return console.warn('THREE.AudioAnalyser: .getData() is now .getFrequencyData().'),this.getFrequencyData()},U.prototype.updateCubeMap=function(e,t){return console.warn('THREE.CubeCamera: .updateCubeMap() is now .update().'),this.update(e,t)},U.prototype.clear=function(e,t,r,a){return console.warn('THREE.CubeCamera: .clear() is now .renderTarget.clear().'),this.renderTarget.clear(e,t,r,a)};xd.crossOrigin=void 0,xd.loadTexture=function(e,t,r,a){console.warn('THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.');const i=new Aa;i.setCrossOrigin(this.crossOrigin);const n=i.load(e,r,void 0,a);return t&&(n.mapping=t),n},xd.loadTextureCube=function(e,t,r,a){console.warn('THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.');const i=new wa;i.setCrossOrigin(this.crossOrigin);const n=i.load(e,r,void 0,a);return t&&(n.mapping=t),n},xd.loadCompressedTexture=function(){console.error('THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.')},xd.loadCompressedTextureCube=function(){console.error('THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.')};'undefined'!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('register',{detail:{revision:'124'}}));var Hm={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:'varying vec2 vUv;\nvoid main() {\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}',fragmentShader:'uniform float opacity;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texel = texture2D( tDiffuse, vUv );\n\tgl_FragColor = opacity * texel;\n}'};Object.assign(Yi.prototype,{setSize:function(){},render:function(){console.error('THREE.Pass: .render() must be implemented in derived pass.')}}),Yi.FullScreenQuad=function(){var e=new si(-1,1,1,-1,0,1),t=new Ep(2,2),r=function(e){this._mesh=new R(t,e)};return Object.defineProperty(r.prototype,'material',{get:function(){return this._mesh.material},set:function(e){this._mesh.material=e}}),Object.assign(r.prototype,{dispose:function(){this._mesh.geometry.dispose()},render:function(t){t.render(this._mesh,e)}}),r}();var Fm=function(e,t){Yi.call(this),this.textureID=t===void 0?'tDiffuse':t,e instanceof D?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=yp.clone(e.uniforms),this.material=new D({defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.fsQuad=new Yi.FullScreenQuad(this.material)};Fm.prototype=Object.assign(Object.create(Yi.prototype),{constructor:Fm,render:function(e,t,r){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=r.texture),this.fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}});var Gm=function(e,t){Yi.call(this),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1};Gm.prototype=Object.assign(Object.create(Yi.prototype),{constructor:Gm,render:function(e,t,r){var a=e.getContext(),i=e.state;i.buffers.color.setMask(!1),i.buffers.depth.setMask(!1),i.buffers.color.setLocked(!0),i.buffers.depth.setLocked(!0);var n,o;this.inverse?(n=0,o=1):(n=1,o=0),i.buffers.stencil.setTest(!0),i.buffers.stencil.setOp(a.REPLACE,a.REPLACE,a.REPLACE),i.buffers.stencil.setFunc(a.ALWAYS,n,4294967295),i.buffers.stencil.setClear(o),i.buffers.stencil.setLocked(!0),e.setRenderTarget(r),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),i.buffers.color.setLocked(!1),i.buffers.depth.setLocked(!1),i.buffers.stencil.setLocked(!1),i.buffers.stencil.setFunc(a.EQUAL,1,4294967295),i.buffers.stencil.setOp(a.KEEP,a.KEEP,a.KEEP),i.buffers.stencil.setLocked(!0)}});var Om=function(){Yi.call(this),this.needsSwap=!1};Om.prototype=Object.create(Yi.prototype),Object.assign(Om.prototype,{render:function(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}});var Vm=function(e,t){if(this.renderer=e,void 0===t){var r=e.getSize(new hd);this._pixelRatio=e.getPixelRatio(),this._width=r.width,this._height=r.height,t=new o(this._width*this._pixelRatio,this._height*this._pixelRatio,{minFilter:Ao,magFilter:Ao,format:jo}),t.texture.name='EffectComposer.rt1'}else this._pixelRatio=1,this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name='EffectComposer.rt2',this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],void 0===Hm,void 0===Fm&&console.error('THREE.EffectComposer relies on ShaderPass'),this.copyPass=new Fm(Hm),this.clock=new Pu};Object.assign(Vm.prototype,{swapBuffers:function(){var e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e},addPass:function(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)},insertPass:function(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)},removePass:function(e){const t=this.passes.indexOf(e);-1!==t&&this.passes.splice(t,1)},isLastEnabledPass:function(e){for(var t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0},render:function(e){e===void 0&&(e=this.clock.getDelta());var t=this.renderer.getRenderTarget(),r=!1,a=this.passes.length,n,o;for(o=0;o<a;o++)if(n=this.passes[o],!1!==n.enabled){if(n.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(o),n.render(this.renderer,this.writeBuffer,this.readBuffer,e,r),n.needsSwap){if(r){var i=this.renderer.getContext(),s=this.renderer.state.buffers.stencil;s.setFunc(i.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),s.setFunc(i.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==Gm&&(n instanceof Gm?r=!0:n instanceof Om&&(r=!1))}this.renderer.setRenderTarget(t)},reset:function(e){if(e===void 0){var t=this.renderer.getSize(new hd);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,e=this.renderTarget1.clone(),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2},setSize:function(e,t){this._width=e,this._height=t;var r=this._width*this._pixelRatio,a=this._height*this._pixelRatio;this.renderTarget1.setSize(r,a),this.renderTarget2.setSize(r,a);for(var n=0;n<this.passes.length;n++)this.passes[n].setSize(r,a)},setPixelRatio:function(e){this._pixelRatio=e,this.setSize(this._width,this._height)}});var km=function(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1};Object.assign(km.prototype,{setSize:function(){},render:function(){console.error('THREE.Pass: .render() must be implemented in derived pass.')}}),km.FullScreenQuad=function(){var e=new si(-1,1,1,-1,0,1),t=new Ep(2,2),r=function(e){this._mesh=new R(t,e)};return Object.defineProperty(r.prototype,'material',{get:function(){return this._mesh.material},set:function(e){this._mesh.material=e}}),Object.assign(r.prototype,{dispose:function(){this._mesh.geometry.dispose()},render:function(t){t.render(this._mesh,e)}}),r}();var Wm=function(e,t,r,a,i){Yi.call(this),this.scene=e,this.camera=t,this.overrideMaterial=r,this.clearColor=a,this.clearAlpha=i===void 0?0:i,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new Fl};Wm.prototype=Object.assign(Object.create(Yi.prototype),{constructor:Wm,render:function(e,t,r){var a=e.autoClear;e.autoClear=!1;var i,n;this.overrideMaterial!==void 0&&(n=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor&&(e.getClearColor(this._oldClearColor),i=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:r),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor&&e.setClearColor(this._oldClearColor,i),this.overrideMaterial!==void 0&&(this.scene.overrideMaterial=n),e.autoClear=a}});var jm={uniforms:{tDiffuse:{value:null},amount:{value:.005},angle:{value:0}},vertexShader:'varying vec2 vUv;\nvoid main() {\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}',fragmentShader:'uniform sampler2D tDiffuse;\nuniform float amount;\nuniform float angle;\nvarying vec2 vUv;\nvoid main() {\n\tvec2 offset = amount * vec2( cos(angle), sin(angle));\n\tvec4 cr = texture2D(tDiffuse, vUv + offset);\n\tvec4 cga = texture2D(tDiffuse, vUv);\n\tvec4 cb = texture2D(tDiffuse, vUv - offset);\n\tgl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\n}'},Xm=function(){function e(){Zi(this,e),this.scene=new Yp,this.camera=new B(75,window.innerWidth/window.innerHeight,.1,1e3),this.renderer=new Gt,this.composer=null,this.init()}return Qi(e,[{key:'init',value:function(){this.renderer.setSize(window.innerWidth,window.innerHeight),document.getElementById('webgl').appendChild(this.renderer.domElement),this.camera.position.z=15,this.renderer.render(this.scene,this.camera),this.renderer.setClearColor(15414497,1),this.CameraTexture(),this.composer=new Vm(this.renderer),this.composer.addPass(new Wm(this.scene,this.camera));var e=new Fm(jm);e.uniforms.amount.value=.025,this.composer.addPass(e),this.animate()}},{key:'VideoTexture',value:function(){var e=new Ep(16,9,2),t=document.getElementById('video');t.play();var r=new nr(t),a=new f({map:r,opacity:1}),i=new R(e,a);i.position.x=-3,this.scene.add(i)}},{key:'CameraTexture',value:function(){var e=document.getElementById('video2'),t=new nr(e),r=new Ep(24,12),a=new f({map:t}),i=new R(r,a);this.scene.add(i);if(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia){navigator.mediaDevices.getUserMedia({video:{width:1280,height:720,facingMode:'environment'}}).then(function(t){e.srcObject=t,e.play()}).catch(function(e){console.error('Unable to access the camera/webcam.',e)})}else console.error('MediaDevices interface not available.')}},{key:'animate',value:function(){var e=this;requestAnimationFrame(function(){return e.animate()}),this.composer.render()}}]),e}(),qm=new Xm}]);